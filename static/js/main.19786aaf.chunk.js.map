{"version":3,"sources":["isometric/PERSPECTIVE.ts","isometric/objects/LinePath.tsx","isometric/3d/Anchor.tsx","isometric/3d/Viewport.tsx","isometric/3d/Coordinate.ts","isometric/objects/MonochromeBox.tsx","isometric/ui/ContextMenu.tsx","isometric/objects/MonochromeTile.tsx","scene/Scene.ts","scene/HelloWorld.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PERSPECTIVE","degrees","tileSize","isometricAngle","Math","PI","_isometricCos","cos","_isometricSin","sin","_isometricTan","tan","tileHeight","sqrt","pow","radians","toPixels","x","y","z","toCoords","cartX","cartY","isoY","createPerspective","distanceToCameraComparator","a","b","dX","dY","dZ","LinePath","path","stroke","strokeWidth","spatialCoordinates","map","coordinate","cc","c","reduce","lines","start","i","all","concat","x1","y1","x2","y2","String","Crosshair","size","points","Anchor","children","crosshairSize","pixels","useMemo","overflow","PIXEL_FRIENDLY_PYTHAGORAS","AbsolutelyPositionedContainer","styled","animated","div","Viewport","overlay","center","magnify","n","translateX","translateY","springStyles","useSpring","config","molasses","to","transform","style","ViewportSvgContainer","rest","width","height","shapeRendering","viewBox","join","NoAxis","YAxis","ZAxis","XAxis","ViewportHtmlContainer","axis","left","top","pixelWidth","Axis","Coordinate","this","coord","dx","dy","dz","abs","coordsToPixels","coords","borderWidth","COORDINATE_CLOSEST_TO_CAMERA","BORDER_NODES","XZ_NODES","YZ_NODES","XY_NODES","MonochromeBox","fill","Color","strokeLinecap","darken","saturate","innerStroke","lighten","desaturate","innerStrokeWidth","gProps","innerStrokeCss","string","strokeCss","ContextMenuArrow","ContextMenuBody","ContextMenuButton","button","ContextMenu","RandomScene","terrain","Array","from","_","floor","random","getCenterTopCoordinateOfBox","clone","HelloWorldContextMenu","HelloWorldSceneTerrain","monochromeBoxProps","toString","HelloWorldScene","scene","useState","focusedCoord","setFocusedCoord","undefined","contextMenuCoord","setContextMenuCoord","slice","sort","onClick","event","preventDefault","onContextMenu","AppHeader","header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","styles","css","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"4NAqDO,IAAMA,EAnCb,SAA2BC,EAAgBC,GAC1C,IAAMC,EAAiBF,GAAWG,KAAKC,GAAK,KACtCC,EAAgBF,KAAKG,IAAIJ,GACzBK,EAAgBJ,KAAKK,IAAIN,GACzBO,EAAgBN,KAAKO,IAAIR,GAMzBS,GAJiBR,KAAKS,KAC3BT,KAAKU,IAAIR,EAAe,GAAKF,KAAKU,IAAIN,EAAe,IAGnCN,GAEnB,MAAO,CACND,QAASA,EACTc,QAASd,GAAWG,KAAKC,GAAK,KAC9BH,SAAUA,EACVc,SAAU,SAACC,EAAeC,EAAeC,GAIxC,MAAO,EAHQF,EAAIC,GAAKZ,EAIfJ,GAHCe,EAAIC,GAAKV,EAIVN,EAAWU,EAAaO,IAGlCC,SAAU,SAACC,EAAmBC,GAC7B,IAAMC,EAAOb,EAAgBW,EAAQC,EAIrC,MAAO,GAHEA,EAAQC,IAASf,EAAgBe,GAG3BrB,EAAUqB,EAAOrB,KAKRsB,CAAkB,GA3CzB,IAiDb,SAASC,EACfC,EACAC,GAEA,IAAMC,EAAKD,EAAEV,EAAIS,EAAET,EACnB,GAAIW,EACH,OAAQA,EAGT,IAAMC,EAAKH,EAAER,EAAIS,EAAET,EACnB,GAAIW,EACH,OAAQA,EAET,IAAMC,EAAKH,EAAER,EAAIO,EAAEP,EACnB,OAAIW,GACKA,EAEF,E,6BCtEKC,EAIT,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAyD,IAAnDC,cAAmD,MAA1C,QAA0C,MAAjCC,mBAAiC,MAN3C,EAM2C,EAC3DC,EAAqBH,EACvBI,KAAI,SAAAC,GAAU,OAAIrC,EAAYgB,SAAZ,MAAAhB,EAAW,YAAaqC,OAC1CD,KAAI,SAAAE,GAAE,OAAIA,EAAGF,KAAI,SAAAG,GAAC,OAAIA,EATJ,QAWpB,OACC,mCACEJ,EAAmBK,QACnB,SAACC,EAAOC,EAAOC,EAAGC,GAAlB,OACCD,EACGF,EAAMI,OAAO,CACb,sBAECC,GAAIJ,EAAM,GACVK,GAAIL,EAAM,GACVM,GAAIJ,EAAID,EAAI,GAAG,GACfM,GAAIL,EAAID,EAAI,GAAG,GACfV,OAAQA,EACRC,YAAagB,OAAOhB,IANfS,KASNF,IACJ,OC1BEU,EAAiD,SAAC,GAAkB,IAAD,IAAfC,YAAe,MAAR,EAAQ,EAClEX,EAAwB,CAC7B,CAEC,EAAE,EAAIW,EAAM,EAAG,GACf,CAACA,EAAM,EAAG,IAEX,CAEC,CAAC,GAAI,EAAIA,EAAM,GACf,CAAC,EAAGA,EAAM,IAEX,CAEC,CAAC,EAAG,GAAI,EAAIA,GACZ,CAAC,EAAG,EAAGA,KAIT,OACC,mCACEX,EAAML,KAAI,SAACiB,EAAQV,GAAT,OACV,cAAC,EAAD,CAECX,KAAMqB,EACNpB,OAAQ,cACRC,YAAa,IAHRS,SAUGW,EAIT,SAAC,GAA0D,IAAD,IAAvDrC,SAAuD,MAAnD,EAAmD,MAAhDC,SAAgD,MAA5C,EAA4C,MAAzCC,SAAyC,MAArC,EAAqC,EAAlCoC,EAAkC,EAAlCA,SAAkC,IAAxBC,qBAAwB,MAAR,EAAQ,EACvDC,EAASC,mBAAQ,kBAAM1D,EAAYgB,SAASC,EAAGC,EAAGC,KAAI,CAACF,EAAGC,EAAGC,IAEnE,OACC,sBAAKF,EAAGwC,EAAO,GAAIvC,EAAGuC,EAAO,GAAIE,SAAU,UAA3C,UACEH,EAAgB,cAAC,EAAD,CAAWJ,KAAMI,IAAoB,KACrDD,M,kECxCEK,EAA4B,GAErBC,EAAgCC,YAAOC,WAASC,IAAhBF,CAAH,kMAoB7BG,EAAsD,SAAC,GAM7D,IALNC,EAKK,EALLA,QACAC,EAIK,EAJLA,OAIK,IAHLC,eAGK,MAHK,EAGL,EAFLb,EAEK,EAFLA,SAGA,GADK,iBAC4BG,mBAChC,kBAAM1D,EAAYgB,SAASmD,EAAOlD,EAAGkD,EAAOjD,EAAGiD,EAAOhD,GAAGiB,KAAI,SAAAiC,GAAC,OAAKA,OACnE,CAACF,KAFF,mBAAOG,EAAP,KAAmBC,EAAnB,KAKMC,EAAeC,oBAAU,CAC9BC,OAAQA,SAAOC,SACfC,GAAI,CACHC,UAAU,uBAAD,OACNP,EAAaF,EADP,wBAENG,EAAaH,EAFP,kBAOX,OACC,eAACP,EAAD,CAA+BiB,MAAON,EAAtC,UACC,cAAC,EAAD,CAAsBJ,QAASA,EAASb,SAAUA,IACjDW,MAKSa,EAET,SAAC,GAAD,QAAGX,eAAH,MAAa,EAAb,EAAmBY,EAAnB,wBACH,iCACCC,MAAM,MACNC,OAAO,MACPvB,SAAS,UACTwB,eAAe,qBACfC,QAAS,CAAC,EAAG,EAAG,EAAIhB,EAAS,EAAIA,GAASiB,KAAK,MAC3CL,KAIAM,EAASxB,IAAOE,IAAV,kFAKNuB,EAAQzB,YAAOwB,EAAPxB,CAAH,0EACU9D,EAAYC,QACtB2D,GAGL4B,EAAQ1B,YAAOwB,EAAPxB,CAAH,+GACW9D,EAAYC,QACxBD,EAAYC,QACXG,KAAKS,KAAK+C,GACVA,GAGL6B,EAAQ3B,YAAOwB,EAAPxB,CAAH,yEACS9D,EAAYC,QACrB2D,GAGE8B,EAMT,SAAC,GAA4D,IAAD,IAAzDzE,SAAyD,MAArD,EAAqD,MAAlDC,SAAkD,MAA9C,EAA8C,MAA3CC,SAA2C,MAAvC,EAAuC,EAApCwE,EAAoC,EAApCA,KAAMV,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,OAAQ3B,EAAe,EAAfA,SAChD,EAAoBvD,EAAYgB,SAASC,EAAGC,EAAGC,GAA/C,mBAAOyE,EAAP,KAAaC,EAAb,KACA,EAAqB7F,EAAYgB,SAAS,EAAGiE,EAAOC,GAA7CY,EAAP,oBACMC,EACI,MAATJ,EACGJ,EACS,MAATI,EACAF,EACS,MAATE,EACAH,EACAF,EACJ,OACC,cAACS,EAAD,CACCjB,MAAO,CACNc,OACAC,MACAZ,MAAOU,EACJG,EAAalC,EACbkC,EAAa,KAChBZ,OAAQS,EACLG,EAAalC,EACbkC,EAAa,MATlB,SAYEvC,K,cCvHSyC,EAAb,WAIC,WAAY/E,EAAeC,EAAeC,GAAgB,yBAH1DF,OAGyD,OAFzDC,OAEyD,OADzDC,OACyD,EACxD8E,KAAKhF,EAAIA,EACTgF,KAAK/E,EAAIA,EACT+E,KAAK9E,EAAIA,EAPX,yCAUC,WACC,OAAO,IAAI6E,EAAWC,KAAKhF,EAAGgF,KAAK/E,EAAG+E,KAAK9E,KAX7C,oBAcC,SAAO+E,GACN,OACCD,OAASC,GACRA,GACAD,KAAKhF,IAAMiF,EAAMjF,GACjBgF,KAAK/E,IAAMgF,EAAMhF,GACjB+E,KAAK9E,IAAM+E,EAAM/E,IApBrB,uBAwBC,WAA2D,IAAjDgF,EAAgD,uDAAnC,EAAGC,EAAgC,uDAAnB,EAAGC,EAAgB,uDAAH,EAKtD,OAJAJ,KAAKhF,GAAKkF,EACVF,KAAK/E,GAAKkF,EACVH,KAAK9E,GAAKkF,EAEHJ,OA7BT,iCAgCC,SAAoBC,GACnB,OAAO9F,KAAKkG,IAAIL,KAAKhF,EAAIiF,EAAMjF,GAAKb,KAAKkG,IAAIL,KAAK/E,EAAIgF,EAAMhF,KAjC9D,sBAqCC,WACC,MAAO,CAAC+E,KAAKhF,EAAGgF,KAAK/E,EAAG+E,KAAK9E,GAAGkE,KAAK,SAtCvC,K,oGCAA,SAASkB,EAAeC,GAAmD,IAA7BC,EAA4B,uDAFrD,EAGpB,OAAOD,EACLpE,KAAI,SAAAC,GAAU,OAAIrC,EAAYgB,SAAZ,MAAAhB,EAAW,YAAaqC,OAC1CD,KAAI,SAAAE,GAAE,OAAIA,EAAGF,KAAI,SAAAG,GAAC,OAAIA,EAAIkE,QAG7B,I,MAAMC,EAA+B1G,EAAYgB,SAAS,EAAG,EAAG,GAAGoB,KAClE,SAAAG,GAAC,OAAIA,EATe,KAYjBoE,EAAeJ,EAAe,CACjC,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAIJK,EAAWL,EAAe,CAC7B,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAIJM,EAAWN,EAAe,CAC7B,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAIJO,EAAWP,EAAe,CAC7B,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGKQ,EAST,SAAC,GAWE,IAAD,IAVLC,YAUK,MAVEC,IAAM,WAUR,MARLC,qBAQK,MARW,QAQX,MANLjF,cAMK,MANI+E,EAAKG,OAAO,IAAKC,SAAS,IAM9B,MALLlF,mBAKK,MALS,EAKT,MAHLmF,mBAGK,MAHSL,EAAKM,QAAQ,IAAKC,WAAW,IAGtC,MAFLC,wBAEK,MAFctF,EAEd,EADFuF,EACE,iBACCC,EAAiBL,GAAeA,EAAYM,SAC5CC,EAAY3F,GAAUA,EAAO0F,SAEnC,OACC,8CAAOF,GAAP,cACET,GACA,qCACC,yBAEC3D,OAAQuD,EAASxE,KAAI,SAAAG,GAAC,OAAIA,EAAE8C,KAAK,QAAMA,KAAK,KAC5C2B,KAAMA,EAAKW,SACXzF,YAAa,GAHR,MAKN,yBAECmB,OAAQyD,EAAS1E,KAAI,SAAAG,GAAC,OAAIA,EAAE8C,KAAK,QAAMA,KAAK,KAC5C2B,KAAMA,EAAKM,QAAQ,IAAKK,SACxBzF,YAAa,GAHR,MAKN,yBAECmB,OAAQwD,EAASzE,KAAI,SAAAG,GAAC,OAAIA,EAAE8C,KAAK,QAAMA,KAAK,KAC5C2B,KAAMA,EAAKG,OAAO,IAAKQ,SACvBzF,YAAa,GAHR,SAOPmF,GACA,qCACC,sBAECvE,GAAI4D,EAA6B,GACjC3D,GAAI2D,EAA6B,GACjC1D,GAAI2D,EAAa,GAAG,GACpB1D,GAAI0D,EAAa,GAAG,GACpB1E,OAAQyF,EACRxF,YAAasF,EACbN,cAAeA,GAPV,SASN,sBAECpE,GAAI4D,EAA6B,GACjC3D,GAAI2D,EAA6B,GACjC1D,GAAI2D,EAAa,GAAG,GACpB1D,GAAI0D,EAAa,GAAG,GACpB1E,OAAQyF,EACRxF,YAAasF,EACbN,cAAeA,GAPV,SASN,sBAECpE,GAAI4D,EAA6B,GACjC3D,GAAI2D,EAA6B,GACjC1D,GAAI2D,EAAa,GAAG,GACpB1D,GAAI0D,EAAa,GAAG,GACpB1E,OAAQyF,EACRxF,YAAasF,EACbN,cAAeA,GAPV,YAYR,yBAEC7D,OAAQsD,EAAavE,KAAI,SAAAG,GAAC,OAAIA,EAAE8C,KAAK,QAAMA,KAAK,KAChDpD,OAAQ2F,EACRZ,KAAM,cACN9E,YAAaA,EACbgF,cAAeA,GALV,gBCnIHW,GCE6B,CAClC,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAG8BzF,KAAI,SAAAC,GAAU,OACnDrC,EAAYgB,SAAZ,MAAAhB,EAAW,YAAaqC,OACvBD,KAAI,SAAAE,GAAE,OAAIA,EAAGF,KAAI,SAAAG,GAAC,OAAIA,EAVH,QDDIuB,IAAOE,IAAV,+NAShB8D,GAAkBhE,IAAOE,IAAV,6LASR+D,GAAoBjE,IAAOkE,OAAV,0VAgBjBC,GAAqC,SAAC,GAAkB,IAAhB1E,EAAe,EAAfA,SACpD,OACC,qCACC,cAACuE,GAAD,UAAkBvE,IAClB,cAACsE,EAAD,Q,gBEnCUK,GAAb,oDACC,WAAYjD,EAAeC,GAAiB,IAAD,8BAC1C,gBACKiD,QAAUC,MAAMC,KAAK,IAAID,MAAMnD,EAAQC,IAAS9C,KACpD,SAACkG,EAAG3F,GAAJ,OACC,IAAIqD,EACHrD,EAAIsC,EACJ7E,KAAKmI,MAAM5F,EAAIsC,GACC,GAAhB7E,KAAKoI,aAPkC,EAD5C,WAJA,sCACQL,QAAwB,M,kBCMhC,SAASM,GAA4BvC,GACpC,OAAOA,EAAMwC,QAAQ7D,UAAU,GAAK,GAAK,GAG1C,I,MAAM8D,GAED,SAAC,GAAoB,IAAlBtG,EAAiB,EAAjBA,WACP,OAAKA,EAIJ,cAAC,EAAD,2BAA2BA,GAA3B,IAAuC4C,MAAO,EAAGC,OAAQ,EAAzD,SACC,eAAC,GAAD,WACC,cAAC6C,GAAD,sBACA,cAACA,GAAD,oBACA,cAACA,GAAD,4BAPK,MAaHa,GAIF,SAAC,GAAkD,IAApC1C,EAAmC,EAA/C7D,WAAsBwG,EAAyB,kBACrD,OACC,cAAC,EAAD,CAA+B5H,EAAGiF,EAAMjF,EAAGC,EAAGgF,EAAMhF,EAAGC,EAAG+E,EAAM/E,EAAhE,SACC,cAAC,EAAD,eAAmB0H,KADP3C,EAAM4C,aAMRC,GAAqC,WACjD,IAAMC,EAAQtF,mBAAQ,kBAAM,IAAIwE,GAAY,GAAI,MAAK,IAErD,EAAwCe,mBACvCR,GAA4B,IAAIzC,EAAW,EAAG,EAAG,MADlD,mBAAOkD,EAAP,KAAqBC,EAArB,KAIA,EAAgDF,wBAE9CG,GAFF,mBAAOC,EAAP,KAAyBC,EAAzB,KAIMnB,EAAUzE,mBACf,kBACCsF,EAAMb,QACJoB,QACAC,KAAK/H,GACLW,KAAI,SAAA8D,GAAK,OACT,cAAC,GAAD,CAEC7D,WAAY6D,EACZuD,QAAS,SAAAC,GACRA,EAAMC,iBACNL,OAAoBF,GACpBD,EAAgBV,GAA4BvC,KAE7C0D,cAAe,SAAAF,GACdA,EAAMC,iBACNL,EACCb,GAA4BvC,MAVzBA,EAAM4C,iBAef,CAACE,EAAMb,UAGR,OACC,mCACC,cAAC,EAAD,CACChE,OAAQ+E,EACR9E,QAAS,EACTF,QACC,cAAC,GAAD,CAAuB7B,WAAYgH,IAJrC,SAOElB,O,SCjFC0B,GAAY/F,IAAOgG,OAAV,yQAcAhG,IAAOE,IAAV,iMAmBG+F,I,GAAAA,GATf,WACC,OACC,aAACF,GAAD,UACC,aAAC,GAAD,OCjBYG,GAdS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MACpB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFNQ,GAASC,YAAH,ibAgBZC,IAASC,OACR,eAAC,IAAMC,WAAP,WACC,cAAC,IAAD,CAAQJ,OAAQA,KAEhB,cAAC,GAAD,OAEDK,SAASC,eAAe,SAMzBf,GAAgBgB,QAAQC,O","file":"static/js/main.19786aaf.chunk.js","sourcesContent":["import { CoordinateLike } from './3d/Coordinate';\n//     z+\n//     |     y+\n//     |    /\n//     |  /\n//     |/\n// 0,0  \\\n//        \\\n//          \\ x+\n\nconst BASE_LENGTH = 24;\n\nexport type CoordValue = number;\nexport type Length = number;\nexport type Angle = number;\nexport type CoordArray = [CoordValue, CoordValue, CoordValue];\nexport type CoordObject = { x: CoordValue; y: CoordValue; z: CoordValue };\n\nfunction createPerspective(degrees: Angle, tileSize: Length) {\n\tconst isometricAngle = degrees * (Math.PI / 180);\n\tconst _isometricCos = Math.cos(isometricAngle);\n\tconst _isometricSin = Math.sin(isometricAngle);\n\tconst _isometricTan = Math.tan(isometricAngle);\n\n\tconst _isometricDist = Math.sqrt(\n\t\tMath.pow(_isometricCos, 2) + Math.pow(_isometricSin, 2)\n\t); // pythagoras\n\n\tconst tileHeight = tileSize;\n\n\treturn {\n\t\tdegrees: degrees,\n\t\tradians: degrees * (Math.PI / 180),\n\t\ttileSize: tileSize,\n\t\ttoPixels: (x: CoordValue, y: CoordValue, z: CoordValue) => {\n\t\t\tconst cartX = (x + y) * _isometricCos,\n\t\t\t\tcartY = (x - y) * _isometricSin;\n\n\t\t\treturn [\n\t\t\t\tcartX * tileSize, // x\n\t\t\t\tcartY * tileSize - tileHeight * z // y\n\t\t\t];\n\t\t},\n\t\ttoCoords: (cartX: CoordValue, cartY: CoordValue) => {\n\t\t\tconst isoY = _isometricTan * cartX + cartY,\n\t\t\t\tisoX = (cartY - isoY) / -_isometricSin - isoY;\n\n\t\t\t// this is good so far, b should be rescaled for tile size. as\n\t\t\treturn [isoX / tileSize, isoY / tileSize];\n\t\t}\n\t};\n}\n\nexport const PERSPECTIVE = createPerspective(30, BASE_LENGTH);\n\nexport function randomComparator() {\n\treturn 0.5 - Math.random();\n}\n\nexport function distanceToCameraComparator(\n\ta: CoordinateLike,\n\tb: CoordinateLike\n) {\n\tconst dX = b.x - a.x;\n\tif (dX) {\n\t\treturn -dX;\n\t}\n\n\tconst dY = a.y - b.y;\n\tif (dY) {\n\t\treturn -dY;\n\t}\n\tconst dZ = b.z - a.z;\n\tif (dZ) {\n\t\treturn -dZ;\n\t}\n\treturn 0;\n}\n","import React, { FunctionComponent, ReactElement } from 'react';\n\nimport { CoordArray, PERSPECTIVE } from '../PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nexport const LinePath: FunctionComponent<\n\tOmit<React.SVGProps<SVGLineElement>, 'path'> & {\n\t\tpath: CoordArray[];\n\t}\n> = ({ path, stroke = 'black', strokeWidth = BORDER_WIDTH }) => {\n\tlet spatialCoordinates = path\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + BORDER_WIDTH));\n\n\treturn (\n\t\t<>\n\t\t\t{spatialCoordinates.reduce<ReactElement[]>(\n\t\t\t\t(lines, start, i, all) =>\n\t\t\t\t\ti\n\t\t\t\t\t\t? lines.concat([\n\t\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tx1={start[0]}\n\t\t\t\t\t\t\t\t\ty1={start[1]}\n\t\t\t\t\t\t\t\t\tx2={all[i - 1][0]}\n\t\t\t\t\t\t\t\t\ty2={all[i - 1][1]}\n\t\t\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\t\t\tstrokeWidth={String(strokeWidth)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  ])\n\t\t\t\t\t\t: lines,\n\t\t\t\t[]\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import React, { FunctionComponent, useMemo } from 'react';\n\nimport { CoordArray, CoordObject, Length, PERSPECTIVE } from '../PERSPECTIVE';\nimport { LinePath } from '../objects/LinePath';\nimport { CoordinateLike } from './Coordinate';\n\nconst Crosshair: FunctionComponent<{ size: Length }> = ({ size = 4 }) => {\n\tconst lines: CoordArray[][] = [\n\t\t[\n\t\t\t// over the x axis\n\t\t\t[-1 * size, 0, 0],\n\t\t\t[size, 0, 0]\n\t\t],\n\t\t[\n\t\t\t// over the y axis\n\t\t\t[0, -1 * size, 0],\n\t\t\t[0, size, 0]\n\t\t],\n\t\t[\n\t\t\t// over the z axis\n\t\t\t[0, 0, -1 * size],\n\t\t\t[0, 0, size]\n\t\t]\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t{lines.map((points, i) => (\n\t\t\t\t<LinePath\n\t\t\t\t\tkey={i}\n\t\t\t\t\tpath={points}\n\t\t\t\t\tstroke={'rgba(0,0,0)'}\n\t\t\t\t\tstrokeWidth={0.5}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport const Anchor: FunctionComponent<\n\t{\n\t\tcrosshairSize?: Length;\n\t} & CoordinateLike\n> = ({ x = 0, y = 0, z = 0, children, crosshairSize = 0 }) => {\n\tconst pixels = useMemo(() => PERSPECTIVE.toPixels(x, y, z), [x, y, z]);\n\n\treturn (\n\t\t<svg x={pixels[0]} y={pixels[1]} overflow={'visible'}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</svg>\n\t);\n};\n","import React, { FunctionComponent, ReactElement, useMemo } from 'react';\nimport { animated, config, useSpring } from 'react-spring';\n\nimport styled from '@emotion/styled';\n\nimport { PERSPECTIVE, Length, CoordValue } from '../PERSPECTIVE';\nimport { CoordinateLike } from './Coordinate';\n\n// The pythagoras distance (1/sqrt(2)) with a little tweaking for better looks\nconst PIXEL_FRIENDLY_PYTHAGORAS = 0.8;\n\nexport const AbsolutelyPositionedContainer = styled(animated.div)`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\twidth: 0;\n\theight: 0;\n\tborder-radius: 50%;\n\t> * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n`;\n\ntype ViewportComponentProps = {\n\tmagnify?: number;\n\tcenter: CoordinateLike;\n\toverlay?: ReactElement;\n};\n\nexport const Viewport: FunctionComponent<ViewportComponentProps> = ({\n\toverlay,\n\tcenter,\n\tmagnify = 1,\n\tchildren,\n\t...rest\n}) => {\n\tconst [translateX, translateY] = useMemo(\n\t\t() => PERSPECTIVE.toPixels(center.x, center.y, center.z).map(n => -n),\n\t\t[center]\n\t);\n\n\tconst springStyles = useSpring({\n\t\tconfig: config.molasses,\n\t\tto: {\n\t\t\ttransform: `translate(\n\t\t\t\t${translateX * magnify}px,\n\t\t\t\t${translateY * magnify}px\n\t\t\t)`\n\t\t}\n\t});\n\n\treturn (\n\t\t<AbsolutelyPositionedContainer style={springStyles}>\n\t\t\t<ViewportSvgContainer magnify={magnify} children={children} />\n\t\t\t{overlay}\n\t\t</AbsolutelyPositionedContainer>\n\t);\n};\n\nexport const ViewportSvgContainer: FunctionComponent<\n\t{ magnify?: number } & React.SVGProps<SVGSVGElement>\n> = ({ magnify = 1, ...rest }) => (\n\t<svg\n\t\twidth=\"1px\"\n\t\theight=\"1px\"\n\t\toverflow=\"visible\"\n\t\tshapeRendering=\"geometricPrecision\"\n\t\tviewBox={[0, 0, 1 / magnify, 1 / magnify].join(' ')}\n\t\t{...rest}\n\t/>\n);\n\nconst NoAxis = styled.div`\n\tposition: absolute;\n\ttransform-origin: top left;\n`;\n\nconst YAxis = styled(NoAxis)`\n\ttransform: skewY(-${PERSPECTIVE.degrees}deg)\n\t\tscaleX(${PIXEL_FRIENDLY_PYTHAGORAS});\n`;\n\nconst ZAxis = styled(NoAxis)`\n\ttransform: rotate(-${PERSPECTIVE.degrees}deg)\n\t\tskewX(${PERSPECTIVE.degrees}deg)\n\t\tscaleX(${Math.sqrt(PIXEL_FRIENDLY_PYTHAGORAS)})\n\t\tscaleY(${PIXEL_FRIENDLY_PYTHAGORAS});\n`;\n\nconst XAxis = styled(NoAxis)`\n\ttransform: skewY(${PERSPECTIVE.degrees}deg)\n\t\tscaleX(${PIXEL_FRIENDLY_PYTHAGORAS});\n`;\n\nexport const ViewportHtmlContainer: FunctionComponent<\n\t{\n\t\taxis?: 'x' | 'y' | 'z';\n\t\twidth: Length;\n\t\theight: Length;\n\t} & Partial<CoordinateLike>\n> = ({ x = 0, y = 0, z = 0, axis, width, height, children }) => {\n\tconst [left, top] = PERSPECTIVE.toPixels(x, y, z);\n\tconst [pixelWidth] = PERSPECTIVE.toPixels(0, width, height);\n\tconst Axis =\n\t\taxis === 'y'\n\t\t\t? YAxis\n\t\t\t: axis === 'x'\n\t\t\t? XAxis\n\t\t\t: axis === 'z'\n\t\t\t? ZAxis\n\t\t\t: NoAxis;\n\treturn (\n\t\t<Axis\n\t\t\tstyle={{\n\t\t\t\tleft,\n\t\t\t\ttop,\n\t\t\t\twidth: axis\n\t\t\t\t\t? pixelWidth / PIXEL_FRIENDLY_PYTHAGORAS\n\t\t\t\t\t: pixelWidth + 'px',\n\t\t\t\theight: axis\n\t\t\t\t\t? pixelWidth / PIXEL_FRIENDLY_PYTHAGORAS\n\t\t\t\t\t: pixelWidth + 'px'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</Axis>\n\t);\n};\n","import { CoordObject, CoordValue, Length } from '../PERSPECTIVE';\nexport interface CoordinateLike {\n\tx: CoordValue;\n\ty: CoordValue;\n\tz: CoordValue;\n}\n\nexport class Coordinate implements CoordinateLike {\n\tx: CoordValue;\n\ty: CoordValue;\n\tz: CoordValue;\n\tconstructor(x: CoordValue, y: CoordValue, z: CoordValue) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tclone() {\n\t\treturn new Coordinate(this.x, this.y, this.z);\n\t}\n\n\tequals(coord: CoordinateLike) {\n\t\treturn (\n\t\t\tthis === coord ||\n\t\t\t(coord &&\n\t\t\t\tthis.x === coord.x &&\n\t\t\t\tthis.y === coord.y &&\n\t\t\t\tthis.z === coord.z)\n\t\t);\n\t}\n\n\ttransform(dx: Length = 0, dy: Length = 0, dz: Length = 0) {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\n\t\treturn this;\n\t}\n\n\tmanhattanDistanceTo(coord: CoordinateLike) {\n\t\treturn Math.abs(this.x - coord.x) + Math.abs(this.y - coord.y); // + Math.abs(this.z - coord.z);\n\t}\n\n\t// For debugging purposes only, may change without notice or tests\n\ttoString() {\n\t\treturn [this.x, this.y, this.z].join(',');\n\t}\n}\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\n\nimport { CoordArray, Length, PERSPECTIVE } from '../PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nfunction coordsToPixels(coords: CoordArray[], borderWidth = BORDER_WIDTH) {\n\treturn coords\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + borderWidth));\n}\n\nconst COORDINATE_CLOSEST_TO_CAMERA = PERSPECTIVE.toPixels(1, 0, 1).map(\n\tc => c + BORDER_WIDTH\n);\n\nlet BORDER_NODES = coordsToPixels([\n\t[1, 1, 0], // 0\n\t[1, 1, 1],\n\t[0, 1, 1], // 2\n\t[0, 0, 1],\n\t[0, 0, 0], // 4\n\t[1, 0, 0]\n]);\n\n// facing to the bottom left, aka -y\nlet XZ_NODES = coordsToPixels([\n\t[0, 0, 0],\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 0, 0]\n]);\n\n// facing to the bottom right, aka +x\nlet YZ_NODES = coordsToPixels([\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[1, 1, 1],\n\t[1, 0, 1]\n]);\n\n// facing top, aka +z\nlet XY_NODES = coordsToPixels([\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 1, 1],\n\t[0, 1, 1]\n]);\n\nexport const MonochromeBox: FunctionComponent<\n\t{\n\t\tstrokeLinecap?: 'round' | 'butt' | 'square' | 'inherit' | undefined;\n\t\tfill?: Color;\n\t\tstrokeWidth?: Length;\n\t\tinnerStrokeWidth?: Length;\n\t\tstroke?: Color;\n\t\tinnerStroke?: Color;\n\t} & Pick<React.SVGProps<SVGGElement>, 'onClick' | 'onContextMenu'>\n> = ({\n\tfill = Color('#282c34'),\n\n\tstrokeLinecap = 'round',\n\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = 1,\n\n\tinnerStroke = fill.lighten(0.4).desaturate(0.8),\n\tinnerStrokeWidth = strokeWidth,\n\t...gProps\n}) => {\n\tconst innerStrokeCss = innerStroke && innerStroke.string();\n\tconst strokeCss = stroke && stroke.string();\n\n\treturn (\n\t\t<g {...gProps}>\n\t\t\t{fill && (\n\t\t\t\t<>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xz'}\n\t\t\t\t\t\tpoints={XZ_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xy'}\n\t\t\t\t\t\tpoints={XY_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.lighten(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'yz'}\n\t\t\t\t\t\tpoints={YZ_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.darken(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{innerStroke && (\n\t\t\t\t<>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'x-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[3][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[3][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'y-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[1][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[1][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'z-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[5][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[5][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t<polygon\n\t\t\t\tkey={'outline'}\n\t\t\t\tpoints={BORDER_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\tstroke={strokeCss}\n\t\t\t\tfill={'transparent'}\n\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t/>\n\t\t</g>\n\t);\n};\n","import styled from '@emotion/styled';\nimport { FunctionComponent, useMemo } from 'react';\n\nconst ContextMenuArrow = styled.div`\n\twidth: 0;\n\theight: 0;\n\tborder-left: 6px solid transparent;\n\tborder-right: 6px solid transparent;\n\tborder-top: 6px solid rgba(255, 255, 255, 0.5);\n\ttransform: translate(-50%, -6px);\n`;\n\nconst ContextMenuBody = styled.div`\n\tposition: absolute;\n\tbottom: 100%;\n\tleft: 50%;\n\ttransform: translate(-50%, -6px);\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 3px;\n`;\n\nexport const ContextMenuButton = styled.button`\n\tbackground-color: rgba(255, 255, 255, 0.05);\n\tborder: none;\n\tdisplay: block;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tpadding: 0.5em 1em;\n\twhite-space: nowrap;\n\ttransition: background-color 0.5s;\n\tcolor: white;\n\t&:hover {\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\n\t\tcursor: pointer;\n\t}\n`;\n\nexport const ContextMenu: FunctionComponent<{}> = ({ children }) => {\n\treturn (\n\t\t<>\n\t\t\t<ContextMenuBody>{children}</ContextMenuBody>\n\t\t\t<ContextMenuArrow />\n\t\t</>\n\t);\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { CoordArray, PERSPECTIVE } from '../PERSPECTIVE';\n\nconst BORDER_WIDTH = 1;\nconst BORDER_NODES: CoordArray[] = [\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[0, 1, 0],\n\t[0, 0, 0]\n];\n\nlet spatialCoordinates = BORDER_NODES.map(coordinate =>\n\tPERSPECTIVE.toPixels(...coordinate)\n).map(cc => cc.map(c => c + BORDER_WIDTH));\n\nexport const MonochromeTile: FunctionComponent<\n\t{} & React.SVGProps<SVGPolygonElement>\n> = ({\n\tstroke = 'black',\n\tfill = 'rgba(100,100,160,0.8)',\n\tstrokeWidth = BORDER_WIDTH,\n\t...rest\n}) => {\n\treturn (\n\t\t<polygon\n\t\t\tpoints={spatialCoordinates.map(c => c.join(',')).join(' ')}\n\t\t\tstroke={stroke}\n\t\t\tfill={fill}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n","import { Coordinate } from '../isometric';\n\nexport class Scene {\n\tpublic terrain: Coordinate[] = [];\n}\n\nexport class RandomScene extends Scene {\n\tconstructor(width: number, height: number) {\n\t\tsuper();\n\t\tthis.terrain = Array.from(new Array(width * height)).map(\n\t\t\t(_, i) =>\n\t\t\t\tnew Coordinate(\n\t\t\t\t\ti % width,\n\t\t\t\t\tMath.floor(i / width),\n\t\t\t\t\tMath.random() * 0.3\n\t\t\t\t)\n\t\t);\n\t}\n}\n","import styled from '@emotion/styled';\nimport { FunctionComponent, useMemo, useState } from 'react';\n\nimport { Anchor, Coordinate, MonochromeBox, Viewport } from '../isometric';\nimport { ViewportHtmlContainer } from '../isometric/3d/Viewport';\nimport { distanceToCameraComparator } from '../isometric/PERSPECTIVE';\nimport { ContextMenu, ContextMenuButton } from '../isometric/ui/ContextMenu';\nimport { RandomScene } from './Scene';\n\nfunction getCenterTopCoordinateOfBox(coord: Coordinate) {\n\treturn coord.clone().transform(0.5, 0.5, 1);\n}\n\nconst HelloWorldContextMenu: FunctionComponent<{\n\tcoordinate?: Coordinate;\n}> = ({ coordinate }) => {\n\tif (!coordinate) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<ViewportHtmlContainer {...coordinate} width={0} height={0}>\n\t\t\t<ContextMenu>\n\t\t\t\t<ContextMenuButton>Go here</ContextMenuButton>\n\t\t\t\t<ContextMenuButton>Avoid</ContextMenuButton>\n\t\t\t\t<ContextMenuButton>Pick up</ContextMenuButton>\n\t\t\t</ContextMenu>\n\t\t</ViewportHtmlContainer>\n\t);\n};\n\nconst HelloWorldSceneTerrain: FunctionComponent<\n\t{\n\t\tcoordinate: Coordinate;\n\t} & (typeof MonochromeBox extends FunctionComponent<infer T> ? T : {})\n> = ({ coordinate: coord, ...monochromeBoxProps }) => {\n\treturn (\n\t\t<Anchor key={coord.toString()} x={coord.x} y={coord.y} z={coord.z}>\n\t\t\t<MonochromeBox {...monochromeBoxProps} />\n\t\t</Anchor>\n\t);\n};\n\nexport const HelloWorldScene: FunctionComponent = () => {\n\tconst scene = useMemo(() => new RandomScene(13, 13), []);\n\n\tconst [focusedCoord, setFocusedCoord] = useState(\n\t\tgetCenterTopCoordinateOfBox(new Coordinate(6, 6, 0.5))\n\t);\n\n\tconst [contextMenuCoord, setContextMenuCoord] = useState<\n\t\tCoordinate | undefined\n\t>(undefined);\n\n\tconst terrain = useMemo(\n\t\t() =>\n\t\t\tscene.terrain\n\t\t\t\t.slice()\n\t\t\t\t.sort(distanceToCameraComparator)\n\t\t\t\t.map(coord => (\n\t\t\t\t\t<HelloWorldSceneTerrain\n\t\t\t\t\t\tkey={coord.toString()}\n\t\t\t\t\t\tcoordinate={coord}\n\t\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tsetContextMenuCoord(undefined);\n\t\t\t\t\t\t\tsetFocusedCoord(getCenterTopCoordinateOfBox(coord));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonContextMenu={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tsetContextMenuCoord(\n\t\t\t\t\t\t\t\tgetCenterTopCoordinateOfBox(coord)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)),\n\t\t[scene.terrain]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Viewport\n\t\t\t\tcenter={focusedCoord}\n\t\t\t\tmagnify={1}\n\t\t\t\toverlay={\n\t\t\t\t\t<HelloWorldContextMenu coordinate={contextMenuCoord} />\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{terrain}\n\t\t\t</Viewport>\n\t\t</>\n\t);\n};\n","/** @jsxImportSource @emotion/react */\n\nimport styled from '@emotion/styled';\n\nimport { HelloWorldScene } from './scene/HelloWorld';\n\nconst AppHeader = styled.header`\n\tbackground-color: #282c34;\n\tmin-height: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: calc(10px + 2vmin);\n\tcolor: white;\n\n\ta {\n\t\tcolor: #61dafb;\n\t}\n`;\nconst CrossH = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 10px;\n\theight: 10px;\n\tborder-top: 1px solid red;\n\tborder-left: 1px solid blue;\n\tz-index: 9999;\n`;\nfunction App() {\n\treturn (\n\t\t<AppHeader>\n\t\t\t<HelloWorldScene />\n\t\t\t{/* <CrossH /> */}\n\t\t</AppHeader>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(\n\t\t\t({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\t\tgetCLS(onPerfEntry);\n\t\t\t\tgetFID(onPerfEntry);\n\t\t\t\tgetFCP(onPerfEntry);\n\t\t\t\tgetLCP(onPerfEntry);\n\t\t\t\tgetTTFB(onPerfEntry);\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Global, css } from '@emotion/react';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst styles = css`\n\tbody {\n\t\tmargin: 0;\n\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n\t\t\t'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n\t\t\t'Helvetica Neue', sans-serif;\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t}\n\n\tcode {\n\t\tfont-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n\t\t\tmonospace;\n\t}\n`;\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Global styles={styles} />\n\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}
{"version":3,"sources":["space/PERSPECTIVE.ts","space/LinePath.tsx","space/Anchor.tsx","textures/nebula-282c34.png","styles.ts","space/MonochromeBox.tsx","space/Viewport.tsx","demos/scaffolding.tsx","demos/demo.cubes.tsx","classes/Coordinate.ts","classes/BinaryHeap.ts","classes/Path.ts","util/events.ts","entities/Entity.tsx","entities/GuardEntity.tsx","jobs/Patrol.ts","space/MonochromeTile.tsx","classes/TerrainCoordinate.tsx","classes/TerrainGenerator.ts","classes/Terrain.ts","classes/Scene.ts","ui/ActiveEntityOverlay.tsx","demos/scene.hello-world.tsx","App.tsx","index.tsx"],"names":["PERSPECTIVE","degrees","tileSize","isometricAngle","Math","PI","_isometricCos","cos","_isometricSin","sin","_isometricTan","tan","tileHeight","radians","toPixels","x","y","z","toCoords","cartX","cartY","isoY","createPerspective","distanceToCameraComparator","a","b","dX","dY","dZ","LinePath","path","stroke","strokeWidth","spatialCoordinates","map","coordinate","cc","c","reduce","lines","start","i","all","concat","x1","y1","x2","y2","String","Crosshair","size","points","Anchor","children","crosshairSize","pixels","useMemo","overflow","MovingAnchor","moveTo","moveSpeed","onRest","onClick","dx","dy","ix","iy","loc","useSpring","to","config","duration","from","svg","color","white","Color","terrain","highlightedTerrain","lighten","styles","css","toString","darken","saturate","desaturate","mix","nebulaTexture","coordsToPixels","coords","borderWidth","COORDINATE_CLOSEST_TO_CAMERA","BORDER_NODES","XZ_NODES","YZ_NODES","XY_NODES","MonochromeBox","fill","strokeLinecap","innerStroke","innerStrokeWidth","gProps","innerStrokeCss","string","strokeCss","style","onContextMenu","cursor","join","PIXEL_FRIENDLY_PYTHAGORAS","pow","mathRoundMaybe","n","round","AbsolutelyPositionedContainer","styled","div","Viewport","overlay","center","zoom","translateX","translateY","springStyles","transform","ViewportSvgContainer","rest","width","height","shapeRendering","viewBox","NoAxis","Backdrop","sqrt","Demo","window","alert","Coordinate","this","coord","dz","isNaN","abs","xy","BinaryHeap","scoreFunction","content","element","push","sinkDown","length","result","end","pop","bubbleUp","node","indexOf","parentN","parent","elemScore","child2N","child1N","swap","child1Score","child1","child2","MANHATTAN","pos0","pos1","Path","graph","options","cache","heap","heuristic","Map","get","Error","f","closestNode","closestNodeHeuristics","h","g","closed","visited","set","currentNode","currentNodeHeuristics","tracePath","neighbors","getNeighbors","il","neighbor","neighborHeuristics","canWalkHere","gScore","beenVisited","hScore","closest","rescoreElement","heuristicReport","curr","unshift","Event","listeners","callback","splice","args","forEach","noop","Entity","id","location","pathStart","pathEnd","pathStepStart","pathStepEnd","Component","job","on","constructor","name","destination","find","unlisten","nextStep","shift","doPathStep","emit","hasNaN","EntityComponent","entity","useState","animatePosition","deps","cb","useCallback","eventDestroyers","d","useEffect","useEventListeners","euclideanDistanceTo","offset","GuardEntity","PatrolJob","waypoints","waypointIndex","destroyers","setTimeout","walkTo","random","MonochromeTile","TerrainCoordinate","TerrainCoordinateComponent","terrainCoordinate","isHovered","setIsHovered","translated","clone","undefined","onMouseEnter","onMouseLeave","opaquer","OUT_OF_BOUNDS","Symbol","average","values","valid","filter","val","sum","TerrainGenerator","max","detail","ceil","log","Float32Array","roughness","divide","half","scale","square","diamond","ave","Terrain","coordinates","coordinatesInRenderOrder","selector","island","seen","queue","current","neighbours","includes","open","slice","islands","next","getIslandOfCoordinate","getIndexForXy","getAtXy","Boolean","sort","generator","generate","Array","_","floor","sortedHeights","waterlineOffset","Scene","entities","play","generateRandom","walkableTiles","getIslands","guard","doJob","ActiveEntityOverlayBoundary","ActiveEntityOverlayBody","Avatar","ActiveEntityOverlay","label","scene","getCoordinatesInRenderOrder","event","preventDefault","setCenter","WORLD_SIZE","activeEntity","setActiveEntity","Demos","exact","component","DemoCubes","App","SceneHelloWorld","ReactDOM","render","StrictMode","globalStyleRules","hashType","document","getElementById"],"mappings":"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","file":"static/js/main.6b34dc57.chunk.js","sourcesContent":["import { CoordinateLike } from '../classes/Coordinate';\n//     z+\n//     |     y+\n//     |    /\n//     |  /\n//     |/\n// 0,0  \\\n//        \\\n//          \\ x+\n\nconst BASE_LENGTH = 32;\n\nexport type CoordValue = number;\nexport type Length = number;\nexport type Angle = number;\nexport type CoordArray = [CoordValue, CoordValue, CoordValue];\nexport type CoordObject = { x: CoordValue; y: CoordValue; z: CoordValue };\n\nfunction createPerspective(degrees: Angle, tileSize: Length) {\n\tconst isometricAngle = degrees * (Math.PI / 180);\n\tconst _isometricCos = Math.cos(isometricAngle);\n\tconst _isometricSin = Math.sin(isometricAngle);\n\tconst _isometricTan = Math.tan(isometricAngle);\n\n\tconst tileHeight = tileSize;\n\n\treturn {\n\t\tdegrees: degrees,\n\t\tradians: degrees * (Math.PI / 180),\n\t\ttileSize: tileSize,\n\t\ttoPixels: (x: CoordValue, y: CoordValue, z: CoordValue) => {\n\t\t\tconst cartX = (x + y) * _isometricCos,\n\t\t\t\tcartY = (x - y) * _isometricSin;\n\n\t\t\treturn [\n\t\t\t\tcartX * tileSize, // x\n\t\t\t\tcartY * tileSize - tileHeight * z // y\n\t\t\t];\n\t\t},\n\t\ttoCoords: (cartX: CoordValue, cartY: CoordValue) => {\n\t\t\tconst isoY = _isometricTan * cartX + cartY,\n\t\t\t\tisoX = (cartY - isoY) / -_isometricSin - isoY;\n\n\t\t\t// this is good so far, b should be rescaled for tile size. as\n\t\t\treturn [isoX / tileSize, isoY / tileSize];\n\t\t}\n\t};\n}\n\nexport const PERSPECTIVE = createPerspective(30, BASE_LENGTH);\n\nexport function randomComparator() {\n\treturn 0.5 - Math.random();\n}\n\nexport function distanceToCameraComparator(a: CoordinateLike, b: CoordinateLike) {\n\tconst dX = b.x - a.x;\n\tif (dX) {\n\t\treturn -dX;\n\t}\n\n\tconst dY = a.y - b.y;\n\tif (dY) {\n\t\treturn -dY;\n\t}\n\tconst dZ = b.z - a.z;\n\tif (dZ) {\n\t\treturn -dZ;\n\t}\n\treturn 0;\n}\n","import React, { FunctionComponent, ReactElement } from 'react';\n\nimport { CoordArray, PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nexport const LinePath: FunctionComponent<\n\tOmit<React.SVGProps<SVGLineElement>, 'path'> & {\n\t\tpath: CoordArray[];\n\t}\n> = ({ path, stroke = 'black', strokeWidth = BORDER_WIDTH }) => {\n\tlet spatialCoordinates = path\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + BORDER_WIDTH));\n\n\treturn (\n\t\t<>\n\t\t\t{spatialCoordinates.reduce<ReactElement[]>(\n\t\t\t\t(lines, start, i, all) =>\n\t\t\t\t\ti\n\t\t\t\t\t\t? lines.concat([\n\t\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tx1={start[0]}\n\t\t\t\t\t\t\t\t\ty1={start[1]}\n\t\t\t\t\t\t\t\t\tx2={all[i - 1][0]}\n\t\t\t\t\t\t\t\t\ty2={all[i - 1][1]}\n\t\t\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\t\t\tstrokeWidth={String(strokeWidth)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  ])\n\t\t\t\t\t\t: lines,\n\t\t\t\t[]\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { useSpring } from '@react-spring/core';\nimport { animated } from '@react-spring/web';\nimport React, { FunctionComponent, useMemo } from 'react';\nimport { CoordinateLike } from '../classes/Coordinate';\nimport { SvgMouseInteractionProps } from '../types';\nimport { LinePath } from './LinePath';\nimport { CoordArray, Length, PERSPECTIVE } from './PERSPECTIVE';\n\nconst Crosshair: FunctionComponent<{ size: Length }> = ({ size = 4 }) => {\n\tconst lines: CoordArray[][] = [\n\t\t[\n\t\t\t// over the x axis\n\t\t\t[-1 * size, 0, 0],\n\t\t\t[size, 0, 0]\n\t\t],\n\t\t[\n\t\t\t// over the y axis\n\t\t\t[0, -1 * size, 0],\n\t\t\t[0, size, 0]\n\t\t],\n\t\t[\n\t\t\t// over the z axis\n\t\t\t[0, 0, -1 * size],\n\t\t\t[0, 0, size]\n\t\t]\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t{lines.map((points, i) => (\n\t\t\t\t<LinePath key={i} path={points} stroke={'rgba(0,0,0)'} strokeWidth={0.5} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport const Anchor: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tcrosshairSize?: Length;\n\t} & Partial<CoordinateLike>\n> = ({ x = 0, y = 0, z = 0, children, crosshairSize = 0 }) => {\n\tconst pixels = useMemo(() => PERSPECTIVE.toPixels(x, y, z), [x, y, z]);\n\n\treturn (\n\t\t<svg x={pixels[0]} y={pixels[1]} overflow={'visible'}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</svg>\n\t);\n};\n\nexport const MovingAnchor: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tmoveTo: CoordinateLike;\n\t\tmoveSpeed: number;\n\t\tonRest?: () => void;\n\t\tcrosshairSize?: Length;\n\t}\n> = ({ moveTo, moveSpeed, onRest, children, crosshairSize = 0, onClick }) => {\n\tconst [dx, dy] = useMemo(() => PERSPECTIVE.toPixels(moveTo.x, moveTo.y, moveTo.z), [moveTo]);\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tconst [ix, iy] = useMemo(() => [dx, dy], []);\n\n\t// if (isNaN(dx) || isNaN(dy)) {\n\t// \tdebugger;\n\t// }\n\tconst loc = useSpring({\n\t\tto: {\n\t\t\tx: dx,\n\t\t\ty: dy\n\t\t},\n\t\tconfig: {\n\t\t\tduration: moveSpeed\n\t\t},\n\t\tfrom: {\n\t\t\tx: ix,\n\t\t\ty: iy\n\t\t},\n\t\tonRest\n\t});\n\n\t// @TODO reuse <Anchor>\n\treturn (\n\t\t<animated.svg x={loc.x} y={loc.y} overflow={'visible'} onClick={onClick}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</animated.svg>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/nebula-282c34.dda754f6.png\";","import { css } from '@emotion/react';\nimport Color from 'color';\nimport nebulaTexture from './textures/nebula-282c34.png';\n\nexport const color: Record<string, Color> = {};\ncolor.white = Color('#fff');\ncolor.terrain = Color('#282c34');\ncolor.highlightedTerrain = color.terrain.lighten(1);\n\nconst styles = css`\n\t:root {\n\t\t/*\n\t\t\tTerrain with nothing special about it:\n\t\t*/\n\t\t--color-terrain-normal-fill: ${color.terrain.toString()};\n\t\t--color-terrain-highlight-outer-stroke: ${color.terrain\n\t\t\t.darken(0.3)\n\t\t\t.saturate(0.3)\n\t\t\t.toString()};\n\t\t--color-terrain-highlight-inner-stroke: ${color.terrain\n\t\t\t.lighten(0.4)\n\t\t\t.desaturate(0.8)\n\t\t\t.toString()};\n\n\t\t/*\n\t\t\tTerrain that is being hovered over with the mouse\n\t\t*/\n\t\t--color-terrain-highlight-fill: ${color.terrain.lighten(1).toString()};\n\t\t--color-terrain-highlight-outer-stroke: ${Color('#fff').toString()};\n\t\t--color-terrain-highlight-inner-stroke: ${color.terrain.mix(color.white, 0.3).toString()};\n\t}\n\n\tbody {\n\t\tbackground: #282c34 url(${nebulaTexture});\n\t}\n\n\tp {\n\t\tmargin: 0;\n\t}\n`;\n\nexport default styles;\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { color } from '../styles';\nimport { SvgMouseInteractionProps } from '../types';\nimport { CoordArray, Length, PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nfunction coordsToPixels(coords: CoordArray[], borderWidth = BORDER_WIDTH) {\n\treturn coords\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + borderWidth));\n}\n\nconst COORDINATE_CLOSEST_TO_CAMERA = PERSPECTIVE.toPixels(1, 0, 1).map(c => c + BORDER_WIDTH);\n\nlet BORDER_NODES = coordsToPixels([\n\t[1, 1, 0], // 0\n\t[1, 1, 1],\n\t[0, 1, 1], // 2\n\t[0, 0, 1],\n\t[0, 0, 0], // 4\n\t[1, 0, 0]\n]);\n\n// facing to the bottom left, aka -y\nlet XZ_NODES = coordsToPixels([\n\t[0, 0, 0],\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 0, 0]\n]);\n\n// facing to the bottom right, aka +x\nlet YZ_NODES = coordsToPixels([\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[1, 1, 1],\n\t[1, 0, 1]\n]);\n\n// facing top, aka +z\nlet XY_NODES = coordsToPixels([\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 1, 1],\n\t[0, 1, 1]\n]);\n\nexport const MonochromeBox: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tsize?: number;\n\t\tstrokeLinecap?: 'round' | 'butt' | 'square' | 'inherit' | undefined;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t\tstrokeWidth?: Length;\n\t\tinnerStrokeWidth?: Length;\n\t\tinnerStroke?: Color;\n\t}\n> = ({\n\tsize = 1,\n\tfill = color.terrain,\n\tstrokeLinecap = 'round',\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = 1,\n\tinnerStroke = fill.lighten(0.4).desaturate(0.8),\n\tinnerStrokeWidth = strokeWidth,\n\t...gProps\n}) => {\n\tconst innerStrokeCss = innerStroke && innerStroke.string();\n\tconst strokeCss = stroke && stroke.string();\n\n\tconst style: Record<string, string> = {};\n\tif (gProps.onClick || gProps.onContextMenu) {\n\t\tstyle.cursor = 'pointer';\n\t}\n\n\treturn (\n\t\t<g {...gProps} style={style}>\n\t\t\t{fill && (\n\t\t\t\t<>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xz'}\n\t\t\t\t\t\tpoints={XZ_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xy'}\n\t\t\t\t\t\tpoints={XY_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.lighten(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'yz'}\n\t\t\t\t\t\tpoints={YZ_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.darken(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{innerStroke && (\n\t\t\t\t<>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'x-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[3][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[3][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'y-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[1][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[1][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'z-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[5][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[5][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t<polygon\n\t\t\t\tkey={'outline'}\n\t\t\t\tpoints={BORDER_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\tstroke={strokeCss}\n\t\t\t\tfill={'transparent'}\n\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t/>\n\t\t</g>\n\t);\n};\n","import styled from '@emotion/styled';\nimport React, { FunctionComponent, ReactElement, useMemo } from 'react';\nimport { AnimatedComponent } from 'react-spring';\nimport { CoordinateLike } from '../classes/Coordinate';\nimport { Length, PERSPECTIVE } from './PERSPECTIVE';\n\n// The pythagoras distance (1/sqrt(2)) with a little tweaking for better looks\nconst PIXEL_FRIENDLY_PYTHAGORAS = 1 / Math.pow(2, 1 / 2); //0.8;\n\nfunction mathRoundMaybe(n: number) {\n\t// For debugging only. Adjust to taste.\n\n\treturn Math.round(n);\n\t// return n;\n}\n\n// Force the type to AnimatedComponent to avoid a weird TS inference bug\n//\nexport const AbsolutelyPositionedContainer = styled.div`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\twidth: 0;\n\theight: 0;\n\ttransition: transform 5s;\n\t> * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n` as unknown as AnimatedComponent<'div'>;\n\ntype ViewportComponentProps = {\n\tzoom?: number;\n\tcenter?: CoordinateLike;\n\toverlay?: ReactElement;\n};\n\nexport const Viewport: FunctionComponent<ViewportComponentProps> = ({\n\toverlay,\n\tcenter = { x: 0, y: 0, z: 0 },\n\tzoom = 1,\n\tchildren\n}) => {\n\tconst [translateX, translateY] = useMemo(\n\t\t() =>\n\t\t\tPERSPECTIVE.toPixels(center.x, center.y, center.z).map(\n\t\t\t\t(n, i) => mathRoundMaybe(-n) + (i ? 0 : 0.5)\n\t\t\t),\n\t\t[center]\n\t);\n\n\tconst springStyles =\n\t\t//useSpring({\n\t\t// \tconfig: config.molasses,\n\t\t// \tto:\n\t\t{\n\t\t\ttransform: `translate(\n\t\t\t\t${translateX * zoom}px,\n\t\t\t\t${translateY * zoom}px\n\t\t\t)`\n\t\t};\n\t// });\n\n\treturn (\n\t\t<AbsolutelyPositionedContainer style={springStyles}>\n\t\t\t<ViewportSvgContainer zoom={zoom} children={children} />\n\t\t\t{overlay}\n\t\t</AbsolutelyPositionedContainer>\n\t);\n};\n\nexport const ViewportSvgContainer: FunctionComponent<\n\t{\n\t\tzoom?: number;\n\t} & React.SVGProps<SVGSVGElement>\n> = ({ zoom = 1, ...rest }) => (\n\t<svg\n\t\twidth=\"1px\"\n\t\theight=\"1px\"\n\t\toverflow=\"visible\"\n\t\tshapeRendering=\"geometricPrecision\"\n\t\tviewBox={[0, 0, 1 / zoom, 1 / zoom].join(' ')}\n\t\t{...rest}\n\t/>\n);\n\nconst NoAxis = styled.div<{ zoom?: number }>`\n\t--scale-val: ${({ zoom = 1 }) => zoom};\n\n\tposition: absolute;\n\ttransform-origin: top left;\n\ttransform: scale(var(--scale-val));\n`;\n\nconst YAxis = styled(NoAxis)`\n\ttransform: skewY(-${PERSPECTIVE.degrees}deg)\n\t\tscale(calc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)), var(--scale-val));\n`;\n\nconst ZAxis = styled(NoAxis)`\n\ttransform: rotate(-${PERSPECTIVE.degrees}deg) skewX(${PERSPECTIVE.degrees}deg)\n\t\tscale(\n\t\t\tcalc(${Math.sqrt(PIXEL_FRIENDLY_PYTHAGORAS)} * var(--scale-val)),\n\t\t\tcalc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val))\n\t\t);\n`;\n\nconst XAxis = styled(NoAxis)`\n\ttransform: skewY(${PERSPECTIVE.degrees}deg)\n\t\tscale(calc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)), var(--scale-val));\n`;\n\nexport const ViewportHtmlContainer: FunctionComponent<{\n\taxis?: 'x' | 'y' | 'z';\n\twidth: Length;\n\theight: Length;\n\tzoom?: number;\n\tlocation: CoordinateLike;\n}> = ({ location, zoom = 1, axis, width, height, children }) => {\n\tconst { x, y, z } = location,\n\t\t// @TODO use css variable to zoom instead of JS\n\t\t[left, top] = PERSPECTIVE.toPixels(x, y, z).map(n => mathRoundMaybe(n * zoom));\n\t// @TODO use css variable to zoom instead of JS\n\tconst [pixelWidth] = PERSPECTIVE.toPixels(0, width, height).map(n => mathRoundMaybe(n * zoom));\n\tconst Axis = axis === 'y' ? YAxis : axis === 'x' ? XAxis : axis === 'z' ? ZAxis : NoAxis;\n\treturn (\n\t\t<Axis\n\t\t\tzoom={zoom}\n\t\t\tstyle={{\n\t\t\t\tleft: mathRoundMaybe(left),\n\t\t\t\ttop: mathRoundMaybe(top),\n\t\t\t\twidth:\n\t\t\t\t\tmathRoundMaybe(axis ? pixelWidth / PIXEL_FRIENDLY_PYTHAGORAS : pixelWidth) +\n\t\t\t\t\t'px',\n\t\t\t\theight:\n\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t(height * PERSPECTIVE.tileSize) /\n\t\t\t\t\t\t\t(axis === 'z' ? PIXEL_FRIENDLY_PYTHAGORAS : 1)\n\t\t\t\t\t) + 'px'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</Axis>\n\t);\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div<{ height?: number }>`\n\tposition: relative;\n\theight: ${({ height = 180 }) => `${height}px`};\n\tbackground-image: linear-gradient(\n\t\t45deg,\n\t\trgba(255, 255, 255, 0.02) 25%,\n\t\trgba(0, 0, 0, 0.02) 25%,\n\t\trgba(0, 0, 0, 0.02) 50%,\n\t\trgba(255, 255, 255, 0.02) 50%,\n\t\trgba(255, 255, 255, 0.02) 75%,\n\t\trgba(0, 0, 0, 0.02) 75%,\n\t\trgba(0, 0, 0, 0.02) 100%\n\t);\n\tbackground-size: 56.57px 56.57px;\n\tmargin-bottom: 1em;\n`;\n","import Color from 'color';\nimport { FunctionComponent } from 'react';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { Viewport } from '../space/Viewport';\nimport { Backdrop } from './scaffolding';\n\nconst Demo: FunctionComponent = () => (\n\t<>\n\t\t<Backdrop>\n\t\t\t<Viewport zoom={1} center={{ x: 0.5, y: 0.5, z: 0.5 }}>\n\t\t\t\t<Anchor x={-2} y={-2} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={0} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox innerStroke={Color('#630a0a7d')} fill={Color('#960202')} />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={2} z={0}>\n\t\t\t\t\t<MonochromeBox\n\t\t\t\t\t\tfill={Color('#ffffff7f')}\n\t\t\t\t\t\tonClick={() => window.alert('Clicky click!')}\n\t\t\t\t\t/>\n\t\t\t\t</Anchor>\n\t\t\t</Viewport>\n\t\t</Backdrop>\n\t\t<Backdrop>\n\t\t\t<Viewport center={{ x: 1, y: 0, z: 0.5 }}>\n\t\t\t\t<Anchor x={0} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={1} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={-1} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t</Viewport>\n\t\t</Backdrop>\n\t</>\n);\n\nexport default Demo;\n","import { CoordValue, Length } from '../space/PERSPECTIVE';\nexport interface CoordinateLike {\n\tx: CoordValue;\n\ty: CoordValue;\n\tz: CoordValue;\n}\n\nexport class Coordinate implements CoordinateLike {\n\tx: CoordValue;\n\ty: CoordValue;\n\tz: CoordValue;\n\n\tconstructor(x: CoordValue, y: CoordValue, z: CoordValue) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tequals(coord: CoordinateLike) {\n\t\treturn (\n\t\t\tthis === coord ||\n\t\t\t(coord && this.x === coord.x && this.y === coord.y && this.z === coord.z)\n\t\t);\n\t}\n\n\ttransform(dx: Length = 0, dy: Length = 0, dz: Length = 0) {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\n\t\treturn this;\n\t}\n\n\thasNaN() {\n\t\treturn isNaN(this.x) || isNaN(this.y) || isNaN(this.z);\n\t}\n\n\tmanhattanDistanceTo(coord: CoordinateLike) {\n\t\treturn Math.abs(this.x - coord.x) + Math.abs(this.y - coord.y) + Math.abs(this.z - coord.z);\n\t}\n\n\teuclideanDistanceTo(coord: CoordinateLike) {\n\t\tconst xy = Math.sqrt((this.x - coord.x) ** 2 + (this.y - coord.y) ** 2);\n\t\tconst xyz = Math.sqrt(xy ** 2 + (this.z - coord.z) ** 2);\n\t\treturn xyz;\n\t}\n\n\t// For debugging purposes only, may change without notice or tests\n\ttoString() {\n\t\treturn [this.x, this.y, this.z].join(',');\n\t}\n\n\tstatic clone(coord: CoordinateLike) {\n\t\treturn new Coordinate(coord.x, coord.y, coord.z);\n\t}\n}\n","type BinaryHeapScorer<P> = (node: P) => number;\n\nexport class BinaryHeap<P> {\n\tscoreFunction: BinaryHeapScorer<P>;\n\tcontent: P[] = [];\n\tconstructor(scoreFunction: BinaryHeapScorer<P>) {\n\t\tthis.content = [];\n\t\tthis.scoreFunction = scoreFunction;\n\t}\n\tpush(element: P) {\n\t\t// Add the new element to the end of the array.\n\t\tthis.content.push(element);\n\n\t\t// Allow it to sink down.\n\t\tthis.sinkDown(this.content.length - 1);\n\t}\n\tpop() {\n\t\t// Store the first element so we can return it later.\n\t\tconst result = this.content[0];\n\n\t\t// Get the element at the end of the array.\n\t\tconst end = this.content.pop();\n\t\tif (!end) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// If there are any elements left, put the end element at the\n\t\t// start, and let it bubble up.\n\t\tif (this.content.length > 0) {\n\t\t\tthis.content[0] = end;\n\t\t\tthis.bubbleUp(0);\n\t\t}\n\t\treturn result;\n\t}\n\tremove(node: P) {\n\t\tconst i = this.content.indexOf(node);\n\n\t\t// When it is found, the process seen in 'pop' is repeated\n\t\t// to fill up the hole.\n\t\tconst end = this.content.pop();\n\t\tif (!end) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (i !== this.content.length - 1) {\n\t\t\tthis.content[i] = end;\n\n\t\t\tif (this.scoreFunction(end) < this.scoreFunction(node)) {\n\t\t\t\tthis.sinkDown(i);\n\t\t\t} else {\n\t\t\t\tthis.bubbleUp(i);\n\t\t\t}\n\t\t}\n\t}\n\tsize() {\n\t\treturn this.content.length;\n\t}\n\trescoreElement(node: P) {\n\t\tthis.sinkDown(this.content.indexOf(node));\n\t}\n\tsinkDown(n: number) {\n\t\t// Fetch the element that has to be sunk.\n\t\tconst element = this.content[n];\n\n\t\t// When at 0, an element can not sink any further.\n\t\twhile (n > 0) {\n\t\t\t// Compute the parent element's index, and fetch it.\n\t\t\tconst parentN = ((n + 1) >> 1) - 1;\n\t\t\tconst parent = this.content[parentN];\n\t\t\t// Swap the elements if the parent is greater.\n\t\t\tif (this.scoreFunction(element) < this.scoreFunction(parent)) {\n\t\t\t\tthis.content[parentN] = element;\n\t\t\t\tthis.content[n] = parent;\n\t\t\t\t// Update 'n' to continue at the new position.\n\t\t\t\tn = parentN;\n\t\t\t}\n\t\t\t// Found a parent that is less, no need to sink any further.\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tbubbleUp(n: number) {\n\t\t// Look up the target element and its score.\n\t\tconst length = this.content.length;\n\t\tconst element = this.content[n];\n\t\tconst elemScore = this.scoreFunction(element);\n\n\t\twhile (true) {\n\t\t\t// Compute the indices of the child elements.\n\t\t\tconst child2N = (n + 1) << 1;\n\t\t\tconst child1N = child2N - 1;\n\t\t\t// This is used to store the new position of the element, if any.\n\t\t\tlet swap = null;\n\t\t\tlet child1Score;\n\t\t\t// If the first child exists (is inside the array)...\n\t\t\tif (child1N < length) {\n\t\t\t\t// Look it up and compute its score.\n\t\t\t\tconst child1 = this.content[child1N];\n\t\t\t\tchild1Score = this.scoreFunction(child1);\n\n\t\t\t\t// If the score is less than our element's, we need to swap.\n\t\t\t\tif (child1Score < elemScore) {\n\t\t\t\t\tswap = child1N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Do the same checks for the other child.\n\t\t\tif (child2N < length) {\n\t\t\t\tconst child2 = this.content[child2N];\n\t\t\t\tconst child2Score = this.scoreFunction(child2);\n\t\t\t\t// child1Score is number or undefined. To satisfy TS (for the original code) it is coerced to number,\n\t\t\t\t// but I'm not sure why it wouldn't stay undefined, really.\n\t\t\t\tif (child2Score < (swap === null ? elemScore : (child1Score as number))) {\n\t\t\t\t\tswap = child2N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the element needs to be moved, swap it, and continue.\n\t\t\tif (swap !== null) {\n\t\t\t\tthis.content[n] = this.content[swap];\n\t\t\t\tthis.content[swap] = element;\n\t\t\t\tn = swap;\n\t\t\t}\n\t\t\t// Otherwise, we are done.\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n","// An adaptation of:\n//   javascript-astar 0.4.1\n//   http://github.com/bgrins/javascript-astar\n//   Freely distributable under the MIT License.\n//   Implements the astar search algorithm in javascript using a Binary Heap.\n//   Includes Binary Heap (with modifications) from Marijn Haverbeke.\n//   http://eloquentjavascript.net/appendix2.html\n\nimport { BinaryHeap } from './BinaryHeap';\nimport { Terrain } from './Terrain';\nimport { TerrainCoordinate } from './TerrainCoordinate';\n\n// See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\ntype HeuristicScorer = (a: TerrainCoordinate, b: TerrainCoordinate) => number;\n\n/**\n * Perform an A* Search on a graph given a start and end node.\n */\n\ntype HeuristicReport = {\n\tcoordinate: TerrainCoordinate;\n\th: number;\n\tg: number;\n\tf: number;\n\tparent: HeuristicReport | null;\n\tclosed: Boolean;\n\tvisited: boolean;\n};\n\ntype PathOptions = {\n\tclosest: Boolean;\n\theuristic?: HeuristicScorer;\n};\n\nconst MANHATTAN: HeuristicScorer = (pos0, pos1) => {\n\tconst d1 = Math.abs(pos1.x - pos0.x);\n\tconst d2 = Math.abs(pos1.y - pos0.y);\n\treturn d1 + d2;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst DIAGONAL: HeuristicScorer = (pos0, pos1) => {\n\tconst D = 1;\n\tconst D2 = Math.sqrt(2);\n\tconst d1 = Math.abs(pos1.x - pos0.x);\n\tconst d2 = Math.abs(pos1.y - pos0.y);\n\treturn D * (d1 + d2) + (D2 - 2 * D) * Math.min(d1, d2);\n};\n\nfunction getVisitationCost(terrain: Terrain, from: TerrainCoordinate, neighbor: TerrainCoordinate) {\n\treturn 1;\n}\n\nexport class Path {\n\tprivate readonly terrain: Terrain;\n\tprivate readonly options: PathOptions;\n\tprivate readonly cache: Map<TerrainCoordinate, HeuristicReport>;\n\tprivate readonly heap: BinaryHeap<TerrainCoordinate>;\n\tprivate readonly heuristic: HeuristicScorer;\n\n\tconstructor(graph: Terrain, options: PathOptions) {\n\t\tthis.terrain = graph;\n\t\tthis.options = options;\n\n\t\tthis.cache = new Map<TerrainCoordinate, HeuristicReport>();\n\n\t\tthis.heap = new BinaryHeap<TerrainCoordinate>(node => {\n\t\t\tconst heuristic = this.cache.get(node);\n\t\t\tif (!heuristic) {\n\t\t\t\tthrow new Error('This is weird');\n\t\t\t}\n\t\t\treturn heuristic.f;\n\t\t});\n\n\t\tthis.heuristic = MANHATTAN;\n\t}\n\n\tfind(start: TerrainCoordinate, end: TerrainCoordinate) {\n\t\tlet closestNode = start; // set the start node to be the closest if required\n\t\tlet closestNodeHeuristics: HeuristicReport = {\n\t\t\tcoordinate: closestNode,\n\t\t\th: this.heuristic(start, end),\n\t\t\tg: 0,\n\t\t\tf: 0,\n\n\t\t\tparent: null,\n\n\t\t\t// Unsure what the default value should be\n\t\t\tclosed: true,\n\t\t\tvisited: true\n\t\t};\n\n\t\t// At this stage `start` is also `closestNode`, so lets associate those heuristics\n\t\tthis.cache.set(start, closestNodeHeuristics);\n\n\t\tthis.heap.push(start);\n\n\t\twhile (this.heap.size() > 0) {\n\t\t\t// Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n\t\t\tconst currentNode = this.heap.pop();\n\t\t\tconst currentNodeHeuristics = this.cache.get(currentNode);\n\t\t\tif (!currentNodeHeuristics) {\n\t\t\t\tthrow new Error('Somehow opening a node that has no heuristic data');\n\t\t\t}\n\n\t\t\t// End case -- result has been found, return the traced path.\n\t\t\tif (currentNode === end) {\n\t\t\t\treturn this.tracePath(currentNodeHeuristics);\n\t\t\t}\n\n\t\t\t// Normal case -- move currentNode from open to closed, process each of its neighbors.\n\t\t\tcurrentNodeHeuristics.closed = true;\n\n\t\t\t// Find all neighbors for the current node.\n\t\t\tconst neighbors = this.terrain.getNeighbors(currentNode);\n\n\t\t\tfor (let i = 0, il = neighbors.length; i < il; ++i) {\n\t\t\t\tconst neighbor = neighbors[i];\n\t\t\t\tlet neighborHeuristics = this.cache.get(neighbor);\n\n\t\t\t\tif (neighborHeuristics?.closed || !neighbor.canWalkHere()) {\n\t\t\t\t\t// Not a valid node to process, skip to next neighbor.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// The g score is the shortest distance from start to current node.\n\t\t\t\t// We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n\t\t\t\tconst gScore =\n\t\t\t\t\tcurrentNodeHeuristics.g +\n\t\t\t\t\tgetVisitationCost(this.terrain, currentNode, neighbor);\n\t\t\t\tconst beenVisited = !!neighborHeuristics;\n\n\t\t\t\tif (!beenVisited || (neighborHeuristics && gScore < neighborHeuristics.g)) {\n\t\t\t\t\tconst hScore = this.heuristic(neighbor, end);\n\t\t\t\t\t// Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n\t\t\t\t\tneighborHeuristics = {\n\t\t\t\t\t\tcoordinate: neighbor,\n\t\t\t\t\t\th: hScore,\n\t\t\t\t\t\tg: gScore,\n\t\t\t\t\t\tf: gScore + hScore,\n\t\t\t\t\t\tparent: currentNodeHeuristics,\n\t\t\t\t\t\tclosed: true,\n\t\t\t\t\t\tvisited: true\n\t\t\t\t\t};\n\t\t\t\t\tthis.cache.set(neighbor, neighborHeuristics as HeuristicReport);\n\n\t\t\t\t\tif (this.options.closest) {\n\t\t\t\t\t\t// If the neighbour is closer than the current closestNode or if it's equally close but has\n\t\t\t\t\t\t// a cheaper path than the current closest node then it becomes the closest node\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tneighborHeuristics.h < closestNodeHeuristics.h ||\n\t\t\t\t\t\t\t(neighborHeuristics.h === closestNodeHeuristics.h &&\n\t\t\t\t\t\t\t\tneighborHeuristics.g < closestNodeHeuristics.g)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tclosestNode = neighbor;\n\t\t\t\t\t\t\tclosestNodeHeuristics = neighborHeuristics;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!beenVisited) {\n\t\t\t\t\t\t// Pushing to heap will put it in proper place based on the 'f' value.\n\t\t\t\t\t\tthis.heap.push(neighbor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Already seen the node, but since it has been rescored we need to reorder it in the heap\n\t\t\t\t\t\tthis.heap.rescoreElement(neighbor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.closest) {\n\t\t\treturn this.tracePath(closestNodeHeuristics);\n\t\t}\n\n\t\t// No result was found - empty array signifies failure to find path.\n\t\treturn [];\n\t}\n\n\ttracePath(heuristicReport: HeuristicReport) {\n\t\tlet curr = heuristicReport;\n\t\tconst path = [];\n\t\twhile (curr.parent) {\n\t\t\tpath.unshift(curr);\n\t\t\tcurr = curr.parent;\n\t\t}\n\t\treturn path.map(heuristicReport => heuristicReport.coordinate);\n\t}\n}\n","import { DependencyList, useCallback, useEffect } from 'react';\n\ntype EventHandler<EventData extends Array<unknown>> = (...args: EventData) => void;\ntype EventDestroyer = () => void;\n\n/**\n *  Consitutes one named event type\n */\nexport class Event<EventData extends Array<unknown> = []> {\n\tprivate listeners: EventHandler<EventData>[] = [];\n\n\ton(callback: EventHandler<EventData>) {\n\t\tthis.listeners.push(callback);\n\n\t\treturn () => {\n\t\t\tthis.listeners.splice(this.listeners.indexOf(callback));\n\t\t};\n\t}\n\n\temit(...args: EventData) {\n\t\tthis.listeners.forEach(callback => callback(...args));\n\t}\n\n\tclear() {\n\t\tthis.listeners = [];\n\t}\n}\n\n/**\n * A conventience wrapper for `useEffect` specifically for listening to a list of events, and unlistening when the\n * component is unmounted.\n *\n * For example:\n *\n *   useEventListeners(() => [\n *       entity.moveStart.on(coordinate => animatePosition(coordinate)),\n *       entity.moveRest.on(coordinate => console.log('Done'))\n *   ], [entity.moveStart, entity.moveRest]);\n */\nexport const useEventListeners = (callback: () => EventDestroyer[], deps: DependencyList = []) => {\n\tconst cb = useCallback(\n\t\t() => {\n\t\t\tconst eventDestroyers = callback();\n\t\t\treturn () => eventDestroyers.forEach(d => d());\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tdeps\n\t);\n\treturn useEffect(cb, [cb]);\n};\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { Path } from '../classes/Path';\nimport { TerrainCoordinate } from '../classes/TerrainCoordinate';\nimport { Job } from '../jobs/Patrol';\nimport { MovingAnchor } from '../space/Anchor';\nimport { Event, useEventListeners } from '../util/events';\nconst noop = () => {};\n\ntype OnEntityClick = (event: React.MouseEvent<SVGElement, MouseEvent>) => void;\nexport class Entity {\n\tpublic readonly id: string;\n\n\tpublic readonly pathStart = new Event<[]>();\n\tpublic readonly pathEnd = new Event<[]>();\n\n\t/**\n\t * The event that an entity was instructed to moveTo()\n\t */\n\tpublic readonly pathStepStart = new Event<[TerrainCoordinate]>();\n\n\t/**\n\t * The event that this entity has completed a moveTo(), according to react-spring's timing\n\t */\n\tpublic readonly pathStepEnd = new Event<[TerrainCoordinate]>();\n\n\t/**\n\t * The React SVG component that consitutes this entity. Is expected to be defined in a class\n\t * that extends `Entity`.\n\t */\n\tpublic readonly Component: FunctionComponent = () => {\n\t\treturn null;\n\t};\n\n\tpublic location: TerrainCoordinate;\n\n\t/**\n\t * The set of behaviour/tasks given to this entity.\n\t */\n\tpublic job?: Job;\n\n\tconstructor(id: string, location: TerrainCoordinate) {\n\t\tthis.id = id;\n\t\tthis.location = location;\n\n\t\t// Movement handling\n\t\tthis.pathStepEnd.on(loc => {\n\t\t\tthis.location = loc;\n\t\t});\n\t}\n\n\tget label(): string {\n\t\tthrow new Error(`Not implemented for ${this.constructor.name}`);\n\t}\n\n\tpublic play() {\n\t\treturn this.job?.start() || noop;\n\t}\n\n\tpublic doJob(job: Job) {\n\t\tthis.job = job;\n\n\t\t// @TODO maybe some events\n\t}\n\n\tpublic walkTo(destination: TerrainCoordinate) {\n\t\tif (!this.location.terrain) {\n\t\t\tthrow new Error(`Entity \"${this.id}\" is trying to path in a detached coordinate`);\n\t\t}\n\t\tconst path = new Path(this.location.terrain, { closest: true }).find(\n\t\t\tthis.location,\n\t\t\tdestination\n\t\t);\n\t\tif (!path.length) {\n\t\t\treturn;\n\t\t}\n\t\tlet unlisten = this.pathStepEnd.on(() => {\n\t\t\tconst nextStep = path.shift();\n\n\t\t\tif (!nextStep) {\n\t\t\t\tunlisten();\n\t\t\t\tthis.pathEnd.emit();\n\t\t\t} else {\n\t\t\t\tthis.doPathStep(nextStep);\n\t\t\t}\n\t\t});\n\t\tthis.doPathStep(path.shift() as TerrainCoordinate);\n\t}\n\t/**\n\t * Move entity directly to a coordinate. Does not consider accessibility or closeness.\n\t */\n\tpublic doPathStep(coordinate: TerrainCoordinate) {\n\t\tif (coordinate.hasNaN()) {\n\t\t\tdebugger;\n\t\t}\n\t\tthis.pathStepStart.emit(coordinate);\n\t}\n}\n\n/**\n * A component that automatically transitions the entity component as per its move instructions\n */\nexport const EntityComponent: FunctionComponent<{ entity: Entity; onClick?: OnEntityClick }> = ({\n\tentity,\n\tonClick\n}) => {\n\tconst [{ destination, duration }, animatePosition] = useState({\n\t\tdestination: entity.location,\n\t\tduration: 0\n\t});\n\n\tuseEventListeners(\n\t\t() => [\n\t\t\t// Listen for the entity moveStart order;\n\t\t\tentity.pathStepStart.on(destination =>\n\t\t\t\tanimatePosition({\n\t\t\t\t\tdestination,\n\t\t\t\t\tduration: entity.location.euclideanDistanceTo(destination) * 200\n\t\t\t\t})\n\t\t\t)\n\t\t],\n\t\t[entity.pathStepStart]\n\t);\n\n\tconst onRest = useCallback(\n\t\t() => entity.pathStepEnd.emit(destination),\n\t\t[entity.pathStepEnd, destination]\n\t);\n\n\treturn (\n\t\t<MovingAnchor moveTo={destination} moveSpeed={duration} onRest={onRest} onClick={onClick}>\n\t\t\t<entity.Component />\n\t\t</MovingAnchor>\n\t);\n};\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { Coordinate } from '../classes/Coordinate';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { Entity } from './Entity';\n\nconst zoom = 0.25;\nconst translate = zoom / 2;\nconst offset = new Coordinate(-translate, -translate, 0);\n\nexport class GuardEntity extends Entity {\n\tget label(): string {\n\t\treturn `Guardsman ${this.id}`;\n\t}\n\n\tComponent: FunctionComponent = () => {\n\t\treturn (\n\t\t\t<Anchor {...offset}>\n\t\t\t\t<MonochromeBox size={zoom} fill={Color('#227d5e')} />\n\t\t\t</Anchor>\n\t\t);\n\t};\n}\n","import { TerrainCoordinate } from '../classes/TerrainCoordinate';\nimport { Entity } from '../entities/Entity';\n\nexport class Job {\n\tentity: Entity;\n\tconstructor(entity: Entity) {\n\t\tthis.entity = entity;\n\t}\n\n\tget label(): string {\n\t\tthrow new Error(`Not implemented for ${this.constructor.name}`);\n\t}\n\n\tstart() {\n\t\tthrow new Error(`Not implemented for ${this.constructor.name}`);\n\t}\n}\n\nexport class PatrolJob extends Job {\n\twaypoints: TerrainCoordinate[];\n\twaypointIndex: number;\n\n\tconstructor(entity: Entity, waypoints: TerrainCoordinate[]) {\n\t\tsuper(entity);\n\t\tif (waypoints.length < 2) {\n\t\t\tthrow new Error('A patrol must have at least 2 waypoints');\n\t\t}\n\t\tthis.waypoints = waypoints;\n\t\tthis.waypointIndex = 0;\n\t}\n\n\tget label() {\n\t\treturn `Patrolling between ${this.waypoints.length} waypoints`;\n\t}\n\tstart() {\n\t\tconst destroyers = [\n\t\t\tthis.entity.pathEnd.on(() => {\n\t\t\t\t// Guards move from one waypoint to another, pausing for a random amount of time in between\n\t\t\t\tthis.waypointIndex = (this.waypointIndex + 1) % this.waypoints.length;\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => this.entity.walkTo(this.waypoints[this.waypointIndex]),\n\t\t\t\t\t3000 + Math.random() * 5000\n\t\t\t\t);\n\t\t\t})\n\t\t];\n\n\t\tthis.entity.walkTo(this.waypoints[0]);\n\t\treturn () => destroyers.forEach(d => d());\n\t}\n}\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { color } from '../styles';\n\nimport { CoordArray, PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 1;\nconst BORDER_NODES: CoordArray[] = [\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[0, 1, 0],\n\t[0, 0, 0]\n];\n\nlet spatialCoordinates = BORDER_NODES.map(coordinate => PERSPECTIVE.toPixels(...coordinate)).map(\n\tcc => cc.map(c => c + BORDER_WIDTH)\n);\n\nexport const MonochromeTile: FunctionComponent<\n\tOmit<React.SVGProps<SVGPolygonElement>, 'fill' | 'stroke'> & {\n\t\tzoom?: number;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t}\n> = ({\n\tfill = color.terrain,\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = BORDER_WIDTH,\n\tzoom = 1,\n\t...rest\n}) => {\n\treturn (\n\t\t<polygon\n\t\t\tpoints={spatialCoordinates.map(c => c.map(c => c * zoom).join(',')).join(' ')}\n\t\t\tstroke={stroke.string()}\n\t\t\tfill={fill.string()}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n","import { FunctionComponent, useState } from 'react';\nimport { Coordinate, CoordinateLike } from './Coordinate';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { MonochromeTile } from '../space/MonochromeTile';\nimport { Terrain } from './Terrain';\nimport { color } from '../styles';\n\ntype OnTerrainClick = (event: React.MouseEvent<SVGElement, MouseEvent>) => void;\n/**\n * A special type of coordinate that is equal to another terrain coordinate when the X and Y are equal, disregarding Z.\n */\nexport class TerrainCoordinate extends Coordinate {\n\tterrain?: Terrain;\n\n\tequals(coord: CoordinateLike) {\n\t\treturn this === coord || (coord && this.x === coord.x && this.y === coord.y);\n\t}\n\tstatic clone(coord: CoordinateLike) {\n\t\treturn new TerrainCoordinate(coord.x, coord.y, coord.z);\n\t}\n\n\tcanWalkHere() {\n\t\treturn this.z > 0;\n\t}\n}\n\n/**\n * A component that automatically transitions the entity component as per its move instructions\n */\nexport const TerrainCoordinateComponent: FunctionComponent<{\n\tterrainCoordinate: TerrainCoordinate;\n\tonClick?: OnTerrainClick;\n}> = ({ terrainCoordinate, onClick }) => {\n\tconst [isHovered, setIsHovered] = useState(false);\n\tconst translated = Coordinate.clone(terrainCoordinate).transform(\n\t\t-0.5,\n\t\t-0.5,\n\t\tterrainCoordinate.z < 0 ? -terrainCoordinate.z - 0.5 : -1\n\t);\n\treturn (\n\t\t<Anchor key={translated.toString()} x={translated.x} y={translated.y} z={translated.z}>\n\t\t\t{terrainCoordinate.z > 0 ? (\n\t\t\t\t<MonochromeBox\n\t\t\t\t\tfill={isHovered ? color.highlightedTerrain : color.terrain}\n\t\t\t\t\tstroke={isHovered ? color.white : undefined}\n\t\t\t\t\tinnerStroke={\n\t\t\t\t\t\tisHovered ? color.highlightedTerrain.mix(color.white, 0.6) : undefined\n\t\t\t\t\t}\n\t\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<MonochromeTile\n\t\t\t\t\tfill={(isHovered ? color.highlightedTerrain : color.terrain).opaquer(-0.5)}\n\t\t\t\t\tstroke={isHovered ? color.white : undefined}\n\t\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Anchor>\n\t);\n};\n","/**\n * Adapted from\n *   https://github.com/hunterloftis/playfuljs-demos/blob/gh-pages/terrain/index.html#L118\n */\n\nexport const OUT_OF_BOUNDS = Symbol();\n\nfunction average(values: Array<number | typeof OUT_OF_BOUNDS>) {\n\tvar valid = values.filter((val): val is number => typeof val === 'number');\n\tvar total = valid.reduce<number>((sum, val) => sum + val, 0);\n\treturn total / valid.length;\n}\n\nexport class TerrainGenerator {\n\tprivate size: number;\n\tprivate max: number;\n\tprivate map: Float32Array;\n\n\tconstructor(size: number) {\n\t\tconst detail = Math.ceil(Math.log(size) / Math.log(2));\n\t\tthis.size = Math.pow(2, detail) + 1;\n\t\tthis.max = this.size - 1;\n\t\tthis.map = new Float32Array(this.size * this.size);\n\t}\n\n\tpublic generate(roughness: number) {\n\t\tthis.set(0, 0, this.max);\n\t\tthis.set(this.max, 0, this.max / 2);\n\t\tthis.set(this.max, this.max, 0);\n\t\tthis.set(0, this.max, this.max / 2);\n\n\t\tthis.divide(this.max, roughness);\n\t}\n\n\tpublic get(x: number, y: number) {\n\t\tif (x < 0 || x > this.max || y < 0 || y > this.max) {\n\t\t\treturn OUT_OF_BOUNDS;\n\t\t}\n\t\treturn this.map[x + this.size * y];\n\t}\n\n\tprivate set(x: number, y: number, val: number) {\n\t\tthis.map[x + this.size * y] = val;\n\t}\n\n\tprivate divide(size: number, roughness: number) {\n\t\tvar x,\n\t\t\ty,\n\t\t\thalf = size / 2;\n\t\tvar scale = roughness * size;\n\t\tif (half < 1) return;\n\n\t\tfor (y = half; y < this.max; y += size) {\n\t\t\tfor (x = half; x < this.max; x += size) {\n\t\t\t\tthis.square(x, y, half, Math.random() * scale * 2 - scale);\n\t\t\t}\n\t\t}\n\t\tfor (y = 0; y <= this.max; y += half) {\n\t\t\tfor (x = (y + half) % size; x <= this.max; x += size) {\n\t\t\t\tthis.diamond(x, y, half, Math.random() * scale * 2 - scale);\n\t\t\t}\n\t\t}\n\t\tthis.divide(size / 2, roughness);\n\t}\n\n\tprivate square(x: number, y: number, size: number, offset: number) {\n\t\tvar ave = average([\n\t\t\tthis.get(x - size, y - size), // upper left\n\t\t\tthis.get(x + size, y - size), // upper right\n\t\t\tthis.get(x + size, y + size), // lower right\n\t\t\tthis.get(x - size, y + size) // lower left\n\t\t]);\n\t\tthis.set(x, y, ave + offset);\n\t}\n\n\tprivate diamond(x: number, y: number, size: number, offset: number) {\n\t\tvar ave = average([\n\t\t\tthis.get(x, y - size), // top\n\t\t\tthis.get(x + size, y), // right\n\t\t\tthis.get(x, y + size), // bottom\n\t\t\tthis.get(x - size, y) // left\n\t\t]);\n\t\tthis.set(x, y, ave + offset);\n\t}\n}\n","import { distanceToCameraComparator } from '../space/PERSPECTIVE';\nimport { TerrainCoordinate } from './TerrainCoordinate';\nimport { OUT_OF_BOUNDS, TerrainGenerator } from './TerrainGenerator';\n\nexport class Terrain {\n\tpublic readonly coordinates: TerrainCoordinate[];\n\tprivate coordinatesInRenderOrder: TerrainCoordinate[] | null = null;\n\tprivate readonly size: number;\n\n\tconstructor(coordinates: TerrainCoordinate[]) {\n\t\tthis.coordinates = coordinates;\n\t\tthis.coordinates.forEach(coordinate => (coordinate.terrain = this));\n\n\t\tthis.size = Math.sqrt(this.coordinates.length);\n\t}\n\n\tprivate getIndexForXy(x: number, y: number) {\n\t\treturn this.size * y + x;\n\t}\n\n\tpublic getIslandOfCoordinate(\n\t\tstart: TerrainCoordinate,\n\t\tselector: (coordinate: TerrainCoordinate) => boolean = c => c.canWalkHere()\n\t) {\n\t\tconst island: TerrainCoordinate[] = [];\n\t\tconst seen: TerrainCoordinate[] = [];\n\t\tconst queue: TerrainCoordinate[] = [start];\n\n\t\twhile (queue.length) {\n\t\t\tconst current = queue.shift() as TerrainCoordinate;\n\t\t\tisland.push(current);\n\n\t\t\tconst neighbours = this.getNeighbors(current).filter(n => !seen.includes(n));\n\t\t\tseen.splice(0, 0, current, ...neighbours);\n\t\t\tqueue.splice(0, 0, ...neighbours.filter(selector));\n\t\t}\n\t\treturn island;\n\t}\n\n\tpublic getIslands(selector: (coordinate: TerrainCoordinate) => boolean = c => c.canWalkHere()) {\n\t\tlet open = this.coordinates.slice();\n\t\tconst islands = [];\n\t\twhile (open.length) {\n\t\t\tconst next = open.shift() as TerrainCoordinate;\n\t\t\tif (!selector(next)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst island = this.getIslandOfCoordinate(next, selector);\n\t\t\topen = open.filter(n => !island.includes(n));\n\t\t\tislands.push(island);\n\t\t}\n\t\treturn islands;\n\t}\n\n\tpublic getAtXy(x: number, y: number) {\n\t\tif (x < 0 || x > this.size - 1 || y < 0 || y > this.size - 1) {\n\t\t\t// Out of bounds\n\t\t\treturn;\n\t\t}\n\t\treturn this.coordinates[this.getIndexForXy(x, y)];\n\t}\n\n\tpublic getNeighbors(center: TerrainCoordinate) {\n\t\treturn [\n\t\t\t[-1, 0],\n\t\t\t[1, 0],\n\t\t\t[0, -1],\n\t\t\t[0, 1]\n\t\t\t// Diagonal neigbors not included\n\t\t]\n\t\t\t.map(([dx, dy]) => this.getAtXy(center.x + dx, center.y + dy))\n\t\t\t.filter(Boolean) as TerrainCoordinate[];\n\t}\n\n\tpublic getCoordinatesInRenderOrder() {\n\t\tif (!this.coordinatesInRenderOrder) {\n\t\t\tthis.coordinatesInRenderOrder = this.coordinates\n\t\t\t\t.slice()\n\t\t\t\t.sort(distanceToCameraComparator);\n\t\t}\n\t\treturn this.coordinatesInRenderOrder;\n\t}\n\n\tstatic generateRandom(size: number) {\n\t\tconst generator = new TerrainGenerator(size);\n\t\tgenerator.generate(1);\n\n\t\t// For clarity, the terrain must currently always be square\n\t\t// @TODO fix that some time.\n\t\tconst width = size,\n\t\t\theight = size;\n\n\t\tconst coordinates = Array.from(new Array(width * height)).map<[number, number, number]>(\n\t\t\t(_, i) => {\n\t\t\t\tconst x = i % width;\n\t\t\t\tconst y = Math.floor(i / width);\n\t\t\t\tconst z = generator.get(x, y);\n\t\t\t\tif (z === OUT_OF_BOUNDS) {\n\t\t\t\t\tthrow new Error(`Out of bounds @ ${x}, ${y}`);\n\t\t\t\t}\n\t\t\t\treturn [x, y, (2 * (z as number)) / size];\n\t\t\t}\n\t\t);\n\n\t\tconst sortedHeights = coordinates.map(coordinate => coordinate[2]).sort();\n\t\tconst RATIO_WATER_OF_TOTAL = 0.25;\n\t\tconst waterlineOffset =\n\t\t\tsortedHeights[Math.floor(sortedHeights.length * RATIO_WATER_OF_TOTAL)];\n\t\treturn new Terrain(\n\t\t\tcoordinates.map(([x, y, z]) => new TerrainCoordinate(x, y, z - waterlineOffset))\n\t\t);\n\t}\n}\n","import { Entity } from '../entities/Entity';\nimport { GuardEntity } from '../entities/GuardEntity';\nimport { PatrolJob } from '../jobs/Patrol';\nimport { Terrain } from './Terrain';\n\nexport class Scene {\n\tpublic readonly terrain: Terrain;\n\n\t// @TODO change to not readonly, and handle spontaneous changes\n\tpublic readonly entities: Entity[];\n\n\tconstructor(terrain: Terrain, entities: Entity[]) {\n\t\tthis.terrain = terrain;\n\t\tthis.entities = entities;\n\t}\n\n\tplay() {\n\t\tconst destroyers = this.entities.map(entity => entity.play());\n\t\treturn () => destroyers.forEach(d => d());\n\t}\n\n\tstatic generateRandom(size: number) {\n\t\tconst terrain = Terrain.generateRandom(size);\n\t\tconst walkableTiles = terrain.coordinates.filter(c => c.canWalkHere());\n\t\tconst islands = terrain.getIslands();\n\t\tconst entities = Array.from(new Array(10)).map((_, i) => {\n\t\t\tconst start = walkableTiles[Math.floor(Math.random() * walkableTiles.length)];\n\t\t\tconst island = islands.find(island => island.includes(start));\n\t\t\tif (!island) {\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t\tconst guard = new GuardEntity('guard-' + i, start);\n\t\t\tguard.doJob(\n\t\t\t\tnew PatrolJob(\n\t\t\t\t\tguard,\n\t\t\t\t\tArray.from(new Array(2 + Math.floor(Math.random() * 4))).map(\n\t\t\t\t\t\t() => island[Math.floor(Math.random() * island.length)]\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn guard;\n\t\t});\n\n\t\treturn new Scene(terrain, entities);\n\t}\n}\n","// const ActiveEntityOverlay: FunctionComponent = ({ children }) => null;\n\nimport styled from '@emotion/styled';\nimport React, { FunctionComponent } from 'react';\nimport { Entity } from '../entities/Entity';\n\nconst ActiveEntityOverlayBoundary = styled.div`\n\tposition: absolute;\n\tbottom: 2em;\n\tleft: 2em;\n\tbackdrop-filter: blur(2px);\n`;\n\nconst ActiveEntityOverlayBody = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 3px;\n\tpadding: 1em;\n\n\tfont-family: sans-serif;\n\tcolor: white;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\nconst Avatar = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 50%;\n\twidth: 64px;\n\theight: 64px;\n\tjustify-content: center;\n\talign-items: center;\n\tdisplay: flex;\n\tmargin-right: 1em;\n`;\n\nexport const ActiveEntityOverlay: FunctionComponent<{ entity?: Entity }> = ({ entity }) => (\n\t<ActiveEntityOverlayBoundary>\n\t\t<ActiveEntityOverlayBody>\n\t\t\t<Avatar>\n\t\t\t\t<p>T</p>\n\t\t\t</Avatar>\n\t\t\t<div>\n\t\t\t\t<p>Heyyoo</p>\n\t\t\t\t{entity ? (\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>{entity.label}</b>\n\t\t\t\t\t</p>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Not anything selected</p>\n\t\t\t\t)}\n\t\t\t\t{entity?.job ? <p>{entity.job.label}</p> : <p>Jobless</p>}\n\t\t\t</div>\n\t\t</ActiveEntityOverlayBody>\n\t</ActiveEntityOverlayBoundary>\n);\n","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport { Scene } from '../classes/Scene';\nimport { TerrainCoordinateComponent } from '../classes/TerrainCoordinate';\nimport { Entity, EntityComponent } from '../entities/Entity';\nimport { Viewport } from '../space/Viewport';\nimport { ActiveEntityOverlay } from '../ui/ActiveEntityOverlay';\n\nconst WORLD_SIZE = 40;\n\nconst Demo: FunctionComponent = () => {\n\tconst scene = useMemo(() => {\n\t\tconst scene = Scene.generateRandom(WORLD_SIZE);\n\t\t(window as any).scene = scene;\n\t\treturn scene;\n\t}, []);\n\n\tconst terrain = useMemo(\n\t\t() =>\n\t\t\tscene.terrain.getCoordinatesInRenderOrder().map(terrainCoordinate => (\n\t\t\t\t<TerrainCoordinateComponent\n\t\t\t\t\tkey={terrainCoordinate.toString()}\n\t\t\t\t\tterrainCoordinate={terrainCoordinate}\n\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tsetCenter(terrainCoordinate);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[scene.terrain]\n\t);\n\n\tconst [center, setCenter] = useState(\n\t\tscene.terrain.getAtXy(Math.floor(WORLD_SIZE / 2), Math.floor(WORLD_SIZE / 2))\n\t);\n\n\tconst [activeEntity, setActiveEntity] = useState<Entity | undefined>(undefined);\n\n\tconst entities = useMemo(\n\t\t() =>\n\t\t\tscene.entities.map(entity => (\n\t\t\t\t<EntityComponent\n\t\t\t\t\tkey={entity.id}\n\t\t\t\t\tentity={entity}\n\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tsetActiveEntity(entity);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[scene.entities]\n\t);\n\n\t// Make all the things move!\n\tuseEffect(() => scene.play(), [scene]);\n\n\treturn (\n\t\t<>\n\t\t\t<Viewport center={center} zoom={1}>\n\t\t\t\t<g id=\"scene-terrain\">{terrain}</g>\n\t\t\t\t<g id=\"scene-entities\">{entities}</g>\n\t\t\t</Viewport>\n\t\t\t<ActiveEntityOverlay entity={activeEntity} />\n\t\t</>\n\t);\n};\n\nexport default Demo;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport DemoCubes from './demos/demo.cubes';\nimport SceneHelloWorld from './demos/scene.hello-world';\n\nfunction Demos() {\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/tests\">Tests</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Route exact path=\"/tests\" component={DemoCubes} />\n\t\t</>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={SceneHelloWorld} />\n\t\t\t<Route component={Demos} />\n\t\t</Switch>\n\t);\n}\n\nexport default App;\n","import { Global } from '@emotion/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport globalStyleRules from './styles';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Global styles={globalStyleRules} />\n\t\t<HashRouter hashType={'slash'}>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}
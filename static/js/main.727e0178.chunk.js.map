{"version":3,"sources":["space/PERSPECTIVE.ts","space/LinePath.tsx","space/Anchor.tsx","space/MonochromeBox.tsx","space/Viewport.tsx","demos/scaffolding.tsx","demos/demo.cubes.tsx","classes/Coordinate.ts","space/MonochromeTile.tsx","classes/BinaryHeap.ts","classes/Path.ts","util/events.ts","entities/Entity.tsx","entities/GuardEntity.tsx","jobs/Patrol.ts","classes/TerrainCoordinate.ts","classes/TerrainGenerator.ts","classes/Terrain.ts","classes/Scene.ts","ui/ActiveEntityOverlay.tsx","demos/scene.hello-world.tsx","App.tsx","textures/nebula-282c34.png","styles.ts","index.tsx"],"names":["PERSPECTIVE","degrees","tileSize","isometricAngle","Math","PI","_isometricCos","cos","_isometricSin","sin","_isometricTan","tan","tileHeight","radians","toPixels","x","y","z","toCoords","cartX","cartY","isoY","createPerspective","distanceToCameraComparator","a","b","dX","dY","dZ","LinePath","path","stroke","strokeWidth","spatialCoordinates","map","coordinate","cc","c","reduce","lines","start","i","all","concat","x1","y1","x2","y2","String","Crosshair","size","points","Anchor","children","crosshairSize","pixels","useMemo","overflow","MovingAnchor","moveTo","moveSpeed","onRest","dx","dy","ix","iy","loc","useSpring","to","config","duration","from","svg","coordsToPixels","coords","borderWidth","COORDINATE_CLOSEST_TO_CAMERA","BORDER_NODES","XZ_NODES","YZ_NODES","XY_NODES","MonochromeBox","fill","Color","strokeLinecap","darken","saturate","innerStroke","lighten","desaturate","innerStrokeWidth","gProps","innerStrokeCss","string","strokeCss","style","onClick","onContextMenu","cursor","join","PIXEL_FRIENDLY_PYTHAGORAS","pow","mathRoundMaybe","n","round","AbsolutelyPositionedContainer","styled","div","Viewport","overlay","center","zoom","translateX","translateY","springStyles","transform","ViewportSvgContainer","rest","width","height","shapeRendering","viewBox","NoAxis","Backdrop","sqrt","Demo","window","alert","Coordinate","this","coord","dz","isNaN","abs","xy","MonochromeTile","BinaryHeap","scoreFunction","content","element","push","sinkDown","length","result","end","pop","bubbleUp","node","indexOf","parentN","parent","elemScore","child2N","child1N","swap","child1Score","child1","child2","MANHATTAN","pos0","pos1","Path","graph","options","terrain","cache","heap","heuristic","Map","get","Error","f","closestNode","closestNodeHeuristics","h","g","closed","visited","set","currentNode","currentNodeHeuristics","tracePath","neighbors","getNeighbors","il","neighbor","neighborHeuristics","canWalkHere","gScore","beenVisited","hScore","closest","rescoreElement","heuristicReport","curr","unshift","Event","listeners","callback","splice","args","forEach","noop","Entity","id","location","pathStart","pathEnd","pathStepStart","pathStepEnd","Component","job","on","destination","find","unlisten","nextStep","shift","doPathStep","emit","hasNaN","EntityComponent","entity","useState","animatePosition","deps","cb","useCallback","eventDestroyers","d","useEffect","useEventListeners","euclideanDistanceTo","offset","GuardEntity","PatrolJob","waypoints","waypointIndex","destroyers","setTimeout","walkTo","random","constructor","name","TerrainCoordinate","OUT_OF_BOUNDS","Symbol","average","values","valid","filter","val","sum","TerrainGenerator","max","detail","ceil","log","Float32Array","roughness","divide","half","scale","square","diamond","ave","Terrain","coordinates","coordinatesInRenderOrder","selector","island","seen","queue","current","neighbours","includes","open","slice","islands","next","getIslandOfCoordinate","getIndexForXy","getAtXy","Boolean","sort","generator","generate","Array","_","floor","sortedHeights","waterlineOffset","Scene","entities","play","generateRandom","walkableTiles","getIslands","guard","doJob","ActiveEntityOverlayWrapper","section","ActiveEntityOverlay","HelloWorldSceneTerrain","monochromeBoxProps","isHovered","setIsHovered","translated","clone","undefined","onMouseEnter","onMouseLeave","opaquer","toString","scene","console","WORLD_SIZE","centerCoord","setCenterCoord","getCoordinatesInRenderOrder","event","preventDefault","Demos","exact","component","DemoCubes","App","SceneHelloWorld","styles","css","nebulaTexture","ReactDOM","render","StrictMode","globalStyleRules","hashType","document","getElementById"],"mappings":"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","file":"static/js/main.727e0178.chunk.js","sourcesContent":["import { CoordinateLike } from '../classes/Coordinate';\n//     z+\n//     |     y+\n//     |    /\n//     |  /\n//     |/\n// 0,0  \\\n//        \\\n//          \\ x+\n\nconst BASE_LENGTH = 32;\n\nexport type CoordValue = number;\nexport type Length = number;\nexport type Angle = number;\nexport type CoordArray = [CoordValue, CoordValue, CoordValue];\nexport type CoordObject = { x: CoordValue; y: CoordValue; z: CoordValue };\n\nfunction createPerspective(degrees: Angle, tileSize: Length) {\n\tconst isometricAngle = degrees * (Math.PI / 180);\n\tconst _isometricCos = Math.cos(isometricAngle);\n\tconst _isometricSin = Math.sin(isometricAngle);\n\tconst _isometricTan = Math.tan(isometricAngle);\n\n\tconst tileHeight = tileSize;\n\n\treturn {\n\t\tdegrees: degrees,\n\t\tradians: degrees * (Math.PI / 180),\n\t\ttileSize: tileSize,\n\t\ttoPixels: (x: CoordValue, y: CoordValue, z: CoordValue) => {\n\t\t\tconst cartX = (x + y) * _isometricCos,\n\t\t\t\tcartY = (x - y) * _isometricSin;\n\n\t\t\treturn [\n\t\t\t\tcartX * tileSize, // x\n\t\t\t\tcartY * tileSize - tileHeight * z // y\n\t\t\t];\n\t\t},\n\t\ttoCoords: (cartX: CoordValue, cartY: CoordValue) => {\n\t\t\tconst isoY = _isometricTan * cartX + cartY,\n\t\t\t\tisoX = (cartY - isoY) / -_isometricSin - isoY;\n\n\t\t\t// this is good so far, b should be rescaled for tile size. as\n\t\t\treturn [isoX / tileSize, isoY / tileSize];\n\t\t}\n\t};\n}\n\nexport const PERSPECTIVE = createPerspective(30, BASE_LENGTH);\n\nexport function randomComparator() {\n\treturn 0.5 - Math.random();\n}\n\nexport function distanceToCameraComparator(a: CoordinateLike, b: CoordinateLike) {\n\tconst dX = b.x - a.x;\n\tif (dX) {\n\t\treturn -dX;\n\t}\n\n\tconst dY = a.y - b.y;\n\tif (dY) {\n\t\treturn -dY;\n\t}\n\tconst dZ = b.z - a.z;\n\tif (dZ) {\n\t\treturn -dZ;\n\t}\n\treturn 0;\n}\n","import React, { FunctionComponent, ReactElement } from 'react';\n\nimport { CoordArray, PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nexport const LinePath: FunctionComponent<\n\tOmit<React.SVGProps<SVGLineElement>, 'path'> & {\n\t\tpath: CoordArray[];\n\t}\n> = ({ path, stroke = 'black', strokeWidth = BORDER_WIDTH }) => {\n\tlet spatialCoordinates = path\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + BORDER_WIDTH));\n\n\treturn (\n\t\t<>\n\t\t\t{spatialCoordinates.reduce<ReactElement[]>(\n\t\t\t\t(lines, start, i, all) =>\n\t\t\t\t\ti\n\t\t\t\t\t\t? lines.concat([\n\t\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tx1={start[0]}\n\t\t\t\t\t\t\t\t\ty1={start[1]}\n\t\t\t\t\t\t\t\t\tx2={all[i - 1][0]}\n\t\t\t\t\t\t\t\t\ty2={all[i - 1][1]}\n\t\t\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\t\t\tstrokeWidth={String(strokeWidth)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  ])\n\t\t\t\t\t\t: lines,\n\t\t\t\t[]\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { useSpring } from '@react-spring/core';\nimport { animated } from '@react-spring/web';\nimport React, { FunctionComponent, useMemo } from 'react';\nimport { CoordinateLike } from '../classes/Coordinate';\nimport { LinePath } from './LinePath';\nimport { CoordArray, Length, PERSPECTIVE } from './PERSPECTIVE';\n\nconst Crosshair: FunctionComponent<{ size: Length }> = ({ size = 4 }) => {\n\tconst lines: CoordArray[][] = [\n\t\t[\n\t\t\t// over the x axis\n\t\t\t[-1 * size, 0, 0],\n\t\t\t[size, 0, 0]\n\t\t],\n\t\t[\n\t\t\t// over the y axis\n\t\t\t[0, -1 * size, 0],\n\t\t\t[0, size, 0]\n\t\t],\n\t\t[\n\t\t\t// over the z axis\n\t\t\t[0, 0, -1 * size],\n\t\t\t[0, 0, size]\n\t\t]\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t{lines.map((points, i) => (\n\t\t\t\t<LinePath key={i} path={points} stroke={'rgba(0,0,0)'} strokeWidth={0.5} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport const Anchor: FunctionComponent<\n\t{\n\t\tcrosshairSize?: Length;\n\t} & Partial<CoordinateLike>\n> = ({ x = 0, y = 0, z = 0, children, crosshairSize = 0 }) => {\n\tconst pixels = useMemo(() => PERSPECTIVE.toPixels(x, y, z), [x, y, z]);\n\n\treturn (\n\t\t<svg x={pixels[0]} y={pixels[1]} overflow={'visible'}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</svg>\n\t);\n};\n\nexport const MovingAnchor: FunctionComponent<{\n\tmoveTo: CoordinateLike;\n\tmoveSpeed: number;\n\tonRest?: () => void;\n\tcrosshairSize?: Length;\n}> = ({ moveTo, moveSpeed, onRest, children, crosshairSize = 0 }) => {\n\tconst [dx, dy] = useMemo(() => PERSPECTIVE.toPixels(moveTo.x, moveTo.y, moveTo.z), [moveTo]);\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tconst [ix, iy] = useMemo(() => [dx, dy], []);\n\n\t// if (isNaN(dx) || isNaN(dy)) {\n\t// \tdebugger;\n\t// }\n\tconst loc = useSpring({\n\t\tto: {\n\t\t\tx: dx,\n\t\t\ty: dy\n\t\t},\n\t\tconfig: {\n\t\t\tduration: moveSpeed\n\t\t},\n\t\tfrom: {\n\t\t\tx: ix,\n\t\t\ty: iy\n\t\t},\n\t\tonRest\n\t});\n\n\t// @TODO reuse <Anchor>\n\treturn (\n\t\t<animated.svg x={loc.x} y={loc.y} overflow={'visible'}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</animated.svg>\n\t);\n};\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { CoordArray, Length, PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nfunction coordsToPixels(coords: CoordArray[], borderWidth = BORDER_WIDTH) {\n\treturn coords\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + borderWidth));\n}\n\nconst COORDINATE_CLOSEST_TO_CAMERA = PERSPECTIVE.toPixels(1, 0, 1).map(c => c + BORDER_WIDTH);\n\nlet BORDER_NODES = coordsToPixels([\n\t[1, 1, 0], // 0\n\t[1, 1, 1],\n\t[0, 1, 1], // 2\n\t[0, 0, 1],\n\t[0, 0, 0], // 4\n\t[1, 0, 0]\n]);\n\n// facing to the bottom left, aka -y\nlet XZ_NODES = coordsToPixels([\n\t[0, 0, 0],\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 0, 0]\n]);\n\n// facing to the bottom right, aka +x\nlet YZ_NODES = coordsToPixels([\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[1, 1, 1],\n\t[1, 0, 1]\n]);\n\n// facing top, aka +z\nlet XY_NODES = coordsToPixels([\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 1, 1],\n\t[0, 1, 1]\n]);\n\nexport const MonochromeBox: FunctionComponent<\n\t{\n\t\tstrokeLinecap?: 'round' | 'butt' | 'square' | 'inherit' | undefined;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t\tstrokeWidth?: Length;\n\t\tinnerStrokeWidth?: Length;\n\t\tinnerStroke?: Color;\n\t} & Pick<\n\t\tReact.SVGProps<SVGGElement>,\n\t\t'onClick' | 'onContextMenu' | 'onMouseEnter' | 'onMouseLeave'\n\t>\n> = ({\n\tfill = Color('#282c34'),\n\tstrokeLinecap = 'round',\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = 1,\n\tinnerStroke = fill.lighten(0.4).desaturate(0.8),\n\tinnerStrokeWidth = strokeWidth,\n\t...gProps\n}) => {\n\tconst innerStrokeCss = innerStroke && innerStroke.string();\n\tconst strokeCss = stroke && stroke.string();\n\n\tconst style: Record<string, string> = {};\n\tif (gProps.onClick || gProps.onContextMenu) {\n\t\tstyle.cursor = 'pointer';\n\t}\n\n\treturn (\n\t\t<g {...gProps} style={style}>\n\t\t\t{fill && (\n\t\t\t\t<>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xz'}\n\t\t\t\t\t\tpoints={XZ_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xy'}\n\t\t\t\t\t\tpoints={XY_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.lighten(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'yz'}\n\t\t\t\t\t\tpoints={YZ_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.darken(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{innerStroke && (\n\t\t\t\t<>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'x-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[3][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[3][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'y-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[1][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[1][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'z-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[5][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[5][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t<polygon\n\t\t\t\tkey={'outline'}\n\t\t\t\tpoints={BORDER_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\tstroke={strokeCss}\n\t\t\t\tfill={'transparent'}\n\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t/>\n\t\t</g>\n\t);\n};\n","import styled from '@emotion/styled';\nimport React, { FunctionComponent, ReactElement, useMemo } from 'react';\nimport { AnimatedComponent } from 'react-spring';\nimport { CoordinateLike } from '../classes/Coordinate';\nimport { Length, PERSPECTIVE } from './PERSPECTIVE';\n\n// The pythagoras distance (1/sqrt(2)) with a little tweaking for better looks\nconst PIXEL_FRIENDLY_PYTHAGORAS = 1 / Math.pow(2, 1 / 2); //0.8;\n\nfunction mathRoundMaybe(n: number) {\n\t// For debugging only. Adjust to taste.\n\n\treturn Math.round(n);\n\t// return n;\n}\n\n// Force the type to AnimatedComponent to avoid a weird TS inference bug\n//\nexport const AbsolutelyPositionedContainer = styled.div`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\twidth: 0;\n\theight: 0;\n\ttransition: transform 5s;\n\t> * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n` as unknown as AnimatedComponent<'div'>;\n\ntype ViewportComponentProps = {\n\tzoom?: number;\n\tcenter?: CoordinateLike;\n\toverlay?: ReactElement;\n};\n\nexport const Viewport: FunctionComponent<ViewportComponentProps> = ({\n\toverlay,\n\tcenter = { x: 0, y: 0, z: 0 },\n\tzoom = 1,\n\tchildren\n}) => {\n\tconst [translateX, translateY] = useMemo(\n\t\t() =>\n\t\t\tPERSPECTIVE.toPixels(center.x, center.y, center.z).map(\n\t\t\t\t(n, i) => mathRoundMaybe(-n) + (i ? 0 : 0.5)\n\t\t\t),\n\t\t[center]\n\t);\n\n\tconst springStyles =\n\t\t//useSpring({\n\t\t// \tconfig: config.molasses,\n\t\t// \tto:\n\t\t{\n\t\t\ttransform: `translate(\n\t\t\t\t${translateX * zoom}px,\n\t\t\t\t${translateY * zoom}px\n\t\t\t)`\n\t\t};\n\t// });\n\n\treturn (\n\t\t<AbsolutelyPositionedContainer style={springStyles}>\n\t\t\t<ViewportSvgContainer zoom={zoom} children={children} />\n\t\t\t{overlay}\n\t\t</AbsolutelyPositionedContainer>\n\t);\n};\n\nexport const ViewportSvgContainer: FunctionComponent<\n\t{\n\t\tzoom?: number;\n\t} & React.SVGProps<SVGSVGElement>\n> = ({ zoom = 1, ...rest }) => (\n\t<svg\n\t\twidth=\"1px\"\n\t\theight=\"1px\"\n\t\toverflow=\"visible\"\n\t\tshapeRendering=\"geometricPrecision\"\n\t\tviewBox={[0, 0, 1 / zoom, 1 / zoom].join(' ')}\n\t\t{...rest}\n\t/>\n);\n\nconst NoAxis = styled.div<{ zoom?: number }>`\n\t--scale-val: ${({ zoom = 1 }) => zoom};\n\n\tposition: absolute;\n\ttransform-origin: top left;\n\ttransform: scale(var(--scale-val));\n`;\n\nconst YAxis = styled(NoAxis)`\n\ttransform: skewY(-${PERSPECTIVE.degrees}deg)\n\t\tscale(calc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)), var(--scale-val));\n`;\n\nconst ZAxis = styled(NoAxis)`\n\ttransform: rotate(-${PERSPECTIVE.degrees}deg) skewX(${PERSPECTIVE.degrees}deg)\n\t\tscale(\n\t\t\tcalc(${Math.sqrt(PIXEL_FRIENDLY_PYTHAGORAS)} * var(--scale-val)),\n\t\t\tcalc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val))\n\t\t);\n`;\n\nconst XAxis = styled(NoAxis)`\n\ttransform: skewY(${PERSPECTIVE.degrees}deg)\n\t\tscale(calc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)), var(--scale-val));\n`;\n\nexport const ViewportHtmlContainer: FunctionComponent<{\n\taxis?: 'x' | 'y' | 'z';\n\twidth: Length;\n\theight: Length;\n\tzoom?: number;\n\tlocation: CoordinateLike;\n}> = ({ location, zoom = 1, axis, width, height, children }) => {\n\tconst { x, y, z } = location,\n\t\t// @TODO use css variable to zoom instead of JS\n\t\t[left, top] = PERSPECTIVE.toPixels(x, y, z).map(n => mathRoundMaybe(n * zoom));\n\t// @TODO use css variable to zoom instead of JS\n\tconst [pixelWidth] = PERSPECTIVE.toPixels(0, width, height).map(n => mathRoundMaybe(n * zoom));\n\tconst Axis = axis === 'y' ? YAxis : axis === 'x' ? XAxis : axis === 'z' ? ZAxis : NoAxis;\n\treturn (\n\t\t<Axis\n\t\t\tzoom={zoom}\n\t\t\tstyle={{\n\t\t\t\tleft: mathRoundMaybe(left),\n\t\t\t\ttop: mathRoundMaybe(top),\n\t\t\t\twidth:\n\t\t\t\t\tmathRoundMaybe(axis ? pixelWidth / PIXEL_FRIENDLY_PYTHAGORAS : pixelWidth) +\n\t\t\t\t\t'px',\n\t\t\t\theight:\n\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t(height * PERSPECTIVE.tileSize) /\n\t\t\t\t\t\t\t(axis === 'z' ? PIXEL_FRIENDLY_PYTHAGORAS : 1)\n\t\t\t\t\t) + 'px'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</Axis>\n\t);\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div<{ height?: number }>`\n\tposition: relative;\n\theight: ${({ height = 180 }) => `${height}px`};\n\tbackground-image: linear-gradient(\n\t\t45deg,\n\t\trgba(255, 255, 255, 0.02) 25%,\n\t\trgba(0, 0, 0, 0.02) 25%,\n\t\trgba(0, 0, 0, 0.02) 50%,\n\t\trgba(255, 255, 255, 0.02) 50%,\n\t\trgba(255, 255, 255, 0.02) 75%,\n\t\trgba(0, 0, 0, 0.02) 75%,\n\t\trgba(0, 0, 0, 0.02) 100%\n\t);\n\tbackground-size: 56.57px 56.57px;\n\tmargin-bottom: 1em;\n`;\n","import Color from 'color';\nimport { FunctionComponent } from 'react';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { Viewport } from '../space/Viewport';\nimport { Backdrop } from './scaffolding';\n\nconst Demo: FunctionComponent = () => (\n\t<>\n\t\t<Backdrop>\n\t\t\t<Viewport zoom={1} center={{ x: 0.5, y: 0.5, z: 0.5 }}>\n\t\t\t\t<Anchor x={-2} y={-2} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={0} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox innerStroke={Color('#630a0a7d')} fill={Color('#960202')} />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={2} z={0}>\n\t\t\t\t\t<MonochromeBox\n\t\t\t\t\t\tfill={Color('#ffffff7f')}\n\t\t\t\t\t\tonClick={() => window.alert('Clicky click!')}\n\t\t\t\t\t/>\n\t\t\t\t</Anchor>\n\t\t\t</Viewport>\n\t\t</Backdrop>\n\t\t<Backdrop>\n\t\t\t<Viewport center={{ x: 1, y: 0, z: 0.5 }}>\n\t\t\t\t<Anchor x={0} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={1} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={-1} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t</Viewport>\n\t\t</Backdrop>\n\t</>\n);\n\nexport default Demo;\n","import { CoordValue, Length } from '../space/PERSPECTIVE';\nexport interface CoordinateLike {\n\tx: CoordValue;\n\ty: CoordValue;\n\tz: CoordValue;\n}\n\nexport class Coordinate implements CoordinateLike {\n\tx: CoordValue;\n\ty: CoordValue;\n\tz: CoordValue;\n\n\tconstructor(x: CoordValue, y: CoordValue, z: CoordValue) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tequals(coord: CoordinateLike) {\n\t\treturn (\n\t\t\tthis === coord ||\n\t\t\t(coord && this.x === coord.x && this.y === coord.y && this.z === coord.z)\n\t\t);\n\t}\n\n\ttransform(dx: Length = 0, dy: Length = 0, dz: Length = 0) {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\n\t\treturn this;\n\t}\n\n\thasNaN() {\n\t\treturn isNaN(this.x) || isNaN(this.y) || isNaN(this.z);\n\t}\n\n\tmanhattanDistanceTo(coord: CoordinateLike) {\n\t\treturn Math.abs(this.x - coord.x) + Math.abs(this.y - coord.y) + Math.abs(this.z - coord.z);\n\t}\n\n\teuclideanDistanceTo(coord: CoordinateLike) {\n\t\tconst xy = Math.sqrt((this.x - coord.x) ** 2 + (this.y - coord.y) ** 2);\n\t\tconst xyz = Math.sqrt(xy ** 2 + (this.z - coord.z) ** 2);\n\t\treturn xyz;\n\t}\n\n\t// For debugging purposes only, may change without notice or tests\n\ttoString() {\n\t\treturn [this.x, this.y, this.z].join(',');\n\t}\n\n\tstatic clone(coord: CoordinateLike) {\n\t\treturn new Coordinate(coord.x, coord.y, coord.z);\n\t}\n}\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\n\nimport { CoordArray, PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 1;\nconst BORDER_NODES: CoordArray[] = [\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[0, 1, 0],\n\t[0, 0, 0]\n];\n\nlet spatialCoordinates = BORDER_NODES.map(coordinate => PERSPECTIVE.toPixels(...coordinate)).map(\n\tcc => cc.map(c => c + BORDER_WIDTH)\n);\n\nexport const MonochromeTile: FunctionComponent<\n\tOmit<React.SVGProps<SVGPolygonElement>, 'fill' | 'stroke'> & {\n\t\tzoom?: number;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t}\n> = ({\n\tfill = Color('#282c34'), //.lighten(0.3),\n\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = BORDER_WIDTH,\n\tzoom = 1,\n\t...rest\n}) => {\n\treturn (\n\t\t<polygon\n\t\t\tpoints={spatialCoordinates.map(c => c.map(c => c * zoom).join(',')).join(' ')}\n\t\t\tstroke={stroke.string()}\n\t\t\tfill={fill.string()}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n","type BinaryHeapScorer<P> = (node: P) => number;\n\nexport class BinaryHeap<P> {\n\tscoreFunction: BinaryHeapScorer<P>;\n\tcontent: P[] = [];\n\tconstructor(scoreFunction: BinaryHeapScorer<P>) {\n\t\tthis.content = [];\n\t\tthis.scoreFunction = scoreFunction;\n\t}\n\tpush(element: P) {\n\t\t// Add the new element to the end of the array.\n\t\tthis.content.push(element);\n\n\t\t// Allow it to sink down.\n\t\tthis.sinkDown(this.content.length - 1);\n\t}\n\tpop() {\n\t\t// Store the first element so we can return it later.\n\t\tconst result = this.content[0];\n\n\t\t// Get the element at the end of the array.\n\t\tconst end = this.content.pop();\n\t\tif (!end) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// If there are any elements left, put the end element at the\n\t\t// start, and let it bubble up.\n\t\tif (this.content.length > 0) {\n\t\t\tthis.content[0] = end;\n\t\t\tthis.bubbleUp(0);\n\t\t}\n\t\treturn result;\n\t}\n\tremove(node: P) {\n\t\tconst i = this.content.indexOf(node);\n\n\t\t// When it is found, the process seen in 'pop' is repeated\n\t\t// to fill up the hole.\n\t\tconst end = this.content.pop();\n\t\tif (!end) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (i !== this.content.length - 1) {\n\t\t\tthis.content[i] = end;\n\n\t\t\tif (this.scoreFunction(end) < this.scoreFunction(node)) {\n\t\t\t\tthis.sinkDown(i);\n\t\t\t} else {\n\t\t\t\tthis.bubbleUp(i);\n\t\t\t}\n\t\t}\n\t}\n\tsize() {\n\t\treturn this.content.length;\n\t}\n\trescoreElement(node: P) {\n\t\tthis.sinkDown(this.content.indexOf(node));\n\t}\n\tsinkDown(n: number) {\n\t\t// Fetch the element that has to be sunk.\n\t\tconst element = this.content[n];\n\n\t\t// When at 0, an element can not sink any further.\n\t\twhile (n > 0) {\n\t\t\t// Compute the parent element's index, and fetch it.\n\t\t\tconst parentN = ((n + 1) >> 1) - 1;\n\t\t\tconst parent = this.content[parentN];\n\t\t\t// Swap the elements if the parent is greater.\n\t\t\tif (this.scoreFunction(element) < this.scoreFunction(parent)) {\n\t\t\t\tthis.content[parentN] = element;\n\t\t\t\tthis.content[n] = parent;\n\t\t\t\t// Update 'n' to continue at the new position.\n\t\t\t\tn = parentN;\n\t\t\t}\n\t\t\t// Found a parent that is less, no need to sink any further.\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tbubbleUp(n: number) {\n\t\t// Look up the target element and its score.\n\t\tconst length = this.content.length;\n\t\tconst element = this.content[n];\n\t\tconst elemScore = this.scoreFunction(element);\n\n\t\twhile (true) {\n\t\t\t// Compute the indices of the child elements.\n\t\t\tconst child2N = (n + 1) << 1;\n\t\t\tconst child1N = child2N - 1;\n\t\t\t// This is used to store the new position of the element, if any.\n\t\t\tlet swap = null;\n\t\t\tlet child1Score;\n\t\t\t// If the first child exists (is inside the array)...\n\t\t\tif (child1N < length) {\n\t\t\t\t// Look it up and compute its score.\n\t\t\t\tconst child1 = this.content[child1N];\n\t\t\t\tchild1Score = this.scoreFunction(child1);\n\n\t\t\t\t// If the score is less than our element's, we need to swap.\n\t\t\t\tif (child1Score < elemScore) {\n\t\t\t\t\tswap = child1N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Do the same checks for the other child.\n\t\t\tif (child2N < length) {\n\t\t\t\tconst child2 = this.content[child2N];\n\t\t\t\tconst child2Score = this.scoreFunction(child2);\n\t\t\t\t// child1Score is number or undefined. To satisfy TS (for the original code) it is coerced to number,\n\t\t\t\t// but I'm not sure why it wouldn't stay undefined, really.\n\t\t\t\tif (child2Score < (swap === null ? elemScore : (child1Score as number))) {\n\t\t\t\t\tswap = child2N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the element needs to be moved, swap it, and continue.\n\t\t\tif (swap !== null) {\n\t\t\t\tthis.content[n] = this.content[swap];\n\t\t\t\tthis.content[swap] = element;\n\t\t\t\tn = swap;\n\t\t\t}\n\t\t\t// Otherwise, we are done.\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n","// An adaptation of:\n//   javascript-astar 0.4.1\n//   http://github.com/bgrins/javascript-astar\n//   Freely distributable under the MIT License.\n//   Implements the astar search algorithm in javascript using a Binary Heap.\n//   Includes Binary Heap (with modifications) from Marijn Haverbeke.\n//   http://eloquentjavascript.net/appendix2.html\n\nimport { BinaryHeap } from './BinaryHeap';\nimport { Terrain } from './Terrain';\nimport { TerrainCoordinate } from './TerrainCoordinate';\n\n// See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\ntype HeuristicScorer = (a: TerrainCoordinate, b: TerrainCoordinate) => number;\n\n/**\n * Perform an A* Search on a graph given a start and end node.\n */\n\ntype HeuristicReport = {\n\tcoordinate: TerrainCoordinate;\n\th: number;\n\tg: number;\n\tf: number;\n\tparent: HeuristicReport | null;\n\tclosed: Boolean;\n\tvisited: boolean;\n};\n\ntype PathOptions = {\n\tclosest: Boolean;\n\theuristic?: HeuristicScorer;\n};\n\nconst MANHATTAN: HeuristicScorer = (pos0, pos1) => {\n\tconst d1 = Math.abs(pos1.x - pos0.x);\n\tconst d2 = Math.abs(pos1.y - pos0.y);\n\treturn d1 + d2;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst DIAGONAL: HeuristicScorer = (pos0, pos1) => {\n\tconst D = 1;\n\tconst D2 = Math.sqrt(2);\n\tconst d1 = Math.abs(pos1.x - pos0.x);\n\tconst d2 = Math.abs(pos1.y - pos0.y);\n\treturn D * (d1 + d2) + (D2 - 2 * D) * Math.min(d1, d2);\n};\n\nfunction getVisitationCost(terrain: Terrain, from: TerrainCoordinate, neighbor: TerrainCoordinate) {\n\treturn 1;\n}\n\nexport class Path {\n\tprivate readonly terrain: Terrain;\n\tprivate readonly options: PathOptions;\n\tprivate readonly cache: Map<TerrainCoordinate, HeuristicReport>;\n\tprivate readonly heap: BinaryHeap<TerrainCoordinate>;\n\tprivate readonly heuristic: HeuristicScorer;\n\n\tconstructor(graph: Terrain, options: PathOptions) {\n\t\tthis.terrain = graph;\n\t\tthis.options = options;\n\n\t\tthis.cache = new Map<TerrainCoordinate, HeuristicReport>();\n\n\t\tthis.heap = new BinaryHeap<TerrainCoordinate>(node => {\n\t\t\tconst heuristic = this.cache.get(node);\n\t\t\tif (!heuristic) {\n\t\t\t\tthrow new Error('This is weird');\n\t\t\t}\n\t\t\treturn heuristic.f;\n\t\t});\n\n\t\tthis.heuristic = MANHATTAN;\n\t}\n\n\tfind(start: TerrainCoordinate, end: TerrainCoordinate) {\n\t\tlet closestNode = start; // set the start node to be the closest if required\n\t\tlet closestNodeHeuristics: HeuristicReport = {\n\t\t\tcoordinate: closestNode,\n\t\t\th: this.heuristic(start, end),\n\t\t\tg: 0,\n\t\t\tf: 0,\n\n\t\t\tparent: null,\n\n\t\t\t// Unsure what the default value should be\n\t\t\tclosed: true,\n\t\t\tvisited: true\n\t\t};\n\n\t\t// At this stage `start` is also `closestNode`, so lets associate those heuristics\n\t\tthis.cache.set(start, closestNodeHeuristics);\n\n\t\tthis.heap.push(start);\n\n\t\twhile (this.heap.size() > 0) {\n\t\t\t// Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n\t\t\tconst currentNode = this.heap.pop();\n\t\t\tconst currentNodeHeuristics = this.cache.get(currentNode);\n\t\t\tif (!currentNodeHeuristics) {\n\t\t\t\tthrow new Error('Somehow opening a node that has no heuristic data');\n\t\t\t}\n\n\t\t\t// End case -- result has been found, return the traced path.\n\t\t\tif (currentNode === end) {\n\t\t\t\treturn this.tracePath(currentNodeHeuristics);\n\t\t\t}\n\n\t\t\t// Normal case -- move currentNode from open to closed, process each of its neighbors.\n\t\t\tcurrentNodeHeuristics.closed = true;\n\n\t\t\t// Find all neighbors for the current node.\n\t\t\tconst neighbors = this.terrain.getNeighbors(currentNode);\n\n\t\t\tfor (let i = 0, il = neighbors.length; i < il; ++i) {\n\t\t\t\tconst neighbor = neighbors[i];\n\t\t\t\tlet neighborHeuristics = this.cache.get(neighbor);\n\n\t\t\t\tif (neighborHeuristics?.closed || !neighbor.canWalkHere()) {\n\t\t\t\t\t// Not a valid node to process, skip to next neighbor.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// The g score is the shortest distance from start to current node.\n\t\t\t\t// We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n\t\t\t\tconst gScore =\n\t\t\t\t\tcurrentNodeHeuristics.g +\n\t\t\t\t\tgetVisitationCost(this.terrain, currentNode, neighbor);\n\t\t\t\tconst beenVisited = !!neighborHeuristics;\n\n\t\t\t\tif (!beenVisited || (neighborHeuristics && gScore < neighborHeuristics.g)) {\n\t\t\t\t\tconst hScore = this.heuristic(neighbor, end);\n\t\t\t\t\t// Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n\t\t\t\t\tneighborHeuristics = {\n\t\t\t\t\t\tcoordinate: neighbor,\n\t\t\t\t\t\th: hScore,\n\t\t\t\t\t\tg: gScore,\n\t\t\t\t\t\tf: gScore + hScore,\n\t\t\t\t\t\tparent: currentNodeHeuristics,\n\t\t\t\t\t\tclosed: true,\n\t\t\t\t\t\tvisited: true\n\t\t\t\t\t};\n\t\t\t\t\tthis.cache.set(neighbor, neighborHeuristics as HeuristicReport);\n\n\t\t\t\t\tif (this.options.closest) {\n\t\t\t\t\t\t// If the neighbour is closer than the current closestNode or if it's equally close but has\n\t\t\t\t\t\t// a cheaper path than the current closest node then it becomes the closest node\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tneighborHeuristics.h < closestNodeHeuristics.h ||\n\t\t\t\t\t\t\t(neighborHeuristics.h === closestNodeHeuristics.h &&\n\t\t\t\t\t\t\t\tneighborHeuristics.g < closestNodeHeuristics.g)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tclosestNode = neighbor;\n\t\t\t\t\t\t\tclosestNodeHeuristics = neighborHeuristics;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!beenVisited) {\n\t\t\t\t\t\t// Pushing to heap will put it in proper place based on the 'f' value.\n\t\t\t\t\t\tthis.heap.push(neighbor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Already seen the node, but since it has been rescored we need to reorder it in the heap\n\t\t\t\t\t\tthis.heap.rescoreElement(neighbor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.closest) {\n\t\t\treturn this.tracePath(closestNodeHeuristics);\n\t\t}\n\n\t\t// No result was found - empty array signifies failure to find path.\n\t\treturn [];\n\t}\n\n\ttracePath(heuristicReport: HeuristicReport) {\n\t\tlet curr = heuristicReport;\n\t\tconst path = [];\n\t\twhile (curr.parent) {\n\t\t\tpath.unshift(curr);\n\t\t\tcurr = curr.parent;\n\t\t}\n\t\treturn path.map(heuristicReport => heuristicReport.coordinate);\n\t}\n}\n","import { DependencyList, useCallback, useEffect } from 'react';\n\ntype EventHandler<EventData extends Array<unknown>> = (...args: EventData) => void;\ntype EventDestroyer = () => void;\n\n/**\n *  Consitutes one named event type\n */\nexport class Event<EventData extends Array<unknown> = []> {\n\tprivate listeners: EventHandler<EventData>[] = [];\n\n\ton(callback: EventHandler<EventData>) {\n\t\tthis.listeners.push(callback);\n\n\t\treturn () => {\n\t\t\tthis.listeners.splice(this.listeners.indexOf(callback));\n\t\t};\n\t}\n\n\temit(...args: EventData) {\n\t\tthis.listeners.forEach(callback => callback(...args));\n\t}\n\n\tclear() {\n\t\tthis.listeners = [];\n\t}\n}\n\n/**\n * A conventience wrapper for `useEffect` specifically for listening to a list of events, and unlistening when the\n * component is unmounted.\n *\n * For example:\n *\n *   useEventListeners(() => [\n *       entity.moveStart.on(coordinate => animatePosition(coordinate)),\n *       entity.moveRest.on(coordinate => console.log('Done'))\n *   ], [entity.moveStart, entity.moveRest]);\n */\nexport const useEventListeners = (callback: () => EventDestroyer[], deps: DependencyList = []) => {\n\tconst cb = useCallback(\n\t\t() => {\n\t\t\tconst eventDestroyers = callback();\n\t\t\treturn () => eventDestroyers.forEach(d => d());\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tdeps\n\t);\n\treturn useEffect(cb, [cb]);\n};\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { Path } from '../classes/Path';\nimport { TerrainCoordinate } from '../classes/TerrainCoordinate';\nimport { Job } from '../jobs/Patrol';\nimport { MovingAnchor } from '../space/Anchor';\nimport { Event, useEventListeners } from '../util/events';\nconst noop = () => {};\n\nexport class Entity {\n\tpublic readonly id: string;\n\n\tpublic readonly pathStart = new Event<[]>();\n\tpublic readonly pathEnd = new Event<[]>();\n\n\t/**\n\t * The event that an entity was instructed to moveTo()\n\t */\n\tpublic readonly pathStepStart = new Event<[TerrainCoordinate]>();\n\n\t/**\n\t * The event that this entity has completed a moveTo(), according to react-spring's timing\n\t */\n\tpublic readonly pathStepEnd = new Event<[TerrainCoordinate]>();\n\n\t/**\n\t * The React SVG component that consitutes this entity. Is expected to be defined in a class\n\t * that extends `Entity`.\n\t */\n\tpublic readonly Component: FunctionComponent = () => {\n\t\treturn null;\n\t};\n\n\tpublic location: TerrainCoordinate;\n\n\t/**\n\t * The set of behaviour/tasks given to this entity.\n\t */\n\tpublic job?: Job;\n\n\tconstructor(id: string, location: TerrainCoordinate) {\n\t\tthis.id = id;\n\t\tthis.location = location;\n\n\t\t// Movement handling\n\t\tthis.pathStepEnd.on(loc => {\n\t\t\tthis.location = loc;\n\t\t});\n\t}\n\n\tpublic play() {\n\t\treturn this.job?.start() || noop;\n\t}\n\n\tpublic doJob(job: Job) {\n\t\tthis.job = job;\n\n\t\t// @TODO maybe some events\n\t}\n\n\tpublic walkTo(destination: TerrainCoordinate) {\n\t\tif (!this.location.terrain) {\n\t\t\tthrow new Error(`Entity \"${this.id}\" is trying to path in a detached coordinate`);\n\t\t}\n\t\tconst path = new Path(this.location.terrain, { closest: true }).find(\n\t\t\tthis.location,\n\t\t\tdestination\n\t\t);\n\t\tif (!path.length) {\n\t\t\treturn;\n\t\t}\n\t\tlet unlisten = this.pathStepEnd.on(() => {\n\t\t\tconst nextStep = path.shift();\n\n\t\t\tif (!nextStep) {\n\t\t\t\tunlisten();\n\t\t\t\tthis.pathEnd.emit();\n\t\t\t} else {\n\t\t\t\tthis.doPathStep(nextStep);\n\t\t\t}\n\t\t});\n\t\tthis.doPathStep(path.shift() as TerrainCoordinate);\n\t}\n\t/**\n\t * Move entity directly to a coordinate. Does not consider accessibility or closeness.\n\t */\n\tpublic doPathStep(coordinate: TerrainCoordinate) {\n\t\tif (coordinate.hasNaN()) {\n\t\t\tdebugger;\n\t\t}\n\t\tthis.pathStepStart.emit(coordinate);\n\t}\n}\n\n/**\n * A component that automatically transitions the entity component as per its move instructions\n */\nexport const EntityComponent: FunctionComponent<{ entity: Entity }> = ({ entity }) => {\n\tconst [{ destination, duration }, animatePosition] = useState({\n\t\tdestination: entity.location,\n\t\tduration: 0\n\t});\n\n\tuseEventListeners(\n\t\t() => [\n\t\t\t// Listen for the entity moveStart order;\n\t\t\tentity.pathStepStart.on(destination =>\n\t\t\t\tanimatePosition({\n\t\t\t\t\tdestination,\n\t\t\t\t\tduration: entity.location.euclideanDistanceTo(destination) * 200\n\t\t\t\t})\n\t\t\t)\n\t\t],\n\t\t[entity.pathStepStart]\n\t);\n\n\tconst onRest = useCallback(\n\t\t() => entity.pathStepEnd.emit(destination),\n\t\t[entity.pathStepEnd, destination]\n\t);\n\n\treturn (\n\t\t<MovingAnchor moveTo={destination} moveSpeed={duration} onRest={onRest}>\n\t\t\t<entity.Component />\n\t\t</MovingAnchor>\n\t);\n};\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { Anchor } from '../space/Anchor';\nimport { Coordinate } from '../classes/Coordinate';\nimport { MonochromeTile } from '../space/MonochromeTile';\nimport { Entity } from './Entity';\n\nconst zoom = 0.5;\nconst translate = zoom / 2;\nconst offset = new Coordinate(-translate, -translate, 0);\n\nexport class GuardEntity extends Entity {\n\tComponent: FunctionComponent = () => {\n\t\treturn (\n\t\t\t<Anchor {...offset}>\n\t\t\t\t<MonochromeTile zoom={zoom} fill={Color('#ff0000')} />\n\t\t\t</Anchor>\n\t\t);\n\t};\n}\n","import { TerrainCoordinate } from '../classes/TerrainCoordinate';\nimport { Entity } from '../entities/Entity';\n\nexport class Job {\n\tentity: Entity;\n\tconstructor(entity: Entity) {\n\t\tthis.entity = entity;\n\t}\n\tstart() {\n\t\tthrow new Error(`Not implemented for ${this.constructor.name}`);\n\t}\n}\n\nexport class PatrolJob extends Job {\n\twaypoints: TerrainCoordinate[];\n\twaypointIndex: number;\n\n\tconstructor(entity: Entity, waypoints: TerrainCoordinate[]) {\n\t\tsuper(entity);\n\t\tif (waypoints.length < 2) {\n\t\t\tthrow new Error('A patrol must have at least 2 waypoints');\n\t\t}\n\t\tthis.waypoints = waypoints;\n\t\tthis.waypointIndex = 0;\n\t}\n\n\tstart() {\n\t\tconst destroyers = [\n\t\t\tthis.entity.pathEnd.on(() => {\n\t\t\t\t// Guards move from one waypoint to another, pausing for a random amount of time in between\n\t\t\t\tthis.waypointIndex = (this.waypointIndex + 1) % this.waypoints.length;\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => this.entity.walkTo(this.waypoints[this.waypointIndex]),\n\t\t\t\t\t500 + Math.random() * 1000\n\t\t\t\t);\n\t\t\t})\n\t\t];\n\n\t\tthis.entity.walkTo(this.waypoints[0]);\n\t\treturn () => destroyers.forEach(d => d());\n\t}\n}\n","import { Coordinate, CoordinateLike } from './Coordinate';\nimport { Terrain } from './Terrain';\n\n/**\n * A special type of coordinate that is equal to another terrain coordinate when the X and Y are equal, disregarding Z.\n */\nexport class TerrainCoordinate extends Coordinate {\n\tterrain?: Terrain;\n\n\tequals(coord: CoordinateLike) {\n\t\treturn this === coord || (coord && this.x === coord.x && this.y === coord.y);\n\t}\n\tstatic clone(coord: CoordinateLike) {\n\t\treturn new TerrainCoordinate(coord.x, coord.y, coord.z);\n\t}\n\n\tcanWalkHere() {\n\t\treturn this.z > 0;\n\t}\n}\n","/**\n * Adapted from\n *   https://github.com/hunterloftis/playfuljs-demos/blob/gh-pages/terrain/index.html#L118\n */\n\nexport const OUT_OF_BOUNDS = Symbol();\n\nfunction average(values: Array<number | typeof OUT_OF_BOUNDS>) {\n\tvar valid = values.filter((val): val is number => typeof val === 'number');\n\tvar total = valid.reduce<number>((sum, val) => sum + val, 0);\n\treturn total / valid.length;\n}\n\nexport class TerrainGenerator {\n\tprivate size: number;\n\tprivate max: number;\n\tprivate map: Float32Array;\n\n\tconstructor(size: number) {\n\t\tconst detail = Math.ceil(Math.log(size) / Math.log(2));\n\t\tthis.size = Math.pow(2, detail) + 1;\n\t\tthis.max = this.size - 1;\n\t\tthis.map = new Float32Array(this.size * this.size);\n\t}\n\n\tpublic generate(roughness: number) {\n\t\tthis.set(0, 0, this.max);\n\t\tthis.set(this.max, 0, this.max / 2);\n\t\tthis.set(this.max, this.max, 0);\n\t\tthis.set(0, this.max, this.max / 2);\n\n\t\tthis.divide(this.max, roughness);\n\t}\n\n\tpublic get(x: number, y: number) {\n\t\tif (x < 0 || x > this.max || y < 0 || y > this.max) {\n\t\t\treturn OUT_OF_BOUNDS;\n\t\t}\n\t\treturn this.map[x + this.size * y];\n\t}\n\n\tprivate set(x: number, y: number, val: number) {\n\t\tthis.map[x + this.size * y] = val;\n\t}\n\n\tprivate divide(size: number, roughness: number) {\n\t\tvar x,\n\t\t\ty,\n\t\t\thalf = size / 2;\n\t\tvar scale = roughness * size;\n\t\tif (half < 1) return;\n\n\t\tfor (y = half; y < this.max; y += size) {\n\t\t\tfor (x = half; x < this.max; x += size) {\n\t\t\t\tthis.square(x, y, half, Math.random() * scale * 2 - scale);\n\t\t\t}\n\t\t}\n\t\tfor (y = 0; y <= this.max; y += half) {\n\t\t\tfor (x = (y + half) % size; x <= this.max; x += size) {\n\t\t\t\tthis.diamond(x, y, half, Math.random() * scale * 2 - scale);\n\t\t\t}\n\t\t}\n\t\tthis.divide(size / 2, roughness);\n\t}\n\n\tprivate square(x: number, y: number, size: number, offset: number) {\n\t\tvar ave = average([\n\t\t\tthis.get(x - size, y - size), // upper left\n\t\t\tthis.get(x + size, y - size), // upper right\n\t\t\tthis.get(x + size, y + size), // lower right\n\t\t\tthis.get(x - size, y + size) // lower left\n\t\t]);\n\t\tthis.set(x, y, ave + offset);\n\t}\n\n\tprivate diamond(x: number, y: number, size: number, offset: number) {\n\t\tvar ave = average([\n\t\t\tthis.get(x, y - size), // top\n\t\t\tthis.get(x + size, y), // right\n\t\t\tthis.get(x, y + size), // bottom\n\t\t\tthis.get(x - size, y) // left\n\t\t]);\n\t\tthis.set(x, y, ave + offset);\n\t}\n}\n","import { distanceToCameraComparator } from '../space/PERSPECTIVE';\nimport { TerrainCoordinate } from './TerrainCoordinate';\nimport { OUT_OF_BOUNDS, TerrainGenerator } from './TerrainGenerator';\n\nexport class Terrain {\n\tpublic readonly coordinates: TerrainCoordinate[];\n\tprivate coordinatesInRenderOrder: TerrainCoordinate[] | null = null;\n\tprivate readonly size: number;\n\n\tconstructor(coordinates: TerrainCoordinate[]) {\n\t\tthis.coordinates = coordinates;\n\t\tthis.coordinates.forEach(coordinate => (coordinate.terrain = this));\n\n\t\tthis.size = Math.sqrt(this.coordinates.length);\n\t}\n\n\tprivate getIndexForXy(x: number, y: number) {\n\t\treturn this.size * y + x;\n\t}\n\n\tpublic getIslandOfCoordinate(\n\t\tstart: TerrainCoordinate,\n\t\tselector: (coordinate: TerrainCoordinate) => boolean = c => c.canWalkHere()\n\t) {\n\t\tconst island: TerrainCoordinate[] = [];\n\t\tconst seen: TerrainCoordinate[] = [];\n\t\tconst queue: TerrainCoordinate[] = [start];\n\n\t\twhile (queue.length) {\n\t\t\tconst current = queue.shift() as TerrainCoordinate;\n\t\t\tisland.push(current);\n\n\t\t\tconst neighbours = this.getNeighbors(current).filter(n => !seen.includes(n));\n\t\t\tseen.splice(0, 0, current, ...neighbours);\n\t\t\tqueue.splice(0, 0, ...neighbours.filter(selector));\n\t\t}\n\t\treturn island;\n\t}\n\n\tpublic getIslands(selector: (coordinate: TerrainCoordinate) => boolean = c => c.canWalkHere()) {\n\t\tlet open = this.coordinates.slice();\n\t\tconst islands = [];\n\t\twhile (open.length) {\n\t\t\tconst next = open.shift() as TerrainCoordinate;\n\t\t\tif (!selector(next)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst island = this.getIslandOfCoordinate(next, selector);\n\t\t\topen = open.filter(n => !island.includes(n));\n\t\t\tislands.push(island);\n\t\t}\n\t\treturn islands;\n\t}\n\n\tpublic getAtXy(x: number, y: number) {\n\t\tif (x < 0 || x > this.size - 1 || y < 0 || y > this.size - 1) {\n\t\t\t// Out of bounds\n\t\t\treturn;\n\t\t}\n\t\treturn this.coordinates[this.getIndexForXy(x, y)];\n\t}\n\n\tpublic getNeighbors(center: TerrainCoordinate) {\n\t\treturn [\n\t\t\t[-1, 0],\n\t\t\t[1, 0],\n\t\t\t[0, -1],\n\t\t\t[0, 1]\n\t\t\t// Diagonal neigbors not included\n\t\t]\n\t\t\t.map(([dx, dy]) => this.getAtXy(center.x + dx, center.y + dy))\n\t\t\t.filter(Boolean) as TerrainCoordinate[];\n\t}\n\n\tpublic getCoordinatesInRenderOrder() {\n\t\tif (!this.coordinatesInRenderOrder) {\n\t\t\tthis.coordinatesInRenderOrder = this.coordinates\n\t\t\t\t.slice()\n\t\t\t\t.sort(distanceToCameraComparator);\n\t\t}\n\t\treturn this.coordinatesInRenderOrder;\n\t}\n\n\tstatic generateRandom(size: number) {\n\t\tconst generator = new TerrainGenerator(size);\n\t\tgenerator.generate(1);\n\n\t\t// For clarity, the terrain must currently always be square\n\t\t// @TODO fix that some time.\n\t\tconst width = size,\n\t\t\theight = size;\n\n\t\tconst coordinates = Array.from(new Array(width * height)).map<[number, number, number]>(\n\t\t\t(_, i) => {\n\t\t\t\tconst x = i % width;\n\t\t\t\tconst y = Math.floor(i / width);\n\t\t\t\tconst z = generator.get(x, y);\n\t\t\t\tif (z === OUT_OF_BOUNDS) {\n\t\t\t\t\tthrow new Error(`Out of bounds @ ${x}, ${y}`);\n\t\t\t\t}\n\t\t\t\treturn [x, y, (2 * (z as number)) / size];\n\t\t\t}\n\t\t);\n\n\t\tconst sortedHeights = coordinates.map(coordinate => coordinate[2]).sort();\n\t\tconst RATIO_WATER_OF_TOTAL = 0.25;\n\t\tconst waterlineOffset =\n\t\t\tsortedHeights[Math.floor(sortedHeights.length * RATIO_WATER_OF_TOTAL)];\n\t\treturn new Terrain(\n\t\t\tcoordinates.map(([x, y, z]) => new TerrainCoordinate(x, y, z - waterlineOffset))\n\t\t);\n\t}\n}\n","import { Entity } from '../entities/Entity';\nimport { GuardEntity } from '../entities/GuardEntity';\nimport { PatrolJob } from '../jobs/Patrol';\nimport { Terrain } from './Terrain';\n\nexport class Scene {\n\tpublic readonly terrain: Terrain;\n\n\t// @TODO change to not readonly, and handle spontaneous changes\n\tpublic readonly entities: Entity[];\n\n\tconstructor(terrain: Terrain, entities: Entity[]) {\n\t\tthis.terrain = terrain;\n\t\tthis.entities = entities;\n\t}\n\n\tplay() {\n\t\tconst destroyers = this.entities.map(entity => entity.play());\n\t\treturn () => destroyers.forEach(d => d());\n\t}\n\n\tstatic generateRandom(size: number) {\n\t\tconst terrain = Terrain.generateRandom(size);\n\t\tconst walkableTiles = terrain.coordinates.filter(c => c.canWalkHere());\n\t\tconst islands = terrain.getIslands();\n\t\tconst entities = Array.from(new Array(3)).map((_, i) => {\n\t\t\tconst start = walkableTiles[Math.floor(Math.random() * walkableTiles.length)];\n\t\t\tconst island = islands.find(island => island.includes(start));\n\t\t\tif (!island) {\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t\tconst guard = new GuardEntity('guard-' + i, start);\n\t\t\tguard.doJob(\n\t\t\t\tnew PatrolJob(\n\t\t\t\t\tguard,\n\t\t\t\t\tArray.from(new Array(2 + Math.floor(Math.random() * 4))).map(\n\t\t\t\t\t\t() => island[Math.floor(Math.random() * island.length)]\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn guard;\n\t\t});\n\n\t\treturn new Scene(terrain, entities);\n\t}\n}\n","// const ActiveEntityOverlay: FunctionComponent = ({ children }) => null;\n\nimport styled from '@emotion/styled';\nimport React, { FunctionComponent } from 'react';\n\n// const ActiveEntityOverlay: FunctionComponent = ({ children }) => null;\nconst ActiveEntityOverlayWrapper = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n`;\n\nexport const ActiveEntityOverlay: FunctionComponent = () => (\n  <ActiveEntityOverlayWrapper>\n    <p>Heyyoo</p>\n  </ActiveEntityOverlayWrapper>\n);\n","import Color from 'color';\nimport React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport { Coordinate } from '../classes/Coordinate';\nimport { Scene } from '../classes/Scene';\nimport { EntityComponent } from '../entities/Entity';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { MonochromeTile } from '../space/MonochromeTile';\nimport { distanceToCameraComparator } from '../space/PERSPECTIVE';\nimport { Viewport } from '../space/Viewport';\nimport { ActiveEntityOverlay } from '../ui/ActiveEntityOverlay';\n\nconst HelloWorldSceneTerrain: FunctionComponent<\n\t{\n\t\tcoordinate: Coordinate;\n\t} & (typeof MonochromeBox extends FunctionComponent<infer T> ? T : {})\n> = ({ coordinate: coord, ...monochromeBoxProps }) => {\n\tconst [isHovered, setIsHovered] = useState(false);\n\tconst translated = Coordinate.clone(coord).transform(\n\t\t-0.5,\n\t\t-0.5,\n\t\tcoord.z < 0 ? -coord.z - 0.5 : -1\n\t);\n\treturn (\n\t\t<Anchor key={translated.toString()} x={translated.x} y={translated.y} z={translated.z}>\n\t\t\t{coord.z > 0 ? (\n\t\t\t\t<MonochromeBox\n\t\t\t\t\t{...monochromeBoxProps}\n\t\t\t\t\tfill={isHovered ? Color('#282c34').lighten(1) : undefined}\n\t\t\t\t\tstroke={isHovered ? Color('#fff') : undefined}\n\t\t\t\t\tinnerStroke={isHovered ? Color('#ccd1dd') : undefined}\n\t\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<MonochromeTile\n\t\t\t\t\tfill={\n\t\t\t\t\t\tisHovered\n\t\t\t\t\t\t\t? Color('#282c34').lighten(1).opaquer(-0.5)\n\t\t\t\t\t\t\t: Color('#282c34').opaquer(-0.5)\n\t\t\t\t\t}\n\t\t\t\t\tstroke={isHovered ? Color('#fff') : undefined}\n\t\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Anchor>\n\t);\n};\n\nconst WORLD_SIZE = 40;\nconst Demo: FunctionComponent = () => {\n\tconst scene = useMemo(() => {\n\t\tconst scene = Scene.generateRandom(WORLD_SIZE);\n\t\t(window as any).scene = scene;\n\t\treturn scene;\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconsole.log('--- Scene#play ---');\n\t\treturn scene.play();\n\t}, [scene]);\n\n\tconst [centerCoord, setCenterCoord] = useState(\n\t\tscene.terrain.getAtXy(Math.floor(WORLD_SIZE / 2), Math.floor(WORLD_SIZE / 2))\n\t);\n\n\tconst zoomFactor = 1;\n\n\tconst terrain = useMemo(\n\t\t() =>\n\t\t\tscene.terrain.getCoordinatesInRenderOrder().map(coord => (\n\t\t\t\t<HelloWorldSceneTerrain\n\t\t\t\t\tkey={coord.toString()}\n\t\t\t\t\tcoordinate={coord}\n\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tsetCenterCoord(coord);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[scene.terrain]\n\t);\n\n\tconst entities = useMemo(\n\t\t() =>\n\t\t\tscene.entities\n\t\t\t\t.slice()\n\t\t\t\t.sort((a, b) => distanceToCameraComparator(a.location, b.location))\n\t\t\t\t.map(entity => <EntityComponent key={entity.id} entity={entity} />),\n\t\t[scene.entities]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Viewport center={centerCoord} zoom={zoomFactor}>\n\t\t\t\t<g id=\"scene-terrain\">{terrain}</g>\n\t\t\t\t<g id=\"scene-entities\">{entities}</g>\n\t\t\t</Viewport>\n\t\t\t<ActiveEntityOverlay />\n\t\t</>\n\t);\n};\nexport default Demo;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport DemoCubes from './demos/demo.cubes';\nimport SceneHelloWorld from './demos/scene.hello-world';\n\nfunction Demos() {\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/tests\">Tests</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Route exact path=\"/tests\" component={DemoCubes} />\n\t\t</>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={SceneHelloWorld} />\n\t\t\t<Route component={Demos} />\n\t\t</Switch>\n\t);\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/nebula-282c34.dda754f6.png\";","import { css } from '@emotion/react';\nimport nebulaTexture from './textures/nebula-282c34.png';\n\nconst styles = css`\n\tbody {\n\t\tbackground: #282c34 url(${nebulaTexture});\n\t}\n`;\n\nexport default styles;\n","import { Global } from '@emotion/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport globalStyleRules from './styles';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Global styles={globalStyleRules} />\n\t\t<HashRouter hashType={'slash'}>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}
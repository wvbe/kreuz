{"version":3,"sources":["isometric/PERSPECTIVE.ts","isometric/objects/LinePath.tsx","isometric/3d/Anchor.tsx","isometric/3d/Viewport.tsx","isometric/3d/Coordinate.ts","isometric/objects/MonochromeBox.tsx","isometric/objects/MonochromeTile.tsx","ui/ActiveEntityOverlay.tsx","ui/ContextMenu.tsx","scene/WorkerEntity.tsx","scene/Entity.ts","scene/Scene.ts","scene/HelloWorld.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PERSPECTIVE","degrees","tileSize","isometricAngle","Math","PI","_isometricCos","cos","_isometricSin","sin","_isometricTan","tan","tileHeight","sqrt","pow","radians","toPixels","x","y","z","toCoords","cartX","cartY","isoY","createPerspective","distanceToCameraComparator","a","b","dX","dY","dZ","LinePath","path","stroke","strokeWidth","spatialCoordinates","map","coordinate","cc","c","reduce","lines","start","i","all","concat","x1","y1","x2","y2","String","Crosshair","size","points","Anchor","children","crosshairSize","pixels","useMemo","overflow","PIXEL_FRIENDLY_PYTHAGORAS","mathRoundMaybe","n","round","AbsolutelyPositionedContainer","styled","animated","div","Viewport","overlay","center","zoom","translateX","translateY","springStyles","useSpring","config","molasses","to","transform","style","ViewportSvgContainer","rest","width","height","shapeRendering","viewBox","join","cursor","NoAxis","YAxis","ZAxis","XAxis","ViewportHtmlContainer","location","axis","left","top","pixelWidth","Axis","Coordinate","this","coord","dx","dy","dz","abs","coordsToPixels","coords","borderWidth","COORDINATE_CLOSEST_TO_CAMERA","BORDER_NODES","XZ_NODES","YZ_NODES","XY_NODES","MonochromeBox","fill","Color","strokeLinecap","darken","saturate","innerStroke","lighten","desaturate","innerStrokeWidth","gProps","innerStrokeCss","string","strokeCss","MonochromeTile","ActiveEntityOverlayWrapper","section","ActiveEntityOverlay","ContextMenuArrow","ContextMenuBoundary","ContextMenuBody","ContextMenuButton","button","ContextMenu","WorkerEntity","Component","clone","id","RandomScene","terrain","Array","from","_","floor","random","entities","xy","terrainIndex","HelloWorldContextMenu","topic","close","onClick","window","alert","JSON","stringify","HelloWorldSceneTerrain","monochromeBoxProps","useState","isHovered","setIsHovered","translated","undefined","onMouseEnter","onMouseLeave","toString","HelloWorldScene","scene","centerCoord","setCenterCoord","contextMenuCoord","setContextMenuCoord","slice","sort","event","preventDefault","onContextMenu","entity","length","contextMenu","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","styles","css","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.7765b33f.chunk.js","sourcesContent":["import { CoordinateLike } from './3d/Coordinate';\n//     z+\n//     |     y+\n//     |    /\n//     |  /\n//     |/\n// 0,0  \\\n//        \\\n//          \\ x+\n\nconst BASE_LENGTH = 24;\n\nexport type CoordValue = number;\nexport type Length = number;\nexport type Angle = number;\nexport type CoordArray = [CoordValue, CoordValue, CoordValue];\nexport type CoordObject = { x: CoordValue; y: CoordValue; z: CoordValue };\n\nfunction createPerspective(degrees: Angle, tileSize: Length) {\n\tconst isometricAngle = degrees * (Math.PI / 180);\n\tconst _isometricCos = Math.cos(isometricAngle);\n\tconst _isometricSin = Math.sin(isometricAngle);\n\tconst _isometricTan = Math.tan(isometricAngle);\n\n\tconst _isometricDist = Math.sqrt(\n\t\tMath.pow(_isometricCos, 2) + Math.pow(_isometricSin, 2)\n\t); // pythagoras\n\n\tconst tileHeight = tileSize;\n\n\treturn {\n\t\tdegrees: degrees,\n\t\tradians: degrees * (Math.PI / 180),\n\t\ttileSize: tileSize,\n\t\ttoPixels: (x: CoordValue, y: CoordValue, z: CoordValue) => {\n\t\t\tconst cartX = (x + y) * _isometricCos,\n\t\t\t\tcartY = (x - y) * _isometricSin;\n\n\t\t\treturn [\n\t\t\t\tcartX * tileSize, // x\n\t\t\t\tcartY * tileSize - tileHeight * z // y\n\t\t\t];\n\t\t},\n\t\ttoCoords: (cartX: CoordValue, cartY: CoordValue) => {\n\t\t\tconst isoY = _isometricTan * cartX + cartY,\n\t\t\t\tisoX = (cartY - isoY) / -_isometricSin - isoY;\n\n\t\t\t// this is good so far, b should be rescaled for tile size. as\n\t\t\treturn [isoX / tileSize, isoY / tileSize];\n\t\t}\n\t};\n}\n\nexport const PERSPECTIVE = createPerspective(30, BASE_LENGTH);\n\nexport function randomComparator() {\n\treturn 0.5 - Math.random();\n}\n\nexport function distanceToCameraComparator(\n\ta: CoordinateLike,\n\tb: CoordinateLike\n) {\n\tconst dX = b.x - a.x;\n\tif (dX) {\n\t\treturn -dX;\n\t}\n\n\tconst dY = a.y - b.y;\n\tif (dY) {\n\t\treturn -dY;\n\t}\n\tconst dZ = b.z - a.z;\n\tif (dZ) {\n\t\treturn -dZ;\n\t}\n\treturn 0;\n}\n","import React, { FunctionComponent, ReactElement } from 'react';\n\nimport { CoordArray, PERSPECTIVE } from '../PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nexport const LinePath: FunctionComponent<\n\tOmit<React.SVGProps<SVGLineElement>, 'path'> & {\n\t\tpath: CoordArray[];\n\t}\n> = ({ path, stroke = 'black', strokeWidth = BORDER_WIDTH }) => {\n\tlet spatialCoordinates = path\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + BORDER_WIDTH));\n\n\treturn (\n\t\t<>\n\t\t\t{spatialCoordinates.reduce<ReactElement[]>(\n\t\t\t\t(lines, start, i, all) =>\n\t\t\t\t\ti\n\t\t\t\t\t\t? lines.concat([\n\t\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tx1={start[0]}\n\t\t\t\t\t\t\t\t\ty1={start[1]}\n\t\t\t\t\t\t\t\t\tx2={all[i - 1][0]}\n\t\t\t\t\t\t\t\t\ty2={all[i - 1][1]}\n\t\t\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\t\t\tstrokeWidth={String(strokeWidth)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  ])\n\t\t\t\t\t\t: lines,\n\t\t\t\t[]\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import React, { FunctionComponent, useMemo } from 'react';\n\nimport { CoordArray, CoordObject, Length, PERSPECTIVE } from '../PERSPECTIVE';\nimport { LinePath } from '../objects/LinePath';\nimport { CoordinateLike } from './Coordinate';\n\nconst Crosshair: FunctionComponent<{ size: Length }> = ({ size = 4 }) => {\n\tconst lines: CoordArray[][] = [\n\t\t[\n\t\t\t// over the x axis\n\t\t\t[-1 * size, 0, 0],\n\t\t\t[size, 0, 0]\n\t\t],\n\t\t[\n\t\t\t// over the y axis\n\t\t\t[0, -1 * size, 0],\n\t\t\t[0, size, 0]\n\t\t],\n\t\t[\n\t\t\t// over the z axis\n\t\t\t[0, 0, -1 * size],\n\t\t\t[0, 0, size]\n\t\t]\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t{lines.map((points, i) => (\n\t\t\t\t<LinePath\n\t\t\t\t\tkey={i}\n\t\t\t\t\tpath={points}\n\t\t\t\t\tstroke={'rgba(0,0,0)'}\n\t\t\t\t\tstrokeWidth={0.5}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport const Anchor: FunctionComponent<\n\t{\n\t\tcrosshairSize?: Length;\n\t} & CoordinateLike\n> = ({ x = 0, y = 0, z = 0, children, crosshairSize = 0 }) => {\n\tconst pixels = useMemo(() => PERSPECTIVE.toPixels(x, y, z), [x, y, z]);\n\n\treturn (\n\t\t<svg x={pixels[0]} y={pixels[1]} overflow={'visible'}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</svg>\n\t);\n};\n","import React, { FunctionComponent, ReactElement, useMemo } from 'react';\nimport { animated, config, useSpring } from 'react-spring';\n\nimport styled from '@emotion/styled';\n\nimport { PERSPECTIVE, Length, CoordValue } from '../PERSPECTIVE';\nimport { CoordinateLike } from './Coordinate';\n\n// The pythagoras distance (1/sqrt(2)) with a little tweaking for better looks\nconst PIXEL_FRIENDLY_PYTHAGORAS = 0.8;\n\nfunction mathRoundMaybe(n: number) {\n\t// For debugging only. Adjust to taste.\n\n\treturn Math.round(n);\n\t// return n;\n}\n\nexport const AbsolutelyPositionedContainer = styled(animated.div)`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\twidth: 0;\n\theight: 0;\n\tborder-radius: 50%;\n\t> * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n`;\n\ntype ViewportComponentProps = {\n\tzoom?: number;\n\tcenter: CoordinateLike;\n\toverlay?: ReactElement;\n};\n\nexport const Viewport: FunctionComponent<ViewportComponentProps> = ({\n\toverlay,\n\tcenter,\n\tzoom = 1,\n\tchildren,\n\t...rest\n}) => {\n\tconst [translateX, translateY] = useMemo(\n\t\t() =>\n\t\t\tPERSPECTIVE.toPixels(center.x, center.y, center.z).map(\n\t\t\t\t(n, i) => mathRoundMaybe(-n) + (i ? 0 : 0.5)\n\t\t\t),\n\t\t[center]\n\t);\n\n\tconst springStyles = useSpring({\n\t\tconfig: config.molasses,\n\t\tto: {\n\t\t\ttransform: `translate(\n\t\t\t\t${translateX * zoom}px,\n\t\t\t\t${translateY * zoom}px\n\t\t\t)`\n\t\t}\n\t});\n\n\treturn (\n\t\t<AbsolutelyPositionedContainer style={springStyles}>\n\t\t\t<ViewportSvgContainer zoom={zoom} children={children} />\n\t\t\t{overlay}\n\t\t</AbsolutelyPositionedContainer>\n\t);\n};\n\nexport const ViewportSvgContainer: FunctionComponent<\n\t{ zoom?: number } & React.SVGProps<SVGSVGElement>\n> = ({ zoom = 1, ...rest }) => (\n\t<svg\n\t\twidth=\"1px\"\n\t\theight=\"1px\"\n\t\toverflow=\"visible\"\n\t\tshapeRendering=\"geometricPrecision\"\n\t\tviewBox={[0, 0, 1 / zoom, 1 / zoom].join(' ')}\n\t\tstyle={{ cursor: 'pointer' }}\n\t\t{...rest}\n\t/>\n);\n\nconst NoAxis = styled.div<{ zoom?: number }>`\n\t--scale-val: ${({ zoom = 1 }) => zoom};\n\n\tposition: absolute;\n\ttransform-origin: top left;\n\ttransform: scale(var(--scale-val));\n`;\n\nconst YAxis = styled(NoAxis)`\n\ttransform: skewY(-${PERSPECTIVE.degrees}deg)\n\t\tscale(\n\t\t\tcalc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)),\n\t\t\tvar(--scale-val)\n\t\t);\n`;\n\nconst ZAxis = styled(NoAxis)`\n\ttransform: rotate(-${PERSPECTIVE.degrees}deg)\n\t\tskewX(${PERSPECTIVE.degrees}deg)\n\t\tscale(\n\t\t\tcalc(${Math.sqrt(PIXEL_FRIENDLY_PYTHAGORAS)} * var(--scale-val)),\n\t\t\tcalc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val))\n\t\t);\n`;\n\nconst XAxis = styled(NoAxis)`\n\ttransform: skewY(${PERSPECTIVE.degrees}deg)\n\t\tscale(\n\t\t\tcalc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)),\n\t\t\tvar(--scale-val)\n\t\t);\n`;\n\nexport const ViewportHtmlContainer: FunctionComponent<{\n\taxis?: 'x' | 'y' | 'z';\n\twidth: Length;\n\theight: Length;\n\tzoom?: number;\n\tlocation: CoordinateLike;\n}> = ({ location, zoom = 1, axis, width, height, children }) => {\n\tconst { x, y, z } = location,\n\t\t// @TODO use css variable to zoom instead of JS\n\t\t[left, top] = PERSPECTIVE.toPixels(x, y, z).map(n =>\n\t\t\tmathRoundMaybe(n * zoom)\n\t\t);\n\t// @TODO use css variable to zoom instead of JS\n\tconst [pixelWidth] = PERSPECTIVE.toPixels(0, width, height).map(n =>\n\t\tmathRoundMaybe(n * zoom)\n\t);\n\tconst Axis =\n\t\taxis === 'y'\n\t\t\t? YAxis\n\t\t\t: axis === 'x'\n\t\t\t? XAxis\n\t\t\t: axis === 'z'\n\t\t\t? ZAxis\n\t\t\t: NoAxis;\n\treturn (\n\t\t<Axis\n\t\t\tzoom={zoom}\n\t\t\tstyle={{\n\t\t\t\tleft: mathRoundMaybe(left),\n\t\t\t\ttop: mathRoundMaybe(top),\n\t\t\t\twidth:\n\t\t\t\t\tmathRoundMaybe(\n\t\t\t\t\t\taxis\n\t\t\t\t\t\t\t? pixelWidth / PIXEL_FRIENDLY_PYTHAGORAS\n\t\t\t\t\t\t\t: pixelWidth\n\t\t\t\t\t) + 'px',\n\t\t\t\theight:\n\t\t\t\t\tmathRoundMaybe(\n\t\t\t\t\t\taxis\n\t\t\t\t\t\t\t? pixelWidth / PIXEL_FRIENDLY_PYTHAGORAS\n\t\t\t\t\t\t\t: pixelWidth\n\t\t\t\t\t) + 'px'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</Axis>\n\t);\n};\n","import { CoordObject, CoordValue, Length } from '../PERSPECTIVE';\nexport interface CoordinateLike {\n\tx: CoordValue;\n\ty: CoordValue;\n\tz: CoordValue;\n}\n\nexport class Coordinate implements CoordinateLike {\n\tx: CoordValue;\n\ty: CoordValue;\n\tz: CoordValue;\n\tconstructor(x: CoordValue, y: CoordValue, z: CoordValue) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tequals(coord: CoordinateLike) {\n\t\treturn (\n\t\t\tthis === coord ||\n\t\t\t(coord &&\n\t\t\t\tthis.x === coord.x &&\n\t\t\t\tthis.y === coord.y &&\n\t\t\t\tthis.z === coord.z)\n\t\t);\n\t}\n\n\ttransform(dx: Length = 0, dy: Length = 0, dz: Length = 0) {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\n\t\treturn this;\n\t}\n\n\tmanhattanDistanceTo(coord: CoordinateLike) {\n\t\treturn Math.abs(this.x - coord.x) + Math.abs(this.y - coord.y); // + Math.abs(this.z - coord.z);\n\t}\n\n\t// For debugging purposes only, may change without notice or tests\n\ttoString() {\n\t\treturn [this.x, this.y, this.z].join(',');\n\t}\n\n\tstatic clone(coord: CoordinateLike) {\n\t\treturn new Coordinate(coord.x, coord.y, coord.z);\n\t}\n}\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\n\nimport { CoordArray, Length, PERSPECTIVE } from '../PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nfunction coordsToPixels(coords: CoordArray[], borderWidth = BORDER_WIDTH) {\n\treturn coords\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + borderWidth));\n}\n\nconst COORDINATE_CLOSEST_TO_CAMERA = PERSPECTIVE.toPixels(1, 0, 1).map(\n\tc => c + BORDER_WIDTH\n);\n\nlet BORDER_NODES = coordsToPixels([\n\t[1, 1, 0], // 0\n\t[1, 1, 1],\n\t[0, 1, 1], // 2\n\t[0, 0, 1],\n\t[0, 0, 0], // 4\n\t[1, 0, 0]\n]);\n\n// facing to the bottom left, aka -y\nlet XZ_NODES = coordsToPixels([\n\t[0, 0, 0],\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 0, 0]\n]);\n\n// facing to the bottom right, aka +x\nlet YZ_NODES = coordsToPixels([\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[1, 1, 1],\n\t[1, 0, 1]\n]);\n\n// facing top, aka +z\nlet XY_NODES = coordsToPixels([\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 1, 1],\n\t[0, 1, 1]\n]);\n\nexport const MonochromeBox: FunctionComponent<\n\t{\n\t\tstrokeLinecap?: 'round' | 'butt' | 'square' | 'inherit' | undefined;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t\tstrokeWidth?: Length;\n\t\tinnerStrokeWidth?: Length;\n\t\tinnerStroke?: Color;\n\t} & Pick<\n\t\tReact.SVGProps<SVGGElement>,\n\t\t'onClick' | 'onContextMenu' | 'onMouseEnter' | 'onMouseLeave'\n\t>\n> = ({\n\tfill = Color('#282c34'), //.lighten(0.3),\n\n\tstrokeLinecap = 'round',\n\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = 1,\n\n\tinnerStroke = fill.lighten(0.4).desaturate(0.8),\n\tinnerStrokeWidth = strokeWidth,\n\t...gProps\n}) => {\n\tconst innerStrokeCss = innerStroke && innerStroke.string();\n\tconst strokeCss = stroke && stroke.string();\n\n\treturn (\n\t\t<g {...gProps}>\n\t\t\t{fill && (\n\t\t\t\t<>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xz'}\n\t\t\t\t\t\tpoints={XZ_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xy'}\n\t\t\t\t\t\tpoints={XY_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.lighten(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'yz'}\n\t\t\t\t\t\tpoints={YZ_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.darken(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{innerStroke && (\n\t\t\t\t<>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'x-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[3][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[3][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'y-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[1][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[1][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'z-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0]}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1]}\n\t\t\t\t\t\tx2={BORDER_NODES[5][0]}\n\t\t\t\t\t\ty2={BORDER_NODES[5][1]}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t<polygon\n\t\t\t\tkey={'outline'}\n\t\t\t\tpoints={BORDER_NODES.map(c => c.join(',')).join(' ')}\n\t\t\t\tstroke={strokeCss}\n\t\t\t\tfill={'transparent'}\n\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t/>\n\t\t</g>\n\t);\n};\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\n\nimport { CoordArray, PERSPECTIVE } from '../PERSPECTIVE';\n\nconst BORDER_WIDTH = 1;\nconst BORDER_NODES: CoordArray[] = [\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[0, 1, 0],\n\t[0, 0, 0]\n];\n\nlet spatialCoordinates = BORDER_NODES.map(coordinate =>\n\tPERSPECTIVE.toPixels(...coordinate)\n).map(cc => cc.map(c => c + BORDER_WIDTH));\n\nexport const MonochromeTile: FunctionComponent<\n\t{\n\t\tzoom?: number;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t} & React.SVGProps<SVGPolygonElement>\n> = ({\n\tfill = Color('#282c34'), //.lighten(0.3),\n\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = BORDER_WIDTH,\n\tzoom = 1,\n\t...rest\n}) => {\n\treturn (\n\t\t<polygon\n\t\t\tpoints={spatialCoordinates\n\t\t\t\t.map(c => c.map(c => c * zoom).join(','))\n\t\t\t\t.join(' ')}\n\t\t\tstroke={stroke.string()}\n\t\t\tfill={fill.string()}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n","// const ActiveEntityOverlay: FunctionComponent = ({ children }) => null;\n\nimport styled from '@emotion/styled';\nimport { FunctionComponent } from 'react';\n\n// const ActiveEntityOverlay: FunctionComponent = ({ children }) => null;\nconst ActiveEntityOverlayWrapper = styled.section`\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n`;\n\nexport const ActiveEntityOverlay: FunctionComponent = ({ children }) => (\n\t<ActiveEntityOverlayWrapper>\n\t\t<p>Heyyoo</p>\n\t</ActiveEntityOverlayWrapper>\n);\n","import styled from '@emotion/styled';\nimport { FunctionComponent, useMemo } from 'react';\n\nconst ContextMenuArrow = styled.div`\n\twidth: 0;\n\theight: 0;\n\tborder-left: 6px solid transparent;\n\tborder-right: 6px solid transparent;\n\tborder-top: 6px solid rgba(255, 255, 255, 0.5);\n\ttransform: translate(calc(-50% + 0px), -6px);\n`;\n\nconst ContextMenuBoundary = styled.div`\n\tposition: absolute;\n\tbottom: 100%;\n\tleft: 50%;\n\tbackdrop-filter: blur(2px);\n\ttransform: translate(-50%, -6px);\n`;\nconst ContextMenuBody = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 3px;\n`;\n\nexport const ContextMenuButton = styled.button`\n\tborder: none;\n\tdisplay: block;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tpadding: 0.5em 1em;\n\twhite-space: nowrap;\n\ttransition: background-color 0.5s;\n\tcolor: white;\n\tbackground-color: transparent;\n\t/* background-color: rgba(255, 255, 255, 0.05); */\n\t&:hover {\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\n\t\tcursor: pointer;\n\t}\n`;\n\nexport const ContextMenu: FunctionComponent<{}> = ({ children }) => {\n\treturn (\n\t\t<>\n\t\t\t<ContextMenuBoundary>\n\t\t\t\t<ContextMenuBody>{children}</ContextMenuBody>\n\t\t\t</ContextMenuBoundary>\n\t\t\t<ContextMenuArrow />\n\t\t</>\n\t);\n};\n","import { FunctionComponent } from 'react';\nimport { Anchor, Coordinate, MonochromeTile } from '../isometric';\nimport { PERSPECTIVE } from '../isometric/PERSPECTIVE';\nimport { Entity } from './Entity';\n\nexport class WorkerEntity extends Entity {\n\tComponent: FunctionComponent = () => {\n\t\tconst zoom = 0.5;\n\n\t\tconst translate = zoom / 2;\n\t\treturn (\n\t\t\t<Anchor\n\t\t\t\t{...Coordinate.clone(this.location).transform(\n\t\t\t\t\t-translate,\n\t\t\t\t\t-translate,\n\t\t\t\t\t0\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<MonochromeTile zoom={zoom} />\n\t\t\t</Anchor>\n\t\t);\n\t\t// return <circle cx={x} cy={y} r=\"5\" fill=\"white\" />;\n\t};\n}\n","import { FunctionComponent } from 'react';\nimport { Coordinate } from '../isometric/3d/Coordinate';\n\nexport class Entity {\n\tpublic readonly id: string;\n\tpublic readonly location: Coordinate;\n\tconstructor(id: string, location: Coordinate) {\n\t\tthis.id = id;\n\t\tthis.location = location;\n\t}\n\tpublic readonly Component: FunctionComponent = () => {\n\t\treturn null;\n\t};\n}\n","import { triggerAsyncId } from 'async_hooks';\nimport { Coordinate } from '../isometric';\nimport { CoordinateLike } from '../isometric/3d/Coordinate';\nimport { Entity } from './Entity';\nimport { WorkerEntity } from './WorkerEntity';\n\nexport class Scene {\n\tpublic terrain: Coordinate[] = [];\n\tpublic entities: Entity[] = [];\n}\n\nexport class RandomScene extends Scene {\n\tconstructor(width: number, height: number) {\n\t\tsuper();\n\t\tthis.terrain = Array.from(new Array(width * height)).map(\n\t\t\t(_, i) =>\n\t\t\t\tnew Coordinate(\n\t\t\t\t\ti % width,\n\t\t\t\t\tMath.floor(i / width),\n\t\t\t\t\tMath.random() * 0.3\n\t\t\t\t)\n\t\t);\n\t\tthis.entities = Array.from(new Array(100)).map((_, i) => {\n\t\t\tconst xy = {\n\t\t\t\tx: Math.floor(Math.random() * width),\n\t\t\t\ty: Math.floor(Math.random() * height)\n\t\t\t};\n\t\t\tconst terrainIndex = xy.y * width + xy.x;\n\t\t\treturn new WorkerEntity(\n\t\t\t\t'entity-' + i,\n\t\t\t\tCoordinate.clone({\n\t\t\t\t\t...xy,\n\t\t\t\t\tz: this.terrain[terrainIndex].z\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n}\n","import styled from '@emotion/styled';\nimport Color from 'color';\nimport { FunctionComponent, useMemo, useState } from 'react';\n\nimport { Anchor, Coordinate, MonochromeBox, Viewport } from '../isometric';\nimport { ViewportHtmlContainer } from '../isometric/3d/Viewport';\nimport { distanceToCameraComparator } from '../isometric/PERSPECTIVE';\nimport { ActiveEntityOverlay } from '../ui/ActiveEntityOverlay';\nimport { ContextMenu, ContextMenuButton } from '../ui/ContextMenu';\nimport { Entity } from './Entity';\nimport { RandomScene } from './Scene';\nimport { WorkerEntity } from './WorkerEntity';\n\nconst HelloWorldContextMenu: FunctionComponent<{\n\ttopic?: Coordinate;\n\tclose: () => void;\n}> = ({ topic, close }) => {\n\tif (!topic) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<ContextMenu>\n\t\t\t<ContextMenuButton\n\t\t\t\tonClick={() => {\n\t\t\t\t\tclose();\n\t\t\t\t\twindow.alert(JSON.stringify(topic, null, '    '));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tShow coordinates\n\t\t\t</ContextMenuButton>\n\t\t</ContextMenu>\n\t);\n};\n\nconst HelloWorldSceneTerrain: FunctionComponent<\n\t{\n\t\tcoordinate: Coordinate;\n\t} & (typeof MonochromeBox extends FunctionComponent<infer T> ? T : {})\n> = ({ coordinate: coord, ...monochromeBoxProps }) => {\n\tconst [isHovered, setIsHovered] = useState(false);\n\tconst translated = Coordinate.clone(coord).transform(-0.5, -0.5, -1);\n\treturn (\n\t\t<Anchor\n\t\t\tkey={translated.toString()}\n\t\t\tx={translated.x}\n\t\t\ty={translated.y}\n\t\t\tz={translated.z}\n\t\t>\n\t\t\t<MonochromeBox\n\t\t\t\t{...monochromeBoxProps}\n\t\t\t\tfill={isHovered ? Color('#282c34').lighten(1) : undefined}\n\t\t\t\tstroke={isHovered ? Color('#fff') : undefined}\n\t\t\t\tinnerStroke={isHovered ? Color('#ccd1dd') : undefined}\n\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t/>\n\t\t</Anchor>\n\t);\n};\n\nexport const HelloWorldScene: FunctionComponent = ({}) => {\n\tconst scene = useMemo(() => new RandomScene(25, 25), []);\n\n\tconst [centerCoord, setCenterCoord] = useState(new Coordinate(12, 12, 0.5));\n\n\tconst [contextMenuCoord, setContextMenuCoord] = useState<\n\t\tCoordinate | undefined\n\t>(undefined);\n\n\tconst zoomFactor = 1;\n\n\tconst terrain = useMemo(\n\t\t() =>\n\t\t\tscene.terrain\n\t\t\t\t.slice()\n\t\t\t\t.sort(distanceToCameraComparator)\n\t\t\t\t.map(coord => (\n\t\t\t\t\t<HelloWorldSceneTerrain\n\t\t\t\t\t\tkey={coord.toString()}\n\t\t\t\t\t\tcoordinate={coord}\n\t\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tsetContextMenuCoord(undefined);\n\t\t\t\t\t\t\tsetCenterCoord(coord);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonContextMenu={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t// scene.entities.push(\n\t\t\t\t\t\t\t// \tnew WorkerEntity('afesrg' + Date.now(), coord)\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\tsetContextMenuCoord(coord);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)),\n\t\t[scene.terrain]\n\t);\n\n\tconst entities = useMemo(\n\t\t() =>\n\t\t\tscene.entities\n\t\t\t\t.slice()\n\t\t\t\t.sort((a, b) =>\n\t\t\t\t\tdistanceToCameraComparator(a.location, b.location)\n\t\t\t\t)\n\t\t\t\t.map(entity => {\n\t\t\t\t\tconst Component = entity.Component;\n\t\t\t\t\treturn <Component key={entity.id} />;\n\t\t\t\t}),\n\t\t[scene.entities, scene.entities.length]\n\t);\n\n\tconst contextMenu = useMemo(\n\t\t() =>\n\t\t\tcontextMenuCoord ? (\n\t\t\t\t<ViewportHtmlContainer\n\t\t\t\t\tlocation={contextMenuCoord}\n\t\t\t\t\twidth={0}\n\t\t\t\t\theight={0}\n\t\t\t\t\t// axis=\"y\"\n\t\t\t\t\tzoom={zoomFactor}\n\t\t\t\t>\n\t\t\t\t\t<HelloWorldContextMenu\n\t\t\t\t\t\ttopic={contextMenuCoord}\n\t\t\t\t\t\tclose={() => setContextMenuCoord(undefined)}\n\t\t\t\t\t/>\n\t\t\t\t</ViewportHtmlContainer>\n\t\t\t) : undefined,\n\t\t[contextMenuCoord, zoomFactor]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Viewport\n\t\t\t\tcenter={centerCoord}\n\t\t\t\tzoom={zoomFactor}\n\t\t\t\toverlay={contextMenu}\n\t\t\t>\n\t\t\t\t<g id=\"scene-terrain\">{terrain}</g>\n\t\t\t\t<g id=\"scene-entities\">{entities}</g>\n\t\t\t</Viewport>\n\t\t\t<ActiveEntityOverlay />\n\t\t</>\n\t);\n};\n","/** @jsxImportSource @emotion/react */\n\nimport styled from '@emotion/styled';\n\nimport { HelloWorldScene } from './scene/HelloWorld';\nimport './styles.css';\nconst CrossH = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 10px;\n\theight: 10px;\n\tborder-top: 1px solid red;\n\tborder-left: 1px solid blue;\n\tz-index: 9999;\n`;\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<HelloWorldScene />\n\t\t</>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(\n\t\t\t({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\t\tgetCLS(onPerfEntry);\n\t\t\t\tgetFID(onPerfEntry);\n\t\t\t\tgetFCP(onPerfEntry);\n\t\t\t\tgetLCP(onPerfEntry);\n\t\t\t\tgetTTFB(onPerfEntry);\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Global, css } from '@emotion/react';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst styles = css`\n\tbody {\n\t\tmargin: 0;\n\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n\t\t\t'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n\t\t\t'Helvetica Neue', sans-serif;\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t}\n\n\tcode {\n\t\tfont-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n\t\t\tmonospace;\n\t}\n`;\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Global styles={styles} />\n\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}
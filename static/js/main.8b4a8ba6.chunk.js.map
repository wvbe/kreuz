{"version":3,"sources":["classes/Scene.ts","space/PERSPECTIVE.ts","space/LinePath.tsx","space/Anchor.tsx","textures/nebula-282c34.png","styles.ts","space/MonochromeBox.tsx","space/Viewport.tsx","demos/scaffolding.tsx","demos/demo.cubes.tsx","util/Event.ts","ui/ContextMenu.tsx","Game.ts","util/BinaryHeap.ts","classes/Path.ts","constants/names.tsx","entities/Entity.tsx","entities/PersonEntity.tsx","entities/CivilianEntity.tsx","classes/Coordinate.ts","entities/GuardEntity.tsx","util/Random.ts","jobs/Job.ts","jobs/LoiterJob.ts","jobs/PatrolJob.ts","generators/hello-world.ts","terrain/DualMeshTileComponent.tsx","terrain/GenericTerrain.ts","terrain/DualMeshTerrain.ts","ui/ActiveEntityOverlay.tsx","ui/Overlay.tsx","ui/GameApplication.tsx","App.tsx","index.tsx"],"names":["Scene","seed","terrain","entities","this","destroyers","map","entity","play","forEach","d","PERSPECTIVE","degrees","tileSize","_cos","_sin","_tan","isometricAngle","Math","PI","cos","sin","tan","x","y","z","cartX","cartY","tileHeight","isoY","distanceToCameraComparator","a","b","dX","dY","dZ","LinePath","path","stroke","strokeWidth","spatialCoordinates","coordinate","toPixels","cc","c","reduce","lines","start","i","all","concat","x1","y1","x2","y2","String","Crosshair","size","points","Anchor","children","crosshairSize","pixels","useMemo","overflow","MovingAnchor","moveTo","moveSpeed","onRest","onClick","dx","dy","ix","iy","loc","useSpring","to","config","duration","from","svg","color","white","Color","highlightedTerrain","lighten","styles","css","toString","darken","saturate","desaturate","mix","nebulaTexture","coordsToPixels","coords","borderWidth","COORDINATE_CLOSEST_TO_CAMERA","BORDER_NODES","XZ_NODES","YZ_NODES","XY_NODES","MonochromeBox","fill","strokeLinecap","innerStroke","innerStrokeWidth","gProps","innerStrokeCss","string","strokeCss","style","onContextMenu","cursor","join","PIXEL_FRIENDLY_PYTHAGORAS","pow","mathRoundMaybe","n","round","AbsolutelyPositionedContainer","styled","div","Viewport","overlay","center","zoom","translateX","translateY","springStyles","transform","ViewportSvgContainer","rest","width","height","shapeRendering","viewBox","NoAxis","YAxis","ZAxis","sqrt","XAxis","ViewportHtmlContainer","location","axis","left","top","pixelWidth","Axis","abs","Backdrop","Demo","window","alert","Event","listeners","callback","push","splice","indexOf","args","ContextMenuArrow","ContextMenuBoundary","ContextMenuBody","ContextMenuButton","button","ContextMenuFooter","ContextMenuManager","state","$changed","contents","emit","ContextMenuContainer","contextMenu","useGame","useState","managerState","setManagerState","useEffect","Error","on","Game","scene","GameContext","createContext","gameApi","useContext","BinaryHeap","scoreFunction","content","element","sinkDown","length","result","end","pop","bubbleUp","node","parentN","parent","elemScore","child2N","child1N","swap","child1Score","child1","child2","DIAGONAL","pos0","pos1","D2","d1","d2","min","Path","graph","options","cache","heap","heuristic","Map","get","f","closestNode","closestNodeHeuristics","h","g","closed","visited","set","currentNode","currentNodeHeuristics","equals","tracePath","neighbors","getNeighborTiles","il","neighbor","neighborHeuristics","isLand","gScore","beenVisited","hScore","closest","rescoreElement","console","warn","heuristicReport","curr","unshift","FIRST_NAMES_M","replace","split","name","trim","FIRST_NAMES_F","noop","PersonEntity","id","$startedWalking","$stoppedWalking","$startedWalkStep","$stoppedWalkStep","passport","Component","cx","cy","r","feminine","random","firstName","floor","destination","find","unlisten","nextStep","shift","doPathStep","hasNaN","job","constructor","PersonEntityComponent","animatePosition","deps","cb","useCallback","eventDestroyers","useEventListeners","euclideanDistanceTo","CivilianEntity","Coordinate","coord","dz","isNaN","xy","offset","GuardEntity","Random","seedrandom","double","arr","index","float","Job","LoiterJob","walkMinWait","walkMaxWait","walkChanceOnRoll","walkMaxDistance","steps","doTimeout","setTimeout","destinations","selectClosestTiles","walkTo","arrayItem","PatrolJob","waypoints","waypointIndex","next","repeat","Array","_","generateEntities","walkableTiles","tiles","filter","guard","island","getIslands","includes","generatePatrolJob","doJob","worker","DualMeshTileComponent","tile","svgProps","polyline","outlinePoints","className","DualMeshTerrainComponent","onTileClick","onTileContextMenu","terrainElements","getTilesInRenderOrder","event","preventDefault","stopPropagation","GenericTile","num","toFixed","coord2","GenericTerrain","_tilesInRenderOrder","islands","selector","seen","queue","current","neighbours","maxDistance","selectContiguousTiles","other","t","fromCache","open","slice","sort","DualMeshTile","isGhost","_isLand","undefined","item","maxDepth","some","DualMeshTerrain","mesh","props","React","createElement","last","distance","Infinity","generateRandom","density","poisson","Poisson","shape","minDistance","meshBuilder","MeshBuilder","boundarySpacing","p","addPoint","create","coordinates","outlinePointIndices","r_circulate_t","t_x","t_y","t_ghost","r_circulate_r","Boolean","ActiveEntityOverlayBoundary","ActiveEntityOverlayBody","Avatar","HorizontalLinkList","nav","HorizontalLinkListItem","EntityTextBadge","label","marginTop","group","log","groupEnd","ActiveEntityOverlay","Overlay","section","fancyTimeFormat","seconds","GameApplication","game","initialViewportCenter","setCenter","activeEntity","setActiveEntity","close","addEventListener","removeEventListener","fontSize","opacity","href","target","rel","generateEverything","Date","now","generateRandomDualMeshTerrain","generateHelloWorldEntities","getClosestToXy","GameRoute","gameApplicationProps","Provider","value","TestRoute","exact","component","DemoCubes","App","ReactDOM","render","StrictMode","globalStyleRules","hashType","document","getElementById"],"mappings":"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","file":"static/js/main.8b4a8ba6.chunk.js","sourcesContent":["import { Entity } from '../entities/Entity';\nimport { GenericTerrain, GenericTile } from '../terrain/GenericTerrain';\n\nexport class Scene<T extends GenericTerrain<GenericTile> = GenericTerrain<GenericTile>> {\n\tpublic readonly terrain: T;\n\n\t// @TODO change to not readonly, and handle spontaneous changes\n\tpublic readonly entities: Entity[];\n\n\tpublic readonly seed;\n\n\tconstructor(seed: string, terrain: T, entities: Entity[]) {\n\t\tthis.seed = seed;\n\t\tthis.terrain = terrain;\n\t\tthis.entities = entities;\n\t}\n\n\tplay() {\n\t\tconst destroyers = this.entities.map((entity) => entity.play());\n\t\treturn () => destroyers.forEach((d) => d());\n\t}\n}\n","import { CoordinateLike } from '../classes/Coordinate';\n\n//        z+,                height\n//        |        __ y+,    depth\n//        |     __/\n//        |  __/\n//    0,0 |_/\n//          \\__\n//             \\__\n//                \\__ x+,    width\n\nconst BASE_LENGTH = 32;\n\nexport type InGameDistance = number;\nexport type OnScreenDistance = number;\nexport type OnSreenAngle = number;\n\nclass Perspective {\n\tpublic readonly degrees: OnSreenAngle;\n\tpublic readonly tileSize: OnScreenDistance;\n\n\tprivate _cos: OnSreenAngle;\n\tprivate _sin: OnSreenAngle;\n\tprivate _tan: OnSreenAngle;\n\n\tconstructor(degrees: OnSreenAngle, tileSize: OnScreenDistance) {\n\t\tthis.degrees = degrees;\n\t\tthis.tileSize = tileSize;\n\n\t\tconst isometricAngle = degrees * (Math.PI / 180);\n\t\tthis._cos = Math.cos(isometricAngle);\n\t\tthis._sin = Math.sin(isometricAngle);\n\t\tthis._tan = Math.tan(isometricAngle);\n\t}\n\n\ttoPixels(\n\t\tx: InGameDistance,\n\t\ty: InGameDistance,\n\t\tz: InGameDistance\n\t): [OnScreenDistance, OnScreenDistance] {\n\t\tconst cartX = (x + y) * this._cos,\n\t\t\tcartY = (x - y) * this._sin;\n\n\t\tconst tileHeight = this.tileSize;\n\n\t\treturn [\n\t\t\tcartX * this.tileSize, // x\n\t\t\tcartY * this.tileSize - tileHeight * z // y\n\t\t];\n\t}\n\n\tprivate toCoords(\n\t\tcartX: InGameDistance,\n\t\tcartY: InGameDistance\n\t): [InGameDistance, InGameDistance, InGameDistance] {\n\t\tconst isoY = this._tan * cartX + cartY,\n\t\t\tisoX = (cartY - isoY) / -this._sin - isoY;\n\n\t\t// this is good so far, b should be rescaled for tile size. as\n\t\treturn [isoX / this.tileSize, isoY / this.tileSize, 0];\n\t}\n}\n\nexport const PERSPECTIVE = new Perspective(30, BASE_LENGTH);\n\nexport function distanceToCameraComparator(a: CoordinateLike, b: CoordinateLike) {\n\tconst dX = b.x - a.x;\n\tif (dX) {\n\t\treturn -dX;\n\t}\n\n\tconst dY = a.y - b.y;\n\tif (dY) {\n\t\treturn -dY;\n\t}\n\tconst dZ = b.z - a.z;\n\tif (dZ) {\n\t\treturn -dZ;\n\t}\n\treturn 0;\n}\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { CoordinateArray } from '../classes/Coordinate';\n\nimport { PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nexport const LinePath: FunctionComponent<\n\tOmit<React.SVGProps<SVGLineElement>, 'path'> & {\n\t\tpath: CoordinateArray[];\n\t}\n> = ({ path, stroke = 'black', strokeWidth = BORDER_WIDTH }) => {\n\tlet spatialCoordinates = path\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + BORDER_WIDTH));\n\n\treturn (\n\t\t<>\n\t\t\t{spatialCoordinates.reduce<ReactElement[]>(\n\t\t\t\t(lines, start, i, all) =>\n\t\t\t\t\ti\n\t\t\t\t\t\t? lines.concat([\n\t\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tx1={start[0]}\n\t\t\t\t\t\t\t\t\ty1={start[1]}\n\t\t\t\t\t\t\t\t\tx2={all[i - 1][0]}\n\t\t\t\t\t\t\t\t\ty2={all[i - 1][1]}\n\t\t\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\t\t\tstrokeWidth={String(strokeWidth)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  ])\n\t\t\t\t\t\t: lines,\n\t\t\t\t[]\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { useSpring } from '@react-spring/core';\nimport { animated } from '@react-spring/web';\nimport React, { FunctionComponent, useMemo } from 'react';\nimport { CoordinateArray, CoordinateLike } from '../classes/Coordinate';\nimport { SvgMouseInteractionProps } from '../types';\nimport { LinePath } from './LinePath';\nimport { InGameDistance, PERSPECTIVE } from './PERSPECTIVE';\n\nconst Crosshair: FunctionComponent<{ size: InGameDistance }> = ({ size = 4 }) => {\n\tconst lines: CoordinateArray[][] = [\n\t\t[\n\t\t\t// over the x axis\n\t\t\t[-1 * size, 0, 0],\n\t\t\t[size, 0, 0]\n\t\t],\n\t\t[\n\t\t\t// over the y axis\n\t\t\t[0, -1 * size, 0],\n\t\t\t[0, size, 0]\n\t\t],\n\t\t[\n\t\t\t// over the z axis\n\t\t\t[0, 0, -1 * size],\n\t\t\t[0, 0, size]\n\t\t]\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t{lines.map((points, i) => (\n\t\t\t\t<LinePath key={i} path={points} stroke={'rgba(0,0,0)'} strokeWidth={0.5} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport const Anchor: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tcrosshairSize?: InGameDistance;\n\t} & Partial<CoordinateLike>\n> = ({ x = 0, y = 0, z = 0, children, crosshairSize = 0 }) => {\n\tconst pixels = useMemo(() => PERSPECTIVE.toPixels(x, y, z), [x, y, z]);\n\n\treturn (\n\t\t<svg x={pixels[0]} y={pixels[1]} overflow={'visible'}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</svg>\n\t);\n};\n\nexport const MovingAnchor: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tmoveTo: CoordinateLike;\n\t\tmoveSpeed: number;\n\t\tonRest?: () => void;\n\t\tcrosshairSize?: InGameDistance;\n\t}\n> = ({ moveTo, moveSpeed, onRest, children, crosshairSize = 0, onClick }) => {\n\tconst [dx, dy] = useMemo(() => PERSPECTIVE.toPixels(moveTo.x, moveTo.y, moveTo.z), [moveTo]);\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tconst [ix, iy] = useMemo(() => [dx, dy], []);\n\n\t// if (isNaN(dx) || isNaN(dy)) {\n\t// \tdebugger;\n\t// }\n\tconst loc = useSpring({\n\t\tto: {\n\t\t\tx: dx,\n\t\t\ty: dy\n\t\t},\n\t\tconfig: {\n\t\t\tduration: moveSpeed\n\t\t},\n\t\tfrom: {\n\t\t\tx: ix,\n\t\t\ty: iy\n\t\t},\n\t\tonRest\n\t});\n\n\t// @TODO reuse <Anchor>\n\treturn (\n\t\t<animated.svg x={loc.x} y={loc.y} overflow={'visible'} onClick={onClick}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</animated.svg>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/nebula-282c34.dda754f6.png\";","import { css } from '@emotion/react';\nimport Color from 'color';\nimport nebulaTexture from './textures/nebula-282c34.png';\n\nexport const color: Record<string, Color> = {};\ncolor.white = Color('#fff');\ncolor.terrain = Color('#282c34');\ncolor.highlightedTerrain = color.terrain.lighten(1);\n\nconst styles = css`\n\t:root {\n\t\t/*\n\t\t\tTerrain with nothing special about it:\n\t\t*/\n\t\t--color-terrain-normal-fill: ${color.terrain.toString()};\n\t\t--color-terrain-highlight-outer-stroke: ${color.terrain\n\t\t\t.darken(0.3)\n\t\t\t.saturate(0.3)\n\t\t\t.toString()};\n\t\t--color-terrain-highlight-inner-stroke: ${color.terrain\n\t\t\t.lighten(0.4)\n\t\t\t.desaturate(0.8)\n\t\t\t.toString()};\n\n\t\t/*\n\t\t\tTerrain that is being hovered over with the mouse\n\t\t*/\n\t\t--color-terrain-highlight-fill: ${color.terrain.lighten(1).toString()};\n\t\t--color-terrain-highlight-outer-stroke: ${Color('#fff').toString()};\n\t\t--color-terrain-highlight-inner-stroke: ${color.terrain.mix(color.white, 0.3).toString()};\n\t}\n\n\tbody {\n\t\tbackground: #282c34 url(${nebulaTexture});\n\t}\n\n\tp {\n\t\tmargin: 0;\n\t}\n`;\n\nexport default styles;\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { CoordinateArray } from '../classes/Coordinate';\nimport { color } from '../styles';\nimport { SvgMouseInteractionProps } from '../types';\nimport { InGameDistance, PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nfunction coordsToPixels(coords: CoordinateArray[], borderWidth = BORDER_WIDTH) {\n\treturn coords\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + borderWidth));\n}\n\nconst COORDINATE_CLOSEST_TO_CAMERA = PERSPECTIVE.toPixels(1, 0, 1).map(c => c + BORDER_WIDTH);\n\nlet BORDER_NODES = coordsToPixels([\n\t[1, 1, 0], // 0\n\t[1, 1, 1],\n\t[0, 1, 1], // 2\n\t[0, 0, 1],\n\t[0, 0, 0], // 4\n\t[1, 0, 0]\n]);\n\n// facing to the bottom left, aka -y\nlet XZ_NODES = coordsToPixels([\n\t[0, 0, 0],\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 0, 0]\n]);\n\n// facing to the bottom right, aka +x\nlet YZ_NODES = coordsToPixels([\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[1, 1, 1],\n\t[1, 0, 1]\n]);\n\n// facing top, aka +z\nlet XY_NODES = coordsToPixels([\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 1, 1],\n\t[0, 1, 1]\n]);\n\nexport const MonochromeBox: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tsize?: number;\n\t\tstrokeLinecap?: 'round' | 'butt' | 'square' | 'inherit' | undefined;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t\tstrokeWidth?: InGameDistance;\n\t\tinnerStrokeWidth?: InGameDistance;\n\t\tinnerStroke?: Color;\n\t}\n> = ({\n\tsize = 1,\n\tfill = color.terrain,\n\tstrokeLinecap = 'round',\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = 1,\n\tinnerStroke = fill.lighten(0.4).desaturate(0.8),\n\tinnerStrokeWidth = strokeWidth,\n\t...gProps\n}) => {\n\tconst innerStrokeCss = innerStroke && innerStroke.string();\n\tconst strokeCss = stroke && stroke.string();\n\n\tconst style: Record<string, string> = {};\n\tif (gProps.onClick || gProps.onContextMenu) {\n\t\tstyle.cursor = 'pointer';\n\t}\n\n\treturn (\n\t\t<g {...gProps} style={style}>\n\t\t\t{fill && (\n\t\t\t\t<>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xz'}\n\t\t\t\t\t\tpoints={XZ_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xy'}\n\t\t\t\t\t\tpoints={XY_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.lighten(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'yz'}\n\t\t\t\t\t\tpoints={YZ_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.darken(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{innerStroke && (\n\t\t\t\t<>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'x-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[3][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[3][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'y-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[1][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[1][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'z-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[5][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[5][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t<polygon\n\t\t\t\tkey={'outline'}\n\t\t\t\tpoints={BORDER_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\tstroke={strokeCss}\n\t\t\t\tfill={'transparent'}\n\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t/>\n\t\t</g>\n\t);\n};\n","import styled from '@emotion/styled';\nimport React, { FunctionComponent, ReactElement, useMemo } from 'react';\nimport { CoordinateLike } from '../classes/Coordinate';\nimport { InGameDistance, PERSPECTIVE } from './PERSPECTIVE';\n\n// The pythagoras distance (1/sqrt(2)) with a little tweaking for better looks\nconst PIXEL_FRIENDLY_PYTHAGORAS = 1 / Math.pow(2, 1 / 2); //0.8;\n\nfunction mathRoundMaybe(n: number) {\n\t// For debugging only. Adjust to taste.\n\n\treturn Math.round(n);\n\t// return n;\n}\n\n// Force the type to AnimatedComponent to avoid a weird TS inference bug\n//\nexport const AbsolutelyPositionedContainer = styled.div`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\twidth: 0;\n\theight: 0;\n\ttransition: transform 5s;\n\t> * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n`;\n\ntype ViewportComponentProps = {\n\tzoom?: number;\n\tcenter?: CoordinateLike;\n\toverlay?: ReactElement;\n};\n\nexport const Viewport: FunctionComponent<ViewportComponentProps> = ({\n\toverlay,\n\tcenter = { x: 0, y: 0, z: 0 },\n\tzoom = 1,\n\tchildren\n}) => {\n\tconst [translateX, translateY] = useMemo(\n\t\t() =>\n\t\t\tPERSPECTIVE.toPixels(center.x, center.y, center.z).map(\n\t\t\t\t(n, i) => mathRoundMaybe(-n) + (i ? 0 : 0.5)\n\t\t\t),\n\t\t[center]\n\t);\n\n\tconst springStyles =\n\t\t//useSpring({\n\t\t// \tconfig: config.molasses,\n\t\t// \tto:\n\t\t{\n\t\t\ttransform: `translate(\n\t\t\t\t${translateX * zoom}px,\n\t\t\t\t${translateY * zoom}px\n\t\t\t)`\n\t\t};\n\t// });\n\n\treturn (\n\t\t<AbsolutelyPositionedContainer style={springStyles}>\n\t\t\t<ViewportSvgContainer zoom={zoom} children={children} />\n\t\t\t{overlay}\n\t\t</AbsolutelyPositionedContainer>\n\t);\n};\n\nexport const ViewportSvgContainer: FunctionComponent<\n\t{\n\t\tzoom?: number;\n\t} & React.SVGProps<SVGSVGElement>\n> = ({ zoom = 1, ...rest }) => (\n\t<svg\n\t\twidth=\"1px\"\n\t\theight=\"1px\"\n\t\toverflow=\"visible\"\n\t\tshapeRendering=\"geometricPrecision\"\n\t\tviewBox={[0, 0, 1 / zoom, 1 / zoom].join(' ')}\n\t\t{...rest}\n\t/>\n);\n\nconst NoAxis = styled.div<{ zoom?: number }>`\n\t--scale-val: ${({ zoom = 1 }) => zoom};\n\n\tposition: absolute;\n\ttransform-origin: top left;\n\ttransform: scale(var(--scale-val));\n`;\n\nconst YAxis = styled(NoAxis)`\n\ttransform: skewY(-${PERSPECTIVE.degrees}deg)\n\t\tscale(calc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)), var(--scale-val));\n`;\n\nconst ZAxis = styled(NoAxis)`\n\ttransform: rotate(-${PERSPECTIVE.degrees}deg) skewX(${PERSPECTIVE.degrees}deg)\n\t\tscale(\n\t\t\tcalc(${Math.sqrt(PIXEL_FRIENDLY_PYTHAGORAS)} * var(--scale-val)),\n\t\t\tcalc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val))\n\t\t);\n`;\n\nconst XAxis = styled(NoAxis)`\n\ttransform: skewY(${PERSPECTIVE.degrees}deg)\n\t\tscale(calc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)), var(--scale-val));\n`;\n\nexport const ViewportHtmlContainer: FunctionComponent<{\n\taxis?: 'x' | 'y' | 'z';\n\twidth: InGameDistance;\n\theight: InGameDistance;\n\tzoom?: number;\n\tlocation: CoordinateLike;\n}> = ({ location, zoom = 1, axis, width, height, children }) => {\n\tconst { x, y, z } = location,\n\t\t// @TODO use css variable to zoom instead of JS\n\t\t[left, top] = PERSPECTIVE.toPixels(x, y, z).map(n => mathRoundMaybe(n * zoom));\n\t// @TODO use css variable to zoom instead of JS\n\tconst [pixelWidth] = PERSPECTIVE.toPixels(0, width, height).map(n => mathRoundMaybe(n * zoom));\n\tconst Axis = axis === 'y' ? YAxis : axis === 'x' ? XAxis : axis === 'z' ? ZAxis : NoAxis;\n\treturn (\n\t\t<Axis\n\t\t\tzoom={zoom}\n\t\t\tstyle={{\n\t\t\t\tleft: mathRoundMaybe(left),\n\t\t\t\ttop: mathRoundMaybe(top),\n\t\t\t\twidth:\n\t\t\t\t\tmathRoundMaybe(axis ? pixelWidth / PIXEL_FRIENDLY_PYTHAGORAS : pixelWidth) +\n\t\t\t\t\t'px',\n\t\t\t\theight:\n\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t(height * PERSPECTIVE.tileSize) /\n\t\t\t\t\t\t\t(axis === 'z' ? PIXEL_FRIENDLY_PYTHAGORAS : 1)\n\t\t\t\t\t) + 'px'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</Axis>\n\t);\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div<{ height?: number }>`\n\tposition: relative;\n\theight: ${({ height = 180 }) => `${height}px`};\n\tbackground-image: linear-gradient(\n\t\t45deg,\n\t\trgba(255, 255, 255, 0.02) 25%,\n\t\trgba(0, 0, 0, 0.02) 25%,\n\t\trgba(0, 0, 0, 0.02) 50%,\n\t\trgba(255, 255, 255, 0.02) 50%,\n\t\trgba(255, 255, 255, 0.02) 75%,\n\t\trgba(0, 0, 0, 0.02) 75%,\n\t\trgba(0, 0, 0, 0.02) 100%\n\t);\n\tbackground-size: 56.57px 56.57px;\n\tmargin-bottom: 1em;\n`;\n","import Color from 'color';\nimport { FunctionComponent } from 'react';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { Viewport } from '../space/Viewport';\nimport { Backdrop } from './scaffolding';\n\nconst Demo: FunctionComponent = () => (\n\t<>\n\t\t<Backdrop>\n\t\t\t<Viewport zoom={1} center={{ x: 0.5, y: 0.5, z: 0.5 }}>\n\t\t\t\t<Anchor x={-2} y={-2} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={0} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox innerStroke={Color('#630a0a7d')} fill={Color('#960202')} />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={2} z={0}>\n\t\t\t\t\t<MonochromeBox\n\t\t\t\t\t\tfill={Color('#ffffff7f')}\n\t\t\t\t\t\tonClick={() => window.alert('Clicky click!')}\n\t\t\t\t\t/>\n\t\t\t\t</Anchor>\n\t\t\t</Viewport>\n\t\t</Backdrop>\n\t\t<Backdrop>\n\t\t\t<Viewport center={{ x: 1, y: 0, z: 0.5 }}>\n\t\t\t\t<Anchor x={0} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={1} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={-1} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t</Viewport>\n\t\t</Backdrop>\n\t</>\n);\n\nexport default Demo;\n","import { DependencyList, useCallback, useEffect } from 'react';\n\ntype EventHandler<EventData extends Array<unknown>> = (...args: EventData) => void;\ntype EventDestroyer = () => void;\n\n/**\n *  Consitutes one named event type\n */\nexport class Event<EventData extends Array<unknown> = []> {\n\tprivate listeners: EventHandler<EventData>[] = [];\n\n\ton(callback: EventHandler<EventData>) {\n\t\tthis.listeners.push(callback);\n\n\t\treturn () => {\n\t\t\tthis.listeners.splice(this.listeners.indexOf(callback));\n\t\t};\n\t}\n\n\temit(...args: EventData) {\n\t\tthis.listeners.forEach(callback => callback(...args));\n\t}\n\n\tclear() {\n\t\tthis.listeners = [];\n\t}\n}\n\n/**\n * A conventience wrapper for `useEffect` specifically for listening to a list of events, and unlistening when the\n * component is unmounted.\n *\n * For example:\n *\n *   useEventListeners(() => [\n *       entity.moveStart.on(coordinate => animatePosition(coordinate)),\n *       entity.moveRest.on(coordinate => console.log('Done'))\n *   ], [entity.moveStart, entity.moveRest]);\n */\nexport const useEventListeners = (callback: () => EventDestroyer[], deps: DependencyList = []) => {\n\tconst cb = useCallback(\n\t\t() => {\n\t\t\tconst eventDestroyers = callback();\n\t\t\treturn () => eventDestroyers.forEach(d => d());\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tdeps\n\t);\n\treturn useEffect(cb, [cb]);\n};\n","import styled from '@emotion/styled';\nimport React, { FunctionComponent, ReactElement, useEffect, useState } from 'react';\nimport { CoordinateLike } from '../classes/Coordinate';\nimport { useGame } from '../Game';\nimport { ViewportHtmlContainer } from '../space/Viewport';\nimport { Event } from '../util/Event';\n\n/**\n * Presentational components\n */\n\nconst ContextMenuArrow = styled.div`\n\twidth: 0;\n\theight: 0;\n\tborder-left: 6px solid transparent;\n\tborder-right: 6px solid transparent;\n\tborder-top: 6px solid rgba(255, 255, 255, 0.5);\n\ttransform: translate(calc(-50% + 0px), -6px);\n`;\n\nconst ContextMenuBoundary = styled.div`\n\tposition: absolute;\n\tbottom: 100%;\n\tleft: 50%;\n\tbackdrop-filter: blur(2px);\n\ttransform: translate(-50%, -6px);\n`;\n\nconst ContextMenuBody = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 3px;\n\toverflow: hidden;\n`;\n\nexport const ContextMenuButton = styled.button`\n\tborder: none;\n\tdisplay: block;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\n\t// Same as HorizontalLinkListItem\n\tpadding: 0.5em 1em;\n\twhite-space: nowrap;\n\ttransition: background-color 0.5s;\n\tcolor: white;\n\tbackground-color: transparent;\n\t&:hover {\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\n\t\tcursor: pointer;\n\t}\n`;\n\nexport const ContextMenuFooter = styled.button`\n\tborder: none;\n\tdisplay: block;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\n\t// Same as HorizontalLinkListItem\n\tpadding: 0.5em 1em;\n\twhite-space: nowrap;\n\ttransition: background-color 0.5s;\n\tcolor: white;\n\tbackground-color: rgba(255, 255, 255, 0.1);\n`;\n\n/**\n * Logic\n */\ntype ContextManagerState = false | { location: CoordinateLike; contents: ReactElement };\nexport class ContextMenuManager {\n\tpublic state: ContextManagerState = false;\n\tpublic $changed = new Event<[ContextManagerState]>();\n\n\topen(location: CoordinateLike, contents: ReactElement) {\n\t\tthis.state = { location, contents };\n\t\tthis.$changed.emit(this.state);\n\t}\n\n\tisOpen() {\n\t\treturn !!this.state;\n\t}\n\n\tclose() {\n\t\tthis.state = false;\n\t\tthis.$changed.emit(this.state);\n\t}\n}\n\nexport const ContextMenuContainer: FunctionComponent<{ zoom?: number }> = ({ zoom = 1 }) => {\n\tconst { contextMenu } = useGame();\n\tconst [managerState, setManagerState] = useState(contextMenu?.state);\n\tuseEffect(() => {\n\t\tif (!contextMenu) {\n\t\t\tthrow new Error('Shit.');\n\t\t}\n\t\treturn contextMenu.$changed.on(setManagerState);\n\t}, [contextMenu]);\n\n\tif (!managerState) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<ViewportHtmlContainer location={managerState.location} width={0} height={0} zoom={zoom}>\n\t\t\t<ContextMenuBoundary>\n\t\t\t\t<ContextMenuBody>{managerState.contents}</ContextMenuBody>\n\t\t\t</ContextMenuBoundary>\n\t\t\t<ContextMenuArrow />\n\t\t</ViewportHtmlContainer>\n\t);\n};\n","import { createContext, useContext } from 'react';\nimport { Scene } from './classes/Scene';\nimport { ContextMenuManager } from './ui/ContextMenu';\n\nexport class Game {\n\tpublic readonly contextMenu = new ContextMenuManager();\n\tpublic readonly scene: Scene;\n\n\tconstructor(scene: Scene) {\n\t\tthis.scene = scene;\n\t}\n}\n\nexport const GameContext = createContext<null | Game>(null);\n\nexport const useGame = () => {\n\tconst gameApi = useContext(GameContext);\n\tif (!gameApi) {\n\t\tthrow new Error('Game context does not exist');\n\t}\n\treturn gameApi;\n};\n","type BinaryHeapScorer<P> = (node: P) => number;\n\nexport class BinaryHeap<P> {\n\tscoreFunction: BinaryHeapScorer<P>;\n\tcontent: P[] = [];\n\tconstructor(scoreFunction: BinaryHeapScorer<P>) {\n\t\tthis.content = [];\n\t\tthis.scoreFunction = scoreFunction;\n\t}\n\tpush(element: P) {\n\t\t// Add the new element to the end of the array.\n\t\tthis.content.push(element);\n\n\t\t// Allow it to sink down.\n\t\tthis.sinkDown(this.content.length - 1);\n\t}\n\tpop() {\n\t\t// Store the first element so we can return it later.\n\t\tconst result = this.content[0];\n\n\t\t// Get the element at the end of the array.\n\t\tconst end = this.content.pop();\n\t\tif (!end) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// If there are any elements left, put the end element at the\n\t\t// start, and let it bubble up.\n\t\tif (this.content.length > 0) {\n\t\t\tthis.content[0] = end;\n\t\t\tthis.bubbleUp(0);\n\t\t}\n\t\treturn result;\n\t}\n\tremove(node: P) {\n\t\tconst i = this.content.indexOf(node);\n\n\t\t// When it is found, the process seen in 'pop' is repeated\n\t\t// to fill up the hole.\n\t\tconst end = this.content.pop();\n\t\tif (!end) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (i !== this.content.length - 1) {\n\t\t\tthis.content[i] = end;\n\n\t\t\tif (this.scoreFunction(end) < this.scoreFunction(node)) {\n\t\t\t\tthis.sinkDown(i);\n\t\t\t} else {\n\t\t\t\tthis.bubbleUp(i);\n\t\t\t}\n\t\t}\n\t}\n\tsize() {\n\t\treturn this.content.length;\n\t}\n\trescoreElement(node: P) {\n\t\tthis.sinkDown(this.content.indexOf(node));\n\t}\n\tsinkDown(n: number) {\n\t\t// Fetch the element that has to be sunk.\n\t\tconst element = this.content[n];\n\n\t\t// When at 0, an element can not sink any further.\n\t\twhile (n > 0) {\n\t\t\t// Compute the parent element's index, and fetch it.\n\t\t\tconst parentN = ((n + 1) >> 1) - 1;\n\t\t\tconst parent = this.content[parentN];\n\t\t\t// Swap the elements if the parent is greater.\n\t\t\tif (this.scoreFunction(element) < this.scoreFunction(parent)) {\n\t\t\t\tthis.content[parentN] = element;\n\t\t\t\tthis.content[n] = parent;\n\t\t\t\t// Update 'n' to continue at the new position.\n\t\t\t\tn = parentN;\n\t\t\t}\n\t\t\t// Found a parent that is less, no need to sink any further.\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tbubbleUp(n: number) {\n\t\t// Look up the target element and its score.\n\t\tconst length = this.content.length;\n\t\tconst element = this.content[n];\n\t\tconst elemScore = this.scoreFunction(element);\n\n\t\twhile (true) {\n\t\t\t// Compute the indices of the child elements.\n\t\t\tconst child2N = (n + 1) << 1;\n\t\t\tconst child1N = child2N - 1;\n\t\t\t// This is used to store the new position of the element, if any.\n\t\t\tlet swap = null;\n\t\t\tlet child1Score;\n\t\t\t// If the first child exists (is inside the array)...\n\t\t\tif (child1N < length) {\n\t\t\t\t// Look it up and compute its score.\n\t\t\t\tconst child1 = this.content[child1N];\n\t\t\t\tchild1Score = this.scoreFunction(child1);\n\n\t\t\t\t// If the score is less than our element's, we need to swap.\n\t\t\t\tif (child1Score < elemScore) {\n\t\t\t\t\tswap = child1N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Do the same checks for the other child.\n\t\t\tif (child2N < length) {\n\t\t\t\tconst child2 = this.content[child2N];\n\t\t\t\tconst child2Score = this.scoreFunction(child2);\n\t\t\t\t// child1Score is number or undefined. To satisfy TS (for the original code) it is coerced to number,\n\t\t\t\t// but I'm not sure why it wouldn't stay undefined, really.\n\t\t\t\tif (child2Score < (swap === null ? elemScore : (child1Score as number))) {\n\t\t\t\t\tswap = child2N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the element needs to be moved, swap it, and continue.\n\t\t\tif (swap !== null) {\n\t\t\t\tthis.content[n] = this.content[swap];\n\t\t\t\tthis.content[swap] = element;\n\t\t\t\tn = swap;\n\t\t\t}\n\t\t\t// Otherwise, we are done.\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n","// An adaptation of:\n//   javascript-astar 0.4.1\n//   http://github.com/bgrins/javascript-astar\n//   Freely distributable under the MIT License.\n//   Implements the astar search algorithm in javascript using a Binary Heap.\n//   Includes Binary Heap (with modifications) from Marijn Haverbeke.\n//   http://eloquentjavascript.net/appendix2.html\n\nimport { BinaryHeap } from '../util/BinaryHeap';\nimport { GenericTerrain, GenericTile } from '../terrain/GenericTerrain';\n\n// See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\ntype HeuristicScorer = (a: GenericTile, b: GenericTile) => number;\n\n/**\n * Perform an A* Search on a graph given a start and end node.\n */\n\ntype HeuristicReport = {\n\tcoordinate: GenericTile;\n\th: number;\n\tg: number;\n\tf: number;\n\tparent: HeuristicReport | null;\n\tclosed: Boolean;\n\tvisited: boolean;\n};\n\ntype PathOptions = {\n\tclosest: Boolean;\n\theuristic?: HeuristicScorer;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst MANHATTAN: HeuristicScorer = (pos0, pos1) => {\n\tconst d1 = Math.abs(pos1.x - pos0.x);\n\tconst d2 = Math.abs(pos1.y - pos0.y);\n\treturn d1 + d2;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst DIAGONAL: HeuristicScorer = (pos0, pos1) => {\n\tconst D = 1;\n\tconst D2 = Math.sqrt(2);\n\tconst d1 = Math.abs(pos1.x - pos0.x);\n\tconst d2 = Math.abs(pos1.y - pos0.y);\n\treturn D * (d1 + d2) + (D2 - 2 * D) * Math.min(d1, d2);\n};\n\nfunction getVisitationCost(\n\tterrain: GenericTerrain<GenericTile>,\n\tfrom: GenericTile,\n\tneighbor: GenericTile\n) {\n\treturn 1;\n}\n\nexport class Path {\n\tprivate readonly terrain: GenericTerrain<GenericTile>;\n\tprivate readonly options: PathOptions;\n\tprivate readonly cache: Map<GenericTile, HeuristicReport>;\n\tprivate readonly heap: BinaryHeap<GenericTile>;\n\tprivate readonly heuristic: HeuristicScorer;\n\n\tconstructor(graph: GenericTerrain<GenericTile>, options: PathOptions) {\n\t\tthis.terrain = graph;\n\t\tthis.options = options;\n\n\t\tthis.cache = new Map<GenericTile, HeuristicReport>();\n\n\t\tthis.heap = new BinaryHeap<GenericTile>(node => {\n\t\t\tconst heuristic = this.cache.get(node);\n\t\t\tif (!heuristic) {\n\t\t\t\tthrow new Error('This is weird');\n\t\t\t}\n\t\t\treturn heuristic.f;\n\t\t});\n\n\t\tthis.heuristic = DIAGONAL;\n\t}\n\n\tfind(start: GenericTile, end: GenericTile) {\n\t\tlet closestNode = start; // set the start node to be the closest if required\n\t\tlet closestNodeHeuristics: HeuristicReport = {\n\t\t\tcoordinate: closestNode,\n\t\t\th: this.heuristic(start, end),\n\t\t\tg: 0,\n\t\t\tf: 0,\n\n\t\t\tparent: null,\n\n\t\t\t// Unsure what the default value should be\n\t\t\tclosed: true,\n\t\t\tvisited: true\n\t\t};\n\n\t\t// At this stage `start` is also `closestNode`, so lets associate those heuristics\n\t\tthis.cache.set(start, closestNodeHeuristics);\n\n\t\tthis.heap.push(start);\n\n\t\twhile (this.heap.size() > 0) {\n\t\t\t// Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n\t\t\tconst currentNode = this.heap.pop();\n\t\t\tconst currentNodeHeuristics = this.cache.get(currentNode);\n\t\t\tif (!currentNodeHeuristics) {\n\t\t\t\tthrow new Error('Somehow opening a node that has no heuristic data');\n\t\t\t}\n\n\t\t\t// End case -- result has been found, return the traced path.\n\t\t\tif (currentNode.equals(end)) {\n\t\t\t\treturn this.tracePath(currentNodeHeuristics);\n\t\t\t}\n\n\t\t\t// Normal case -- move currentNode from open to closed, process each of its neighbors.\n\t\t\tcurrentNodeHeuristics.closed = true;\n\n\t\t\t// Find all neighbors for the current node.\n\t\t\tconst neighbors = this.terrain.getNeighborTiles(currentNode);\n\n\t\t\tfor (let i = 0, il = neighbors.length; i < il; ++i) {\n\t\t\t\tconst neighbor = neighbors[i];\n\t\t\t\tlet neighborHeuristics = this.cache.get(neighbor);\n\n\t\t\t\tif (neighborHeuristics?.closed || !neighbor.isLand()) {\n\t\t\t\t\t// Not a valid node to process, skip to next neighbor.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// The g score is the shortest distance from start to current node.\n\t\t\t\t// We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n\t\t\t\tconst gScore =\n\t\t\t\t\tcurrentNodeHeuristics.g +\n\t\t\t\t\tgetVisitationCost(this.terrain, currentNode, neighbor);\n\t\t\t\tconst beenVisited = !!neighborHeuristics;\n\n\t\t\t\tif (!beenVisited || (neighborHeuristics && gScore < neighborHeuristics.g)) {\n\t\t\t\t\tconst hScore = this.heuristic(neighbor, end);\n\t\t\t\t\t// Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n\t\t\t\t\tneighborHeuristics = {\n\t\t\t\t\t\tcoordinate: neighbor,\n\t\t\t\t\t\th: hScore,\n\t\t\t\t\t\tg: gScore,\n\t\t\t\t\t\tf: gScore + hScore,\n\t\t\t\t\t\tparent: currentNodeHeuristics,\n\t\t\t\t\t\tclosed: true,\n\t\t\t\t\t\tvisited: true\n\t\t\t\t\t};\n\t\t\t\t\tthis.cache.set(neighbor, neighborHeuristics as HeuristicReport);\n\n\t\t\t\t\tif (this.options.closest) {\n\t\t\t\t\t\t// If the neighbour is closer than the current closestNode or if it's equally close but has\n\t\t\t\t\t\t// a cheaper path than the current closest node then it becomes the closest node\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tneighborHeuristics.h < closestNodeHeuristics.h ||\n\t\t\t\t\t\t\t(neighborHeuristics.h === closestNodeHeuristics.h &&\n\t\t\t\t\t\t\t\tneighborHeuristics.g < closestNodeHeuristics.g)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tclosestNode = neighbor;\n\t\t\t\t\t\t\tclosestNodeHeuristics = neighborHeuristics;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!beenVisited) {\n\t\t\t\t\t\t// Pushing to heap will put it in proper place based on the 'f' value.\n\t\t\t\t\t\tthis.heap.push(neighbor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Already seen the node, but since it has been rescored we need to reorder it in the heap\n\t\t\t\t\t\tthis.heap.rescoreElement(neighbor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.closest) {\n\t\t\treturn this.tracePath(closestNodeHeuristics);\n\t\t}\n\n\t\t// No result was found - empty array signifies failure to find path.\n\t\tconsole.warn('-- No path --');\n\t\treturn [];\n\t}\n\n\ttracePath(heuristicReport: HeuristicReport) {\n\t\tlet curr = heuristicReport;\n\t\tconst path = [];\n\t\twhile (curr.parent) {\n\t\t\tpath.unshift(curr);\n\t\t\tcurr = curr.parent;\n\t\t}\n\t\treturn path.map(heuristicReport => heuristicReport.coordinate);\n\t}\n}\n","const FIRST_NAMES_M = `\n\tPaul, Paolo, Pablo, Pavel, Pasha, Pau, Paulo, Pol, Pavlo, Paavo, Pali, Pal, Paulin, Pava, Påvel, Paulino, Pawel,\n\tPaavali, Pauel, Pavlos, Pavlusha, Poul, Pusha, Pashenka, Pavlík, Poll, Pól, Pavlousek, Pawelek, Pål, Pavilcek, Pál\n`\n\t.replace(/\\t|\\n/g, '')\n\t.split(',')\n\t.map(name => name.trim());\n\nconst FIRST_NAMES_F = `\n\tMia, Mare, Miriam, Mary, Mara, Molly, Maren, Mariah, Marisol, Maria, Moira, Polly, Marie, Mariana, Marilyn, Malia,\n\tMari, Manon, Marissa, Mariam, Marion, Ria, Mariella, Milou, Mitzi, Marielle, Maribel, Maura, Mamie, Maureen, Mariel,\n\tMarisa, Maryam, Mairi, Malou, Marietta, Maija, Maire, Maritza, Maricela, Marya, Marika, Isamar, My, Mariska, Maryse,\n\tMariela, Maira, Marita, Mariette,\n`\n\t.replace(/\\t|\\n/g, '')\n\t.split(',')\n\t.map(name => name.trim());\n\nexport function getRandomMaleFirstName() {\n\treturn FIRST_NAMES_M[Math.floor(Math.random() * FIRST_NAMES_M.length)];\n}\nexport function getRandomFemaleFirstName() {\n\treturn FIRST_NAMES_F[Math.floor(Math.random() * FIRST_NAMES_F.length)];\n}\n\nexport function getRandomFullName() {}\n","import { FunctionComponent } from 'react';\nimport { GenericTile } from '../terrain/GenericTerrain';\nimport { Job } from '../jobs/Job';\nconst noop = () => {};\n\nexport class Entity {\n\tpublic readonly id: string;\n\n\t/**\n\t * The React SVG component that consitutes this entity. Is expected to be defined in a class\n\t * that extends `Entity`.\n\t */\n\tpublic readonly Component: FunctionComponent = () => {\n\t\treturn null;\n\t};\n\n\tpublic location: GenericTile;\n\n\t/**\n\t * The set of behaviour/tasks given to this entity.\n\t */\n\tpublic job?: Job;\n\n\tconstructor(id: string, location: GenericTile) {\n\t\tthis.id = id;\n\t\tthis.location = location;\n\t}\n\n\tpublic get label(): string {\n\t\tthrow new Error(`${this.constructor.name} ${this.id}`);\n\t}\n\n\tpublic play() {\n\t\treturn this.job?.start() || noop;\n\t}\n\n\tpublic doJob(job: Job) {\n\t\tthis.job = job;\n\n\t\t// @TODO maybe some events\n\t}\n}\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { Path } from '../classes/Path';\nimport { GenericTile } from '../terrain/GenericTerrain';\nimport { getRandomFemaleFirstName, getRandomMaleFirstName } from '../constants/names';\nimport { MovingAnchor } from '../space/Anchor';\nimport { Event, useEventListeners } from '../util/Event';\nimport { Entity } from './Entity';\n\ntype OnEntityClick = (event: React.MouseEvent<SVGElement, MouseEvent>) => void;\n\nexport class PersonEntity extends Entity {\n\t// The event that the person starts walking a path\n\tpublic readonly $startedWalking = new Event<[]>();\n\n\t// The event that the person finishes a path, according to react-spring's timing\n\tpublic readonly $stoppedWalking = new Event<[]>();\n\n\t// The person started one step\n\tpublic readonly $startedWalkStep = new Event<[GenericTile]>();\n\n\t// The person started finished one step, according to react-spring's timing\n\tpublic readonly $stoppedWalkStep = new Event<[GenericTile]>();\n\n\tpublic readonly passport: { firstName: string };\n\n\tconstructor(id: string, location: GenericTile) {\n\t\tsuper(id, location);\n\n\t\tconst feminine = Math.random() < 0.5;\n\t\tthis.passport = {\n\t\t\tfirstName: feminine ? getRandomFemaleFirstName() : getRandomMaleFirstName()\n\t\t};\n\n\t\t// Movement handling\n\t\tthis.$stoppedWalkStep.on((loc) => {\n\t\t\tthis.location = loc;\n\t\t});\n\t}\n\n\t// Calculate a path and emit animations to walk it the whole way. `this.location` is updated in between each step\n\tpublic walkTo(destination: GenericTile) {\n\t\tif (!this.location.terrain) {\n\t\t\tthrow new Error(`Entity \"${this.id}\" is trying to path in a detached coordinate`);\n\t\t}\n\t\tconst path = new Path(this.location.terrain, { closest: true }).find(\n\t\t\tthis.location,\n\t\t\tdestination\n\t\t);\n\n\t\t// console.log(`${this.location}-->${destination}: ${path.length}`);\n\n\t\tif (!path.length) {\n\t\t\tconsole.warn('Path was zero steps long, finishing early.', this);\n\t\t\tthis.$stoppedWalking.emit();\n\t\t\treturn;\n\t\t}\n\t\tconst unlisten = this.$stoppedWalkStep.on(() => {\n\t\t\tconst nextStep = path.shift();\n\n\t\t\tif (!nextStep) {\n\t\t\t\tthis.$stoppedWalking.emit();\n\t\t\t\tunlisten();\n\t\t\t} else {\n\t\t\t\tthis.doPathStep(nextStep);\n\t\t\t}\n\t\t});\n\n\t\tthis.doPathStep(path.shift() as GenericTile);\n\t}\n\t/**\n\t * Move entity directly to a coordinate. Does not consider accessibility or closeness.\n\t */\n\tpublic doPathStep(coordinate: GenericTile) {\n\t\tif (coordinate.hasNaN()) {\n\t\t\tdebugger;\n\t\t}\n\t\tthis.$startedWalkStep.emit(coordinate);\n\t}\n\n\tpublic get label(): string {\n\t\treturn this.passport.firstName;\n\t}\n\n\tComponent: FunctionComponent = () => {\n\t\treturn <circle cx={0} cy={0} r=\"5\" fill=\"white\" />;\n\t};\n}\n\n/**\n * A component that automatically transitions the entity component as per its move instructions\n */\nexport const PersonEntityComponent: FunctionComponent<{\n\tentity: PersonEntity;\n\tonClick?: OnEntityClick;\n}> = ({ entity, onClick }) => {\n\tconst [{ destination, duration }, animatePosition] = useState({\n\t\tdestination: entity.location,\n\t\tduration: 0\n\t});\n\n\tuseEventListeners(\n\t\t() => [\n\t\t\t// Listen for the entity moveStart order;\n\t\t\tentity.$startedWalkStep.on((destination) =>\n\t\t\t\tanimatePosition({\n\t\t\t\t\tdestination: destination,\n\t\t\t\t\tduration: entity.location.euclideanDistanceTo(destination) * 500\n\t\t\t\t})\n\t\t\t)\n\t\t],\n\t\t[entity.$startedWalkStep]\n\t);\n\n\tconst onRest = useCallback(\n\t\t() => entity.$stoppedWalkStep.emit(destination),\n\t\t[entity.$stoppedWalkStep, destination]\n\t);\n\n\treturn (\n\t\t<MovingAnchor moveTo={destination} moveSpeed={duration} onRest={onRest} onClick={onClick}>\n\t\t\t<entity.Component />\n\t\t</MovingAnchor>\n\t);\n};\n","import { PersonEntity } from './PersonEntity';\n\nexport class CivilianEntity extends PersonEntity {\n\tget label(): string {\n\t\treturn `${this.passport.firstName}`;\n\t}\n}\n","import { InGameDistance } from '../space/PERSPECTIVE';\nexport interface CoordinateLike {\n\tx: InGameDistance;\n\ty: InGameDistance;\n\tz: InGameDistance;\n}\n\nexport type CoordinateArray = [InGameDistance, InGameDistance, InGameDistance];\n\nexport class Coordinate implements CoordinateLike {\n\tx: InGameDistance;\n\ty: InGameDistance;\n\tz: InGameDistance;\n\n\tconstructor(x: InGameDistance, y: InGameDistance, z: InGameDistance) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tequals(coord: CoordinateLike) {\n\t\treturn (\n\t\t\tthis === coord ||\n\t\t\t(coord && this.x === coord.x && this.y === coord.y && this.z === coord.z)\n\t\t);\n\t}\n\n\ttransform(dx: InGameDistance = 0, dy: InGameDistance = 0, dz: InGameDistance = 0) {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\n\t\treturn this;\n\t}\n\n\thasNaN() {\n\t\treturn isNaN(this.x) || isNaN(this.y) || isNaN(this.z);\n\t}\n\n\tmanhattanDistanceTo(coord: CoordinateLike) {\n\t\treturn Math.abs(this.x - coord.x) + Math.abs(this.y - coord.y) + Math.abs(this.z - coord.z);\n\t}\n\n\teuclideanDistanceTo(coord: CoordinateLike) {\n\t\tconst xy = Math.sqrt((this.x - coord.x) ** 2 + (this.y - coord.y) ** 2);\n\t\tconst xyz = Math.sqrt(xy ** 2 + (this.z - coord.z) ** 2);\n\t\treturn xyz;\n\t}\n\n\t// For debugging purposes only, may change without notice or tests\n\ttoString() {\n\t\treturn [this.x, this.y, this.z].join(',');\n\t}\n\n\tstatic clone(coord: CoordinateLike) {\n\t\treturn new Coordinate(coord.x, coord.y, coord.z);\n\t}\n}\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { Coordinate } from '../classes/Coordinate';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { PersonEntity } from './PersonEntity';\n\nconst zoom = 0.25;\nconst translate = zoom / 2;\nconst offset = new Coordinate(-translate, -translate, -translate / 2);\n\nexport class GuardEntity extends PersonEntity {\n\tpublic get label(): string {\n\t\treturn `Guardsman ${this.passport.firstName}`;\n\t}\n\n\tComponent: FunctionComponent = () => {\n\t\treturn (\n\t\t\t<Anchor {...offset}>\n\t\t\t\t<MonochromeBox\n\t\t\t\t\tsize={zoom}\n\t\t\t\t\tfill={Color('#227d5e')}\n\t\t\t\t\tstroke={Color('#227d5e').mix(Color('#000'), 0.3)}\n\t\t\t\t\tinnerStroke={Color('#227d5e').mix(Color('#fff'), 0.3)}\n\t\t\t\t/>\n\t\t\t</Anchor>\n\t\t);\n\t};\n}\n","import seedrandom from 'seedrandom';\n\ntype Seed = Array<string | number | boolean>;\n\nexport class Random {\n\tstatic float(...seed: Seed): number {\n\t\treturn seedrandom(seed.join('/')).double();\n\t}\n\tstatic arrayItem<P>(arr: P[], ...seed: Seed) {\n\t\tconst index = Math.floor(this.float(...seed) * arr.length);\n\t\treturn arr[index];\n\t}\n}\n","import { Entity } from '../entities/Entity';\n\nexport class Job<E = Entity> {\n\tentity: E;\n\tconstructor(entity: E) {\n\t\tthis.entity = entity;\n\t}\n\n\tget label(): string {\n\t\tthrow new Error(`Not implemented for ${this.constructor.name}`);\n\t}\n\n\tstart() {\n\t\tthrow new Error(`Not implemented for ${this.constructor.name}`);\n\t}\n}\n","import { PersonEntity } from '../entities/PersonEntity';\nimport { Random } from '../util/Random';\nimport { Job } from './Job';\n\nexport class LoiterJob extends Job<PersonEntity> {\n\t// The minimum and maximum amounts of ms before considering to move again, after having walked\n\tprivate walkMinWait = 2000;\n\tprivate walkMaxWait = 10000;\n\n\t// Every time that the entity might make a move, there's a good chance that they'll change their\n\t//   mind and lazy out instead.\n\tprivate walkChanceOnRoll = 0.3;\n\n\t// If the entity chooses to walk, its no more than this amount of times\n\tprivate walkMaxDistance = 7;\n\n\tget label() {\n\t\treturn `Loitering`;\n\t}\n\n\tstart() {\n\t\tlet steps = 0;\n\t\tconst doTimeout = () =>\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (Math.random() > this.walkChanceOnRoll) {\n\t\t\t\t\tdoTimeout();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsteps++;\n\t\t\t\tconst destinations =\n\t\t\t\t\tthis.entity.location?.terrain?.selectClosestTiles(\n\t\t\t\t\t\tthis.entity.location,\n\t\t\t\t\t\tthis.walkMaxDistance\n\t\t\t\t\t) || [];\n\t\t\t\tthis.entity.walkTo(\n\t\t\t\t\tRandom.arrayItem(destinations, this.entity.id, 'roam-destination', steps)\n\t\t\t\t);\n\t\t\t}, this.walkMinWait + Random.float(this.entity.id, 'roam-delay', steps) * (this.walkMaxWait - this.walkMinWait));\n\n\t\tconst destroyers = [this.entity.$stoppedWalking.on(doTimeout)];\n\n\t\tdoTimeout();\n\n\t\treturn () => destroyers.forEach(d => d());\n\t}\n}\n","import { GenericTile } from '../terrain/GenericTerrain';\nimport { PersonEntity } from '../entities/PersonEntity';\nimport { Job } from './Job';\n\nexport class PatrolJob extends Job<PersonEntity> {\n\twaypoints: GenericTile[];\n\twaypointIndex: number;\n\n\tconstructor(entity: PersonEntity, waypoints: GenericTile[]) {\n\t\tsuper(entity);\n\t\tif (waypoints.length < 2) {\n\t\t\tthrow new Error('A patrol must have at least 2 waypoints');\n\t\t}\n\t\tthis.waypoints = waypoints;\n\t\tthis.waypointIndex = 0;\n\t}\n\n\tget label() {\n\t\treturn `Patrolling between ${this.waypoints.length} waypoints`;\n\t}\n\n\tstart() {\n\t\tconst destroyers = [\n\t\t\tthis.entity.$stoppedWalking.on(() => {\n\t\t\t\t// Guards move from one waypoint to another, pausing for a random amount of time in between\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.waypointIndex += 1;\n\t\t\t\t\tconst next = this.waypoints[this.waypointIndex % this.waypoints.length];\n\t\t\t\t\tthis.entity.walkTo(next);\n\t\t\t\t}, 3000);\n\t\t\t})\n\t\t];\n\n\t\tthis.entity.walkTo(this.waypoints[0]);\n\n\t\treturn () => {\n\t\t\tdestroyers.forEach(d => d());\n\t\t};\n\t}\n}\n","import { CivilianEntity } from '../entities/CivilianEntity';\nimport { GuardEntity } from '../entities/GuardEntity';\nimport { PersonEntity } from '../entities/PersonEntity';\nimport { LoiterJob } from '../jobs/LoiterJob';\nimport { PatrolJob } from '../jobs/PatrolJob';\nimport { GenericTerrain, GenericTile } from '../terrain/GenericTerrain';\nimport { Random } from '../util/Random';\n\nfunction repeat<P>(n: number, cb: (i: number) => P): P[] {\n\treturn Array.from(new Array(n)).map((_, i) => cb(i));\n}\n\nexport const RATIO_WATER_OF_TOTAL = 0.25;\n\nexport function generateTerrain(seed: string, size: number) {}\n\nfunction generatePatrolJob(seed: string, entity: PersonEntity) {\n\tconst start = entity.location;\n\tconst island = start.terrain?.getIslands().find(island => island.includes(start));\n\tif (!island) {\n\t\t// Expect to never throw this:\n\t\tthrow new Error('Got falsy start from none of the islands');\n\t}\n\n\treturn new PatrolJob(entity, [\n\t\t...repeat(2 + Math.floor(Random.float(entity.id, 'job', 'waypoint_amount') * 4), i =>\n\t\t\tRandom.arrayItem(island, entity.id, 'job', 'waypoint', i)\n\t\t),\n\t\tstart\n\t]);\n}\n\nexport function generateEntities<Y extends GenericTile, T extends GenericTerrain<Y>>(\n\tseed: string,\n\tterrain: T\n) {\n\tconst walkableTiles = terrain.tiles.filter(c => c.isLand());\n\n\t// const islands = terrain.getIslands();\n\n\tconst amountOfGuards = 5;\n\tconst amountOfCivilians = 10;\n\treturn [\n\t\t...repeat(amountOfGuards, i => {\n\t\t\tconst id = seed + '-guard-' + i;\n\t\t\tconst start = Random.arrayItem(walkableTiles, id, 'start');\n\t\t\tconst guard = new GuardEntity(id, start);\n\t\t\tconst job = generatePatrolJob(seed, guard);\n\t\t\tguard.doJob(job);\n\t\t\treturn guard;\n\t\t}),\n\t\t...repeat(amountOfCivilians, i => {\n\t\t\tconst id = seed + '-person-' + i;\n\t\t\tconst start = Random.arrayItem(walkableTiles, id, 'start');\n\t\t\tconst worker = new CivilianEntity(id, start);\n\t\t\tworker.doJob(new LoiterJob(worker));\n\t\t\treturn worker;\n\t\t})\n\t];\n}\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { PERSPECTIVE } from '../space/PERSPECTIVE';\nimport { SvgMouseInteractionProps } from '../types';\nimport { DualMeshTerrain, DualMeshTile } from './DualMeshTerrain';\nimport { GenericTerrainComponentI } from './GenericTerrain';\n\nexport const DualMeshTileComponent: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\ttile: DualMeshTile;\n\t}\n> = ({ tile, ...svgProps }) => {\n\tconst polyline = useMemo(() => {\n\t\tif (!tile.outlinePoints || tile.outlinePoints.length < 3) {\n\t\t\tthrow new Error('Not a polygon');\n\t\t}\n\t\treturn [...tile.outlinePoints, tile.outlinePoints[0]]\n\t\t\t.map((n) => PERSPECTIVE.toPixels(n.x, n.y, n.z).join(','))\n\t\t\t.join(' ');\n\t}, [tile]);\n\tconst isLand = useMemo(() => tile.isLand(), [tile]);\n\treturn (\n\t\t<g className=\"dual-mesh-tile\">\n\t\t\t<polyline\n\t\t\t\tfill={isLand ? 'var(--color-terrain-normal-fill)' : 'transparent'}\n\t\t\t\tstroke={isLand ? 'rgba(0,0,0)' : 'rgba(0,0,0,0.1)'}\n\t\t\t\tpoints={polyline}\n\t\t\t\t{...svgProps}\n\t\t\t/>\n\t\t</g>\n\t);\n};\n\nexport const DualMeshTerrainComponent: GenericTerrainComponentI<DualMeshTerrain, DualMeshTile> = ({\n\tterrain,\n\tonTileClick,\n\tonTileContextMenu\n}) => {\n\tconst terrainElements = useMemo(\n\t\t() =>\n\t\t\tterrain.getTilesInRenderOrder().map((tile) => (\n\t\t\t\t<DualMeshTileComponent\n\t\t\t\t\tkey={tile.toString()}\n\t\t\t\t\ttile={tile}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\tonTileClick\n\t\t\t\t\t\t\t? (event) => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\tonTileClick(event, tile);\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: onTileClick\n\t\t\t\t\t}\n\t\t\t\t\tonContextMenu={\n\t\t\t\t\t\tonTileContextMenu\n\t\t\t\t\t\t\t? (event) => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tonTileContextMenu(event, tile);\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: onTileContextMenu\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[terrain, onTileClick, onTileContextMenu]\n\t);\n\treturn <g className=\"dual-mesh-terrain\">{terrainElements}</g>;\n};\n","import { distanceToCameraComparator } from '../space/PERSPECTIVE';\nimport { Coordinate, CoordinateLike } from '../classes/Coordinate';\nimport { FunctionComponent } from 'react';\n\ntype TileFilter<T extends GenericTile> = (tile: T) => boolean;\n\n/**\n * A special type of coordinate that is equal to another terrain coordinate when the X and Y are equal, disregarding Z.\n */\nexport class GenericTile extends Coordinate {\n\tpublic terrain?: GenericTerrain<GenericTile>;\n\n\tequals(coord: CoordinateLike) {\n\t\treturn this === coord || (coord && this.x === coord.x && this.y === coord.y);\n\t}\n\n\tstatic clone(coord: GenericTile) {\n\t\tconst coord2 = new GenericTile(coord.x, coord.y, coord.z);\n\t\tcoord2.terrain = (coord as GenericTile).terrain;\n\t\treturn coord2;\n\t}\n\n\tisLand() {\n\t\treturn this.z >= 0;\n\t}\n\n\t// For debugging purposes only, may change without notice or tests\n\ttoString() {\n\t\treturn '(' + [this.x, this.y].map((num: number) => num.toFixed(2)).join(',') + ')';\n\t}\n}\n\nexport abstract class GenericTerrain<T extends GenericTile> {\n\t/**\n\t * Private\n\t */\n\n\t//\n\tprivate _tilesInRenderOrder: T[] | null = null;\n\n\t/**\n\t * Public, shared code\n\t */\n\n\tpublic readonly tiles: T[] = [];\n\n\t//\n\tprotected islands: Map<TileFilter<T>, T[][]> = new Map();\n\n\tconstructor(tiles: T[]) {\n\t\tthis.tiles = tiles;\n\t}\n\n\t//\n\tpublic selectContiguousTiles(start: T, selector: TileFilter<T> = c => c.isLand()): T[] {\n\t\tconst island: T[] = [];\n\t\tconst seen: T[] = [];\n\t\tconst queue: T[] = [start];\n\n\t\twhile (queue.length) {\n\t\t\tconst current = queue.shift() as T;\n\t\t\tisland.push(current);\n\n\t\t\tconst neighbours = this.getNeighborTiles(current).filter(n => !seen.includes(n));\n\t\t\tseen.splice(0, 0, current, ...neighbours);\n\t\t\tqueue.splice(0, 0, ...neighbours.filter(selector));\n\t\t}\n\t\treturn island;\n\t}\n\n\t//\n\tpublic selectClosestTiles(start: T, maxDistance: number): T[] {\n\t\treturn this.selectContiguousTiles(\n\t\t\tstart,\n\t\t\tother => other.isLand() && start.euclideanDistanceTo(other) <= maxDistance\n\t\t);\n\t}\n\n\t//\n\tpublic getIslands(selector: TileFilter<T> = t => t.isLand()): T[][] {\n\t\tconst fromCache = this.islands.get(selector);\n\t\tif (fromCache) {\n\t\t\treturn fromCache;\n\t\t}\n\n\t\tlet open = this.tiles.slice();\n\t\tconst islands = [];\n\t\twhile (open.length) {\n\t\t\tconst next = open.shift() as T;\n\t\t\tif (!selector(next)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst island = this.selectContiguousTiles(next, selector);\n\t\t\topen = open.filter(n => !island.includes(n));\n\t\t\tislands.push(island);\n\t\t}\n\n\t\tthis.islands.set(selector, islands);\n\t\treturn islands;\n\t}\n\n\t//\n\tpublic getTilesInRenderOrder() {\n\t\tif (!this._tilesInRenderOrder) {\n\t\t\tthis._tilesInRenderOrder = this.tiles.slice().sort(distanceToCameraComparator);\n\t\t}\n\t\treturn this._tilesInRenderOrder;\n\t}\n\n\t/**\n\t * Abstract methods\n\t */\n\n\t//\n\tpublic abstract Component: FunctionComponent<GenericTerrainComponentProps<T>> = () => {\n\t\tthrow new Error('Not implemented');\n\t};\n\n\t//\n\tpublic abstract getClosestToXy(x: number, y: number): T;\n\n\t//\n\tpublic abstract getNeighborTiles(center: T): T[];\n\n\t/**\n\t * Statics\n\t */\n\n\t//\n\tstatic generateRandom(seed: string, size: number): GenericTerrain<GenericTile> {\n\t\tthrow new Error('Not implemented');\n\t}\n}\n\nexport type GenericTerrainComponentProps<Tile extends GenericTile = GenericTile> = {\n\tonTileClick?: (event: React.MouseEvent<SVGGElement>, tile: Tile) => void;\n\tonTileContextMenu?: (event: React.MouseEvent<SVGGElement>, tile: Tile) => void;\n};\n\nexport type GenericTerrainComponentI<\n\tTerrain extends GenericTerrain<GenericTile> = GenericTerrain<GenericTile>,\n\tTile extends GenericTile = GenericTile\n> = FunctionComponent<\n\t{\n\t\tterrain: Terrain;\n\t} & GenericTerrainComponentProps<Tile>\n>;\n","import MeshBuilder from 'dual-mesh/create';\nimport Poisson from 'poisson-disk-sampling';\nimport React, { FunctionComponent } from 'react';\nimport { Coordinate, CoordinateArray } from '../classes/Coordinate';\nimport { DualMeshTerrainComponent } from './DualMeshTileComponent';\n\nimport { GenericTerrain, GenericTerrainComponentProps, GenericTile } from './GenericTerrain';\n\nexport class DualMeshTile extends GenericTile {\n\tpublic neighbors?: DualMeshTile[];\n\tpublic outlinePoints?: Coordinate[];\n\tpublic isGhost?: boolean;\n\n\t// static clone(coord: DualMeshTile) {\n\t// \tconst coord2 = new DualMeshTile(coord.x, coord.y, coord.z);\n\t// \tcoord2.isGhost = coord.isGhost;\n\t// \tcoord2.neighbors = coord.neighbors;\n\t// \tcoord2.outlinePoints = coord.outlinePoints;\n\t// \tcoord2.terrain = coord.terrain;\n\t// \treturn coord2;\n\t// }\n\n\tprivate _isLand?: boolean = undefined;\n\tisLand() {\n\t\tif (this._isLand === undefined) {\n\t\t\t// Return a subset of tiles to reduce \"ugly\" shapes and the\n\t\t\tthis._isLand =\n\t\t\t\t// Must be above the waterline:\n\t\t\t\tthis.z >= 0 &&\n\t\t\t\t// And must be at least <4> neighbors away from an outermost tile\n\t\t\t\t!(function r(item: DualMeshTile, maxDepth: number): boolean {\n\t\t\t\t\tif (item.isGhost) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (maxDepth <= 0) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t--maxDepth;\n\n\t\t\t\t\treturn item.neighbors?.some((n) => r(n, maxDepth)) || false;\n\t\t\t\t})(this, 1);\n\t\t}\n\t\treturn this._isLand;\n\t}\n}\n\nexport class DualMeshTerrain extends GenericTerrain<DualMeshTile> {\n\tprivate mesh: any;\n\n\tconstructor(tiles: DualMeshTile[], mesh: any) {\n\t\tsuper(tiles);\n\t\tthis.mesh = mesh;\n\t\tthis.tiles.forEach((coordinate, i) => {\n\t\t\tcoordinate.terrain = this;\n\t\t});\n\t}\n\n\toverride Component: FunctionComponent<GenericTerrainComponentProps<DualMeshTile>> = (props) =>\n\t\tReact.createElement(DualMeshTerrainComponent, {\n\t\t\tterrain: this,\n\t\t\t...props\n\t\t});\n\n\toverride getClosestToXy(x: number, y: number): DualMeshTile {\n\t\tconst center = new Coordinate(x, y, 0);\n\t\tconst { tile } = this.tiles.reduce<{ tile?: DualMeshTile; distance: number }>(\n\t\t\t(last, tile) => {\n\t\t\t\tconst distance = center.euclideanDistanceTo(tile);\n\t\t\t\treturn distance < last.distance ? { distance, tile } : last;\n\t\t\t},\n\t\t\t{ distance: Infinity }\n\t\t);\n\t\tif (!tile) {\n\t\t\tthrow new Error('No tiles, ' + this.tiles.length);\n\t\t}\n\t\treturn tile;\n\t}\n\n\toverride getNeighborTiles(center: DualMeshTile): DualMeshTile[] {\n\t\treturn center.neighbors || [];\n\t}\n}\n\nexport function generateRandom(seed: string, size: number, density: number = 1) {\n\t// Use @redblobgames/dual-mesh to generate tiles and relationships.\n\t// More information:\n\t// - https://redblobgames.github.io/dual-mesh/\n\t// - https://github.com/redblobgames/dual-mesh\n\tconst poisson = new Poisson(\n\t\t{\n\t\t\tshape: [size, size],\n\t\t\tminDistance: 1 / density\n\t\t},\n\t\tMath.random\n\t);\n\tconst meshBuilder = new MeshBuilder({ boundarySpacing: 1 });\n\tmeshBuilder.points.forEach((p: [number, number]) => poisson.addPoint(p));\n\tmeshBuilder.points = poisson.fill().map((xy: [number, number]) => [...xy, 0]);\n\n\tconst mesh = meshBuilder.create();\n\n\treturn new DualMeshTerrain(\n\t\t(meshBuilder.points as Array<CoordinateArray>)\n\t\t\t.map((coordinates, i) => new DualMeshTile(...coordinates))\n\t\t\t.map((tile, i) => {\n\t\t\t\tconst outlinePointIndices = mesh.r_circulate_t([], i);\n\t\t\t\ttile.outlinePoints = outlinePointIndices.map(\n\t\t\t\t\t(i: number) => new Coordinate(mesh.t_x(i), mesh.t_y(i), tile.z)\n\t\t\t\t);\n\n\t\t\t\ttile.isGhost = outlinePointIndices.some((index: number) => mesh.t_ghost(index));\n\t\t\t\treturn tile;\n\t\t\t})\n\t\t\t.map((tile, i, tiles) => {\n\t\t\t\ttile.neighbors = mesh\n\t\t\t\t\t.r_circulate_r([], i)\n\t\t\t\t\t.map((x: keyof DualMeshTerrain['tiles']) => tiles[x])\n\t\t\t\t\t.filter(Boolean);\n\n\t\t\t\treturn tile;\n\t\t\t})\n\t\t\t.filter(Boolean),\n\t\tmesh\n\t);\n}\n","// const ActiveEntityOverlay: FunctionComponent = ({ children }) => null;\n\nimport styled from '@emotion/styled';\nimport React, { FunctionComponent } from 'react';\nimport { Entity } from '../entities/Entity';\n\nconst ActiveEntityOverlayBoundary = styled.div`\n\tbackdrop-filter: blur(2px);\n`;\n\nconst ActiveEntityOverlayBody = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 3px;\n\tpadding: 1em;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\nconst Avatar = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 50%;\n\twidth: 64px;\n\theight: 64px;\n\tjustify-content: center;\n\talign-items: center;\n\tdisplay: flex;\n\tmargin-right: 1em;\n`;\nconst HorizontalLinkList = styled.nav`\n\tdisplay: flex;\n\tflex-direction: row;\n\tfont-size: 60%;\n\ttext-transform: uppercase;\n`;\nconst HorizontalLinkListItem = styled.a`\n\tflex: 0 0 auto;\n\tbackground-color: rgba(255, 255, 255, 0.1);\n\tmargin-right: 3px;\n\n\t// Same as ContextMenuItem\n\tpadding: 0.125em 0.5em;\n\twhite-space: nowrap;\n\ttransition: background-color 0.5s;\n\tcolor: white;\n\t/* background-color: transparent; */\n\t/* background-color: rgba(255, 255, 255, 0.05); */\n\t&:hover {\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\n\t\tcursor: pointer;\n\t}\n`;\nexport const EntityTextBadge: FunctionComponent<{ entity: Entity }> = ({ entity }) => (\n\t<>\n\t\t<p>\n\t\t\t<b>{entity.label}</b>\n\t\t</p>\n\t\t<p>{entity?.job ? entity.job.label : 'Jobless'}</p>\n\t\t<HorizontalLinkList style={{ marginTop: '1em' }}>\n\t\t\t<HorizontalLinkListItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tconsole.group('Selected entity');\n\t\t\t\t\tconsole.log(entity);\n\t\t\t\t\tconsole.groupEnd();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tLOG\n\t\t\t</HorizontalLinkListItem>\n\t\t\t<HorizontalLinkListItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tconsole.warn('Following entity not implemented yet', entity);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tFOLLOW\n\t\t\t</HorizontalLinkListItem>\n\t\t</HorizontalLinkList>\n\t</>\n);\nexport const ActiveEntityOverlay: FunctionComponent<{ entity?: Entity; zoom?: number }> = ({\n\tentity,\n\tzoom = 4\n}) => (\n\t<ActiveEntityOverlayBoundary>\n\t\t<ActiveEntityOverlayBody>\n\t\t\t<Avatar>\n\t\t\t\t{entity && (\n\t\t\t\t\t<svg\n\t\t\t\t\t\twidth=\"1\"\n\t\t\t\t\t\theight=\"1\"\n\t\t\t\t\t\toverflow=\"visible\"\n\t\t\t\t\t\tshapeRendering=\"geometricPrecision\"\n\t\t\t\t\t\tviewBox={[0, 0, 1 / zoom, 1 / zoom].join(' ')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<entity.Component />\n\t\t\t\t\t</svg>\n\t\t\t\t)}\n\t\t\t</Avatar>\n\t\t\t<div>{entity ? <EntityTextBadge entity={entity} /> : null}</div>\n\t\t</ActiveEntityOverlayBody>\n\t</ActiveEntityOverlayBoundary>\n);\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.section`\n\tposition: absolute;\n\tbottom: 2em;\n\tleft: 2em;\n\n\tfont-family: sans-serif;\n\tcolor: white;\n\n\ta {\n\t\tcolor: inherit;\n\t}\n`;\n","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport { Entity } from '../entities/Entity';\nimport { PersonEntity, PersonEntityComponent } from '../entities/PersonEntity';\nimport { Game } from '../Game';\nimport { Viewport } from '../space/Viewport';\nimport { GenericTile } from '../terrain/GenericTerrain';\nimport { ActiveEntityOverlay } from './ActiveEntityOverlay';\nimport { ContextMenuButton, ContextMenuContainer, ContextMenuFooter } from './ContextMenu';\nimport { Overlay } from './Overlay';\n\nfunction fancyTimeFormat(seconds: number) {\n\t// Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n\treturn `${~~((seconds % 3600) / 60)}′ ${seconds % 60}″`;\n}\nfunction fakeCoordinates(x: number, y: number) {\n\treturn `40° ${fancyTimeFormat(1000 - x)} N 79° ${fancyTimeFormat(700 - y)} W`;\n}\n\nexport const GameApplication: FunctionComponent<{\n\tgame: Game;\n\tinitialViewportCenter: GenericTile;\n}> = ({ game, initialViewportCenter }) => {\n\tconst { scene, contextMenu } = game;\n\n\tconst [center, setCenter] = useState(initialViewportCenter);\n\n\tconst [activeEntity, setActiveEntity] = useState<Entity | undefined>(undefined);\n\n\tconst terrain = useMemo(\n\t\t() => (\n\t\t\t<scene.terrain.Component\n\t\t\t\tonTileClick={(event, tile) => {\n\t\t\t\t\tcontextMenu.open(\n\t\t\t\t\t\ttile,\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ContextMenuButton onClick={() => setCenter(tile)}>\n\t\t\t\t\t\t\t\tCenter camera\n\t\t\t\t\t\t\t</ContextMenuButton>\n\t\t\t\t\t\t\t<ContextMenuButton\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tconsole.group(`Tile ${tile}`);\n\t\t\t\t\t\t\t\t\tconsole.log(tile);\n\t\t\t\t\t\t\t\t\tconsole.groupEnd();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShow in console\n\t\t\t\t\t\t\t</ContextMenuButton>\n\t\t\t\t\t\t\t<ContextMenuFooter>{fakeCoordinates(tile.x, tile.y)}</ContextMenuFooter>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\tonTileContextMenu={(event, tile) => {\n\t\t\t\t\tsetCenter(tile);\n\t\t\t\t}}\n\t\t\t/>\n\t\t),\n\t\t[scene, contextMenu]\n\t);\n\n\tconst entities = useMemo(\n\t\t() =>\n\t\t\tscene.entities\n\t\t\t\t.filter((entity): entity is PersonEntity => entity instanceof PersonEntity)\n\t\t\t\t.map((entity) => (\n\t\t\t\t\t<PersonEntityComponent\n\t\t\t\t\t\tkey={entity.id}\n\t\t\t\t\t\tentity={entity}\n\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tsetActiveEntity(entity);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)),\n\t\t[scene.entities]\n\t);\n\n\tuseEffect(() => {\n\t\tconst cb = () => {\n\t\t\tcontextMenu.close();\n\t\t};\n\n\t\twindow.addEventListener('click', cb);\n\t\treturn () => window.removeEventListener('click', cb);\n\t}, [contextMenu]);\n\n\treturn (\n\t\t<>\n\t\t\t<Viewport center={center} zoom={1} overlay={<ContextMenuContainer zoom={1} />}>\n\t\t\t\t<g id=\"scene__terrain\">{terrain}</g>\n\t\t\t\t<g id=\"scene__entities\">{entities}</g>\n\t\t\t</Viewport>\n\t\t\t<Overlay>\n\t\t\t\t<ActiveEntityOverlay entity={activeEntity} />\n\t\t\t\t<p style={{ fontSize: '0.8em', opacity: '0.5' }}>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://github.com/wvbe/kreuzzeug-im-nagelhosen\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t\t{'    '}\n\t\t\t\t\tSeed: {scene.seed}\n\t\t\t\t</p>\n\t\t\t</Overlay>\n\t\t</>\n\t);\n};\n","import React, { useEffect, useMemo } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Scene } from './classes/Scene';\nimport DemoCubes from './demos/demo.cubes';\nimport { Game, GameContext } from './Game';\nimport { generateEntities as generateHelloWorldEntities } from './generators/hello-world';\nimport {\n\tDualMeshTerrain,\n\tDualMeshTile,\n\tgenerateRandom as generateRandomDualMeshTerrain\n} from './terrain/DualMeshTerrain';\nimport { GameApplication } from './ui/GameApplication';\n\nfunction generateEverything(seed: string = String(Date.now())) {\n\tconst size = 48;\n\tconst density = 0.8;\n\tlet game: Game;\n\tif ((window as any).game) {\n\t\tgame = (window as any).game;\n\t} else {\n\t\tconst terrain = generateRandomDualMeshTerrain(seed, size, density);\n\t\tconst entities = generateHelloWorldEntities<DualMeshTile, DualMeshTerrain>(seed, terrain);\n\t\tconst scene = new Scene(seed, terrain, entities);\n\t\tgame = new Game(scene);\n\t\t(window as any).game = game;\n\t}\n\tconst initialViewportCenter = game.scene.terrain.getClosestToXy(\n\t\tMath.floor(size / 2),\n\t\tMath.floor(size / 2)\n\t);\n\treturn {\n\t\tgame,\n\t\tinitialViewportCenter\n\t};\n}\n\nfunction GameRoute() {\n\tconst gameApplicationProps = useMemo(generateEverything, []);\n\tuseEffect(() => gameApplicationProps.game.scene.play(), [gameApplicationProps.game.scene]);\n\treturn (\n\t\t<GameContext.Provider value={gameApplicationProps.game}>\n\t\t\t<GameApplication {...gameApplicationProps} />\n\t\t</GameContext.Provider>\n\t);\n}\n\nfunction TestRoute() {\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/tests\">Tests</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Route exact path=\"/tests\" component={DemoCubes} />\n\t\t</>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={GameRoute} />\n\t\t\t<Route component={TestRoute} />\n\t\t</Switch>\n\t);\n}\n\nexport default App;\n","import { Global } from '@emotion/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport globalStyleRules from './styles';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Global styles={globalStyleRules} />\n\t\t<HashRouter hashType={'slash'}>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["space/PERSPECTIVE.ts","space/LinePath.tsx","space/Anchor.tsx","textures/nebula-282c34.png","styles.ts","space/MonochromeBox.tsx","space/Viewport.tsx","demos/scaffolding.tsx","demos/demo.cubes.tsx","util/BinaryHeap.ts","classes/Path.ts","constants/names.tsx","util/Event.ts","entities/Entity.tsx","entities/PersonEntity.tsx","entities/CivilianEntity.tsx","classes/Terrain.ts","generators/hello-world.ts","classes/Coordinate.ts","space/MonochromeTile.tsx","classes/TerrainCoordinate.tsx","util/Random.ts","classes/TerrainGenerator.ts","entities/GuardEntity.tsx","jobs/Job.ts","jobs/PatrolJob.ts","jobs/LoiterJob.ts","classes/Scene.ts","ui/ActiveEntityOverlay.tsx","ui/ContextMenu.tsx","ui/Overlay.tsx","demos/scene.hello-world.tsx","App.tsx","index.tsx"],"names":["PERSPECTIVE","degrees","tileSize","_cos","_sin","_tan","this","isometricAngle","Math","PI","cos","sin","tan","x","y","z","cartX","cartY","tileHeight","isoY","distanceToCameraComparator","a","b","dX","dY","dZ","LinePath","path","stroke","strokeWidth","spatialCoordinates","map","coordinate","toPixels","cc","c","reduce","lines","start","i","all","concat","x1","y1","x2","y2","String","Crosshair","size","points","Anchor","children","crosshairSize","pixels","useMemo","overflow","MovingAnchor","moveTo","moveSpeed","onRest","onClick","dx","dy","ix","iy","loc","useSpring","to","config","duration","from","svg","color","white","Color","terrain","highlightedTerrain","lighten","styles","css","toString","darken","saturate","desaturate","mix","nebulaTexture","coordsToPixels","coords","borderWidth","COORDINATE_CLOSEST_TO_CAMERA","BORDER_NODES","XZ_NODES","YZ_NODES","XY_NODES","MonochromeBox","fill","strokeLinecap","innerStroke","innerStrokeWidth","gProps","innerStrokeCss","string","strokeCss","style","onContextMenu","cursor","join","PIXEL_FRIENDLY_PYTHAGORAS","pow","mathRoundMaybe","n","round","AbsolutelyPositionedContainer","styled","div","Viewport","overlay","center","zoom","translateX","translateY","springStyles","transform","ViewportSvgContainer","rest","width","height","shapeRendering","viewBox","NoAxis","YAxis","ZAxis","sqrt","XAxis","ViewportHtmlContainer","location","axis","left","top","pixelWidth","Axis","abs","Backdrop","Demo","window","alert","BinaryHeap","scoreFunction","content","element","push","sinkDown","length","result","end","pop","bubbleUp","node","indexOf","parentN","parent","elemScore","child2N","child1N","swap","child1Score","child1","child2","MANHATTAN","pos0","pos1","Path","graph","options","cache","heap","heuristic","Map","get","Error","f","closestNode","closestNodeHeuristics","h","g","closed","visited","set","currentNode","currentNodeHeuristics","equals","tracePath","neighbors","getNeighbors","il","neighbor","neighborHeuristics","isLand","gScore","beenVisited","hScore","closest","rescoreElement","console","warn","heuristicReport","curr","unshift","FIRST_NAMES_M","replace","split","name","trim","FIRST_NAMES_F","Event","listeners","callback","splice","args","forEach","noop","PersonEntity","id","pathStart","pathEnd","pathStepStart","pathStepEnd","passport","Component","cx","cy","r","on","feminine","random","firstName","floor","destination","find","emit","unlisten","nextStep","shift","doPathStep","hasNaN","job","constructor","PersonEntityComponent","entity","useState","animatePosition","deps","cb","useCallback","eventDestroyers","d","useEffect","useEventListeners","euclideanDistanceTo","CivilianEntity","Terrain","coordinates","coordinatesInRenderOrder","islands","selector","island","seen","queue","current","neighbours","filter","includes","maxDistance","selectContiguousNeigbors","other","fromCache","open","slice","next","getIndexForXy","getAtXy","Boolean","sort","seed","generator","TerrainGenerator","generate","Array","_","OUT_OF_BOUNDS","sortedHeights","waterlineOffset","TerrainCoordinate","generateHelloWorldTerrain","Coordinate","coord","dz","isNaN","xy","MonochromeTile","coord2","TerrainCoordinateComponent","terrainCoordinate","svgMouseInteractionProps","isHovered","setIsHovered","translated","clone","undefined","onMouseEnter","onMouseLeave","opaquer","Random","seedrandom","double","arr","index","float","Symbol","average","values","valid","val","sum","max","detail","ceil","log","Float32Array","roughness","divide","half","scale","square","diamond","offset","ave","GuardEntity","Job","PatrolJob","waypoints","waypointIndex","destroyers","setTimeout","walkTo","LoiterJob","walkMinWait","walkMaxWait","walkChanceOnRoll","walkMaxDistance","steps","doTimeout","destinations","selectClosestNeigbors","arrayItem","repeat","generateEntities","walkableTiles","guard","getIslands","generatePatrolJob","doJob","worker","Scene","entities","play","generateRandom","generateHelloWorldEntities","ActiveEntityOverlayBoundary","ActiveEntityOverlayBody","Avatar","HorizontalLinkList","nav","HorizontalLinkListItem","EntityTextBadge","label","marginTop","group","groupEnd","ActiveEntityOverlay","ContextMenuContext","createContext","ContextMenuArrow","ContextMenuBoundary","ContextMenuBody","ContextMenuButton","button","ContextMenuFooter","ContextMenuManager","state","change","contents","ContextMenuContainer","contextMenuManager","useContext","managerState","setManagerState","Overlay","section","fancyTimeFormat","seconds","scene","Date","now","contextManager","WORLD_SIZE","setCenter","activeEntity","setActiveEntity","getCoordinatesInRenderOrder","event","preventDefault","stopPropagation","invoke","close","addEventListener","removeEventListener","Provider","value","fontSize","opacity","href","target","rel","Demos","exact","component","DemoCubes","App","SceneHelloWorld","ReactDOM","render","StrictMode","globalStyleRules","hashType","document","getElementById"],"mappings":"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","file":"static/js/main.a61bba11.chunk.js","sourcesContent":["import { CoordinateLike } from '../classes/Coordinate';\n\n//        z+,                height\n//        |        __ y+,    depth\n//        |     __/\n//        |  __/\n//    0,0 |_/\n//          \\__\n//             \\__\n//                \\__ x+,    width\n\nconst BASE_LENGTH = 32;\n\nexport type InGameDistance = number;\nexport type OnScreenDistance = number;\nexport type OnSreenAngle = number;\n\nclass Perspective {\n\tpublic readonly degrees: OnSreenAngle;\n\tpublic readonly tileSize: OnScreenDistance;\n\n\tprivate _cos: OnSreenAngle;\n\tprivate _sin: OnSreenAngle;\n\tprivate _tan: OnSreenAngle;\n\n\tconstructor(degrees: OnSreenAngle, tileSize: OnScreenDistance) {\n\t\tthis.degrees = degrees;\n\t\tthis.tileSize = tileSize;\n\n\t\tconst isometricAngle = degrees * (Math.PI / 180);\n\t\tthis._cos = Math.cos(isometricAngle);\n\t\tthis._sin = Math.sin(isometricAngle);\n\t\tthis._tan = Math.tan(isometricAngle);\n\t}\n\n\ttoPixels(\n\t\tx: InGameDistance,\n\t\ty: InGameDistance,\n\t\tz: InGameDistance\n\t): [OnScreenDistance, OnScreenDistance] {\n\t\tconst cartX = (x + y) * this._cos,\n\t\t\tcartY = (x - y) * this._sin;\n\n\t\tconst tileHeight = this.tileSize;\n\n\t\treturn [\n\t\t\tcartX * this.tileSize, // x\n\t\t\tcartY * this.tileSize - tileHeight * z // y\n\t\t];\n\t}\n\n\tprivate toCoords(\n\t\tcartX: InGameDistance,\n\t\tcartY: InGameDistance\n\t): [InGameDistance, InGameDistance, InGameDistance] {\n\t\tconst isoY = this._tan * cartX + cartY,\n\t\t\tisoX = (cartY - isoY) / -this._sin - isoY;\n\n\t\t// this is good so far, b should be rescaled for tile size. as\n\t\treturn [isoX / this.tileSize, isoY / this.tileSize, 0];\n\t}\n}\n\nexport const PERSPECTIVE = new Perspective(30, BASE_LENGTH);\n\nexport function distanceToCameraComparator(a: CoordinateLike, b: CoordinateLike) {\n\tconst dX = b.x - a.x;\n\tif (dX) {\n\t\treturn -dX;\n\t}\n\n\tconst dY = a.y - b.y;\n\tif (dY) {\n\t\treturn -dY;\n\t}\n\tconst dZ = b.z - a.z;\n\tif (dZ) {\n\t\treturn -dZ;\n\t}\n\treturn 0;\n}\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { CoordinateArray } from '../classes/Coordinate';\n\nimport { PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nexport const LinePath: FunctionComponent<\n\tOmit<React.SVGProps<SVGLineElement>, 'path'> & {\n\t\tpath: CoordinateArray[];\n\t}\n> = ({ path, stroke = 'black', strokeWidth = BORDER_WIDTH }) => {\n\tlet spatialCoordinates = path\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + BORDER_WIDTH));\n\n\treturn (\n\t\t<>\n\t\t\t{spatialCoordinates.reduce<ReactElement[]>(\n\t\t\t\t(lines, start, i, all) =>\n\t\t\t\t\ti\n\t\t\t\t\t\t? lines.concat([\n\t\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tx1={start[0]}\n\t\t\t\t\t\t\t\t\ty1={start[1]}\n\t\t\t\t\t\t\t\t\tx2={all[i - 1][0]}\n\t\t\t\t\t\t\t\t\ty2={all[i - 1][1]}\n\t\t\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\t\t\tstrokeWidth={String(strokeWidth)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  ])\n\t\t\t\t\t\t: lines,\n\t\t\t\t[]\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { useSpring } from '@react-spring/core';\nimport { animated } from '@react-spring/web';\nimport React, { FunctionComponent, useMemo } from 'react';\nimport { CoordinateArray, CoordinateLike } from '../classes/Coordinate';\nimport { SvgMouseInteractionProps } from '../types';\nimport { LinePath } from './LinePath';\nimport { InGameDistance, PERSPECTIVE } from './PERSPECTIVE';\n\nconst Crosshair: FunctionComponent<{ size: InGameDistance }> = ({ size = 4 }) => {\n\tconst lines: CoordinateArray[][] = [\n\t\t[\n\t\t\t// over the x axis\n\t\t\t[-1 * size, 0, 0],\n\t\t\t[size, 0, 0]\n\t\t],\n\t\t[\n\t\t\t// over the y axis\n\t\t\t[0, -1 * size, 0],\n\t\t\t[0, size, 0]\n\t\t],\n\t\t[\n\t\t\t// over the z axis\n\t\t\t[0, 0, -1 * size],\n\t\t\t[0, 0, size]\n\t\t]\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t{lines.map((points, i) => (\n\t\t\t\t<LinePath key={i} path={points} stroke={'rgba(0,0,0)'} strokeWidth={0.5} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport const Anchor: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tcrosshairSize?: InGameDistance;\n\t} & Partial<CoordinateLike>\n> = ({ x = 0, y = 0, z = 0, children, crosshairSize = 0 }) => {\n\tconst pixels = useMemo(() => PERSPECTIVE.toPixels(x, y, z), [x, y, z]);\n\n\treturn (\n\t\t<svg x={pixels[0]} y={pixels[1]} overflow={'visible'}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</svg>\n\t);\n};\n\nexport const MovingAnchor: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tmoveTo: CoordinateLike;\n\t\tmoveSpeed: number;\n\t\tonRest?: () => void;\n\t\tcrosshairSize?: InGameDistance;\n\t}\n> = ({ moveTo, moveSpeed, onRest, children, crosshairSize = 0, onClick }) => {\n\tconst [dx, dy] = useMemo(() => PERSPECTIVE.toPixels(moveTo.x, moveTo.y, moveTo.z), [moveTo]);\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tconst [ix, iy] = useMemo(() => [dx, dy], []);\n\n\t// if (isNaN(dx) || isNaN(dy)) {\n\t// \tdebugger;\n\t// }\n\tconst loc = useSpring({\n\t\tto: {\n\t\t\tx: dx,\n\t\t\ty: dy\n\t\t},\n\t\tconfig: {\n\t\t\tduration: moveSpeed\n\t\t},\n\t\tfrom: {\n\t\t\tx: ix,\n\t\t\ty: iy\n\t\t},\n\t\tonRest\n\t});\n\n\t// @TODO reuse <Anchor>\n\treturn (\n\t\t<animated.svg x={loc.x} y={loc.y} overflow={'visible'} onClick={onClick}>\n\t\t\t{crosshairSize ? <Crosshair size={crosshairSize} /> : null}\n\t\t\t{children}\n\t\t</animated.svg>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/nebula-282c34.dda754f6.png\";","import { css } from '@emotion/react';\nimport Color from 'color';\nimport nebulaTexture from './textures/nebula-282c34.png';\n\nexport const color: Record<string, Color> = {};\ncolor.white = Color('#fff');\ncolor.terrain = Color('#282c34');\ncolor.highlightedTerrain = color.terrain.lighten(1);\n\nconst styles = css`\n\t:root {\n\t\t/*\n\t\t\tTerrain with nothing special about it:\n\t\t*/\n\t\t--color-terrain-normal-fill: ${color.terrain.toString()};\n\t\t--color-terrain-highlight-outer-stroke: ${color.terrain\n\t\t\t.darken(0.3)\n\t\t\t.saturate(0.3)\n\t\t\t.toString()};\n\t\t--color-terrain-highlight-inner-stroke: ${color.terrain\n\t\t\t.lighten(0.4)\n\t\t\t.desaturate(0.8)\n\t\t\t.toString()};\n\n\t\t/*\n\t\t\tTerrain that is being hovered over with the mouse\n\t\t*/\n\t\t--color-terrain-highlight-fill: ${color.terrain.lighten(1).toString()};\n\t\t--color-terrain-highlight-outer-stroke: ${Color('#fff').toString()};\n\t\t--color-terrain-highlight-inner-stroke: ${color.terrain.mix(color.white, 0.3).toString()};\n\t}\n\n\tbody {\n\t\tbackground: #282c34 url(${nebulaTexture});\n\t}\n\n\tp {\n\t\tmargin: 0;\n\t}\n`;\n\nexport default styles;\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { CoordinateArray } from '../classes/Coordinate';\nimport { color } from '../styles';\nimport { SvgMouseInteractionProps } from '../types';\nimport { InGameDistance, PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 0;\n\nfunction coordsToPixels(coords: CoordinateArray[], borderWidth = BORDER_WIDTH) {\n\treturn coords\n\t\t.map(coordinate => PERSPECTIVE.toPixels(...coordinate))\n\t\t.map(cc => cc.map(c => c + borderWidth));\n}\n\nconst COORDINATE_CLOSEST_TO_CAMERA = PERSPECTIVE.toPixels(1, 0, 1).map(c => c + BORDER_WIDTH);\n\nlet BORDER_NODES = coordsToPixels([\n\t[1, 1, 0], // 0\n\t[1, 1, 1],\n\t[0, 1, 1], // 2\n\t[0, 0, 1],\n\t[0, 0, 0], // 4\n\t[1, 0, 0]\n]);\n\n// facing to the bottom left, aka -y\nlet XZ_NODES = coordsToPixels([\n\t[0, 0, 0],\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 0, 0]\n]);\n\n// facing to the bottom right, aka +x\nlet YZ_NODES = coordsToPixels([\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[1, 1, 1],\n\t[1, 0, 1]\n]);\n\n// facing top, aka +z\nlet XY_NODES = coordsToPixels([\n\t[0, 0, 1],\n\t[1, 0, 1],\n\t[1, 1, 1],\n\t[0, 1, 1]\n]);\n\nexport const MonochromeBox: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tsize?: number;\n\t\tstrokeLinecap?: 'round' | 'butt' | 'square' | 'inherit' | undefined;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t\tstrokeWidth?: InGameDistance;\n\t\tinnerStrokeWidth?: InGameDistance;\n\t\tinnerStroke?: Color;\n\t}\n> = ({\n\tsize = 1,\n\tfill = color.terrain,\n\tstrokeLinecap = 'round',\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = 1,\n\tinnerStroke = fill.lighten(0.4).desaturate(0.8),\n\tinnerStrokeWidth = strokeWidth,\n\t...gProps\n}) => {\n\tconst innerStrokeCss = innerStroke && innerStroke.string();\n\tconst strokeCss = stroke && stroke.string();\n\n\tconst style: Record<string, string> = {};\n\tif (gProps.onClick || gProps.onContextMenu) {\n\t\tstyle.cursor = 'pointer';\n\t}\n\n\treturn (\n\t\t<g {...gProps} style={style}>\n\t\t\t{fill && (\n\t\t\t\t<>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xz'}\n\t\t\t\t\t\tpoints={XZ_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'xy'}\n\t\t\t\t\t\tpoints={XY_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.lighten(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tkey={'yz'}\n\t\t\t\t\t\tpoints={YZ_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\t\t\tfill={fill.darken(0.2).string()}\n\t\t\t\t\t\tstrokeWidth={0}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{innerStroke && (\n\t\t\t\t<>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'x-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[3][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[3][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'y-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[1][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[1][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={'z-bar'}\n\t\t\t\t\t\tx1={COORDINATE_CLOSEST_TO_CAMERA[0] * size}\n\t\t\t\t\t\ty1={COORDINATE_CLOSEST_TO_CAMERA[1] * size}\n\t\t\t\t\t\tx2={BORDER_NODES[5][0] * size}\n\t\t\t\t\t\ty2={BORDER_NODES[5][1] * size}\n\t\t\t\t\t\tstroke={innerStrokeCss}\n\t\t\t\t\t\tstrokeWidth={innerStrokeWidth}\n\t\t\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t<polygon\n\t\t\t\tkey={'outline'}\n\t\t\t\tpoints={BORDER_NODES.map(c => c.map(cc => cc * size).join(',')).join(' ')}\n\t\t\t\tstroke={strokeCss}\n\t\t\t\tfill={'transparent'}\n\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\tstrokeLinecap={strokeLinecap}\n\t\t\t/>\n\t\t</g>\n\t);\n};\n","import styled from '@emotion/styled';\nimport React, { FunctionComponent, ReactElement, useMemo } from 'react';\nimport { CoordinateLike } from '../classes/Coordinate';\nimport { InGameDistance, PERSPECTIVE } from './PERSPECTIVE';\n\n// The pythagoras distance (1/sqrt(2)) with a little tweaking for better looks\nconst PIXEL_FRIENDLY_PYTHAGORAS = 1 / Math.pow(2, 1 / 2); //0.8;\n\nfunction mathRoundMaybe(n: number) {\n\t// For debugging only. Adjust to taste.\n\n\treturn Math.round(n);\n\t// return n;\n}\n\n// Force the type to AnimatedComponent to avoid a weird TS inference bug\n//\nexport const AbsolutelyPositionedContainer = styled.div`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\twidth: 0;\n\theight: 0;\n\ttransition: transform 5s;\n\t> * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n`;\n\ntype ViewportComponentProps = {\n\tzoom?: number;\n\tcenter?: CoordinateLike;\n\toverlay?: ReactElement;\n};\n\nexport const Viewport: FunctionComponent<ViewportComponentProps> = ({\n\toverlay,\n\tcenter = { x: 0, y: 0, z: 0 },\n\tzoom = 1,\n\tchildren\n}) => {\n\tconst [translateX, translateY] = useMemo(\n\t\t() =>\n\t\t\tPERSPECTIVE.toPixels(center.x, center.y, center.z).map(\n\t\t\t\t(n, i) => mathRoundMaybe(-n) + (i ? 0 : 0.5)\n\t\t\t),\n\t\t[center]\n\t);\n\n\tconst springStyles =\n\t\t//useSpring({\n\t\t// \tconfig: config.molasses,\n\t\t// \tto:\n\t\t{\n\t\t\ttransform: `translate(\n\t\t\t\t${translateX * zoom}px,\n\t\t\t\t${translateY * zoom}px\n\t\t\t)`\n\t\t};\n\t// });\n\n\treturn (\n\t\t<AbsolutelyPositionedContainer style={springStyles}>\n\t\t\t<ViewportSvgContainer zoom={zoom} children={children} />\n\t\t\t{overlay}\n\t\t</AbsolutelyPositionedContainer>\n\t);\n};\n\nexport const ViewportSvgContainer: FunctionComponent<\n\t{\n\t\tzoom?: number;\n\t} & React.SVGProps<SVGSVGElement>\n> = ({ zoom = 1, ...rest }) => (\n\t<svg\n\t\twidth=\"1px\"\n\t\theight=\"1px\"\n\t\toverflow=\"visible\"\n\t\tshapeRendering=\"geometricPrecision\"\n\t\tviewBox={[0, 0, 1 / zoom, 1 / zoom].join(' ')}\n\t\t{...rest}\n\t/>\n);\n\nconst NoAxis = styled.div<{ zoom?: number }>`\n\t--scale-val: ${({ zoom = 1 }) => zoom};\n\n\tposition: absolute;\n\ttransform-origin: top left;\n\ttransform: scale(var(--scale-val));\n`;\n\nconst YAxis = styled(NoAxis)`\n\ttransform: skewY(-${PERSPECTIVE.degrees}deg)\n\t\tscale(calc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)), var(--scale-val));\n`;\n\nconst ZAxis = styled(NoAxis)`\n\ttransform: rotate(-${PERSPECTIVE.degrees}deg) skewX(${PERSPECTIVE.degrees}deg)\n\t\tscale(\n\t\t\tcalc(${Math.sqrt(PIXEL_FRIENDLY_PYTHAGORAS)} * var(--scale-val)),\n\t\t\tcalc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val))\n\t\t);\n`;\n\nconst XAxis = styled(NoAxis)`\n\ttransform: skewY(${PERSPECTIVE.degrees}deg)\n\t\tscale(calc(${PIXEL_FRIENDLY_PYTHAGORAS} * var(--scale-val)), var(--scale-val));\n`;\n\nexport const ViewportHtmlContainer: FunctionComponent<{\n\taxis?: 'x' | 'y' | 'z';\n\twidth: InGameDistance;\n\theight: InGameDistance;\n\tzoom?: number;\n\tlocation: CoordinateLike;\n}> = ({ location, zoom = 1, axis, width, height, children }) => {\n\tconst { x, y, z } = location,\n\t\t// @TODO use css variable to zoom instead of JS\n\t\t[left, top] = PERSPECTIVE.toPixels(x, y, z).map(n => mathRoundMaybe(n * zoom));\n\t// @TODO use css variable to zoom instead of JS\n\tconst [pixelWidth] = PERSPECTIVE.toPixels(0, width, height).map(n => mathRoundMaybe(n * zoom));\n\tconst Axis = axis === 'y' ? YAxis : axis === 'x' ? XAxis : axis === 'z' ? ZAxis : NoAxis;\n\treturn (\n\t\t<Axis\n\t\t\tzoom={zoom}\n\t\t\tstyle={{\n\t\t\t\tleft: mathRoundMaybe(left),\n\t\t\t\ttop: mathRoundMaybe(top),\n\t\t\t\twidth:\n\t\t\t\t\tmathRoundMaybe(axis ? pixelWidth / PIXEL_FRIENDLY_PYTHAGORAS : pixelWidth) +\n\t\t\t\t\t'px',\n\t\t\t\theight:\n\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t(height * PERSPECTIVE.tileSize) /\n\t\t\t\t\t\t\t(axis === 'z' ? PIXEL_FRIENDLY_PYTHAGORAS : 1)\n\t\t\t\t\t) + 'px'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</Axis>\n\t);\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div<{ height?: number }>`\n\tposition: relative;\n\theight: ${({ height = 180 }) => `${height}px`};\n\tbackground-image: linear-gradient(\n\t\t45deg,\n\t\trgba(255, 255, 255, 0.02) 25%,\n\t\trgba(0, 0, 0, 0.02) 25%,\n\t\trgba(0, 0, 0, 0.02) 50%,\n\t\trgba(255, 255, 255, 0.02) 50%,\n\t\trgba(255, 255, 255, 0.02) 75%,\n\t\trgba(0, 0, 0, 0.02) 75%,\n\t\trgba(0, 0, 0, 0.02) 100%\n\t);\n\tbackground-size: 56.57px 56.57px;\n\tmargin-bottom: 1em;\n`;\n","import Color from 'color';\nimport { FunctionComponent } from 'react';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { Viewport } from '../space/Viewport';\nimport { Backdrop } from './scaffolding';\n\nconst Demo: FunctionComponent = () => (\n\t<>\n\t\t<Backdrop>\n\t\t\t<Viewport zoom={1} center={{ x: 0.5, y: 0.5, z: 0.5 }}>\n\t\t\t\t<Anchor x={-2} y={-2} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={0} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox innerStroke={Color('#630a0a7d')} fill={Color('#960202')} />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={2} z={0}>\n\t\t\t\t\t<MonochromeBox\n\t\t\t\t\t\tfill={Color('#ffffff7f')}\n\t\t\t\t\t\tonClick={() => window.alert('Clicky click!')}\n\t\t\t\t\t/>\n\t\t\t\t</Anchor>\n\t\t\t</Viewport>\n\t\t</Backdrop>\n\t\t<Backdrop>\n\t\t\t<Viewport center={{ x: 1, y: 0, z: 0.5 }}>\n\t\t\t\t<Anchor x={0} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={1} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={0} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t\t<Anchor x={2} y={-1} z={0}>\n\t\t\t\t\t<MonochromeBox />\n\t\t\t\t</Anchor>\n\t\t\t</Viewport>\n\t\t</Backdrop>\n\t</>\n);\n\nexport default Demo;\n","type BinaryHeapScorer<P> = (node: P) => number;\n\nexport class BinaryHeap<P> {\n\tscoreFunction: BinaryHeapScorer<P>;\n\tcontent: P[] = [];\n\tconstructor(scoreFunction: BinaryHeapScorer<P>) {\n\t\tthis.content = [];\n\t\tthis.scoreFunction = scoreFunction;\n\t}\n\tpush(element: P) {\n\t\t// Add the new element to the end of the array.\n\t\tthis.content.push(element);\n\n\t\t// Allow it to sink down.\n\t\tthis.sinkDown(this.content.length - 1);\n\t}\n\tpop() {\n\t\t// Store the first element so we can return it later.\n\t\tconst result = this.content[0];\n\n\t\t// Get the element at the end of the array.\n\t\tconst end = this.content.pop();\n\t\tif (!end) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// If there are any elements left, put the end element at the\n\t\t// start, and let it bubble up.\n\t\tif (this.content.length > 0) {\n\t\t\tthis.content[0] = end;\n\t\t\tthis.bubbleUp(0);\n\t\t}\n\t\treturn result;\n\t}\n\tremove(node: P) {\n\t\tconst i = this.content.indexOf(node);\n\n\t\t// When it is found, the process seen in 'pop' is repeated\n\t\t// to fill up the hole.\n\t\tconst end = this.content.pop();\n\t\tif (!end) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (i !== this.content.length - 1) {\n\t\t\tthis.content[i] = end;\n\n\t\t\tif (this.scoreFunction(end) < this.scoreFunction(node)) {\n\t\t\t\tthis.sinkDown(i);\n\t\t\t} else {\n\t\t\t\tthis.bubbleUp(i);\n\t\t\t}\n\t\t}\n\t}\n\tsize() {\n\t\treturn this.content.length;\n\t}\n\trescoreElement(node: P) {\n\t\tthis.sinkDown(this.content.indexOf(node));\n\t}\n\tsinkDown(n: number) {\n\t\t// Fetch the element that has to be sunk.\n\t\tconst element = this.content[n];\n\n\t\t// When at 0, an element can not sink any further.\n\t\twhile (n > 0) {\n\t\t\t// Compute the parent element's index, and fetch it.\n\t\t\tconst parentN = ((n + 1) >> 1) - 1;\n\t\t\tconst parent = this.content[parentN];\n\t\t\t// Swap the elements if the parent is greater.\n\t\t\tif (this.scoreFunction(element) < this.scoreFunction(parent)) {\n\t\t\t\tthis.content[parentN] = element;\n\t\t\t\tthis.content[n] = parent;\n\t\t\t\t// Update 'n' to continue at the new position.\n\t\t\t\tn = parentN;\n\t\t\t}\n\t\t\t// Found a parent that is less, no need to sink any further.\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tbubbleUp(n: number) {\n\t\t// Look up the target element and its score.\n\t\tconst length = this.content.length;\n\t\tconst element = this.content[n];\n\t\tconst elemScore = this.scoreFunction(element);\n\n\t\twhile (true) {\n\t\t\t// Compute the indices of the child elements.\n\t\t\tconst child2N = (n + 1) << 1;\n\t\t\tconst child1N = child2N - 1;\n\t\t\t// This is used to store the new position of the element, if any.\n\t\t\tlet swap = null;\n\t\t\tlet child1Score;\n\t\t\t// If the first child exists (is inside the array)...\n\t\t\tif (child1N < length) {\n\t\t\t\t// Look it up and compute its score.\n\t\t\t\tconst child1 = this.content[child1N];\n\t\t\t\tchild1Score = this.scoreFunction(child1);\n\n\t\t\t\t// If the score is less than our element's, we need to swap.\n\t\t\t\tif (child1Score < elemScore) {\n\t\t\t\t\tswap = child1N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Do the same checks for the other child.\n\t\t\tif (child2N < length) {\n\t\t\t\tconst child2 = this.content[child2N];\n\t\t\t\tconst child2Score = this.scoreFunction(child2);\n\t\t\t\t// child1Score is number or undefined. To satisfy TS (for the original code) it is coerced to number,\n\t\t\t\t// but I'm not sure why it wouldn't stay undefined, really.\n\t\t\t\tif (child2Score < (swap === null ? elemScore : (child1Score as number))) {\n\t\t\t\t\tswap = child2N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the element needs to be moved, swap it, and continue.\n\t\t\tif (swap !== null) {\n\t\t\t\tthis.content[n] = this.content[swap];\n\t\t\t\tthis.content[swap] = element;\n\t\t\t\tn = swap;\n\t\t\t}\n\t\t\t// Otherwise, we are done.\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n","// An adaptation of:\n//   javascript-astar 0.4.1\n//   http://github.com/bgrins/javascript-astar\n//   Freely distributable under the MIT License.\n//   Implements the astar search algorithm in javascript using a Binary Heap.\n//   Includes Binary Heap (with modifications) from Marijn Haverbeke.\n//   http://eloquentjavascript.net/appendix2.html\n\nimport { BinaryHeap } from '../util/BinaryHeap';\nimport { Terrain } from './Terrain';\nimport { TerrainCoordinate } from './TerrainCoordinate';\n\n// See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\ntype HeuristicScorer = (a: TerrainCoordinate, b: TerrainCoordinate) => number;\n\n/**\n * Perform an A* Search on a graph given a start and end node.\n */\n\ntype HeuristicReport = {\n\tcoordinate: TerrainCoordinate;\n\th: number;\n\tg: number;\n\tf: number;\n\tparent: HeuristicReport | null;\n\tclosed: Boolean;\n\tvisited: boolean;\n};\n\ntype PathOptions = {\n\tclosest: Boolean;\n\theuristic?: HeuristicScorer;\n};\n\nconst MANHATTAN: HeuristicScorer = (pos0, pos1) => {\n\tconst d1 = Math.abs(pos1.x - pos0.x);\n\tconst d2 = Math.abs(pos1.y - pos0.y);\n\treturn d1 + d2;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst DIAGONAL: HeuristicScorer = (pos0, pos1) => {\n\tconst D = 1;\n\tconst D2 = Math.sqrt(2);\n\tconst d1 = Math.abs(pos1.x - pos0.x);\n\tconst d2 = Math.abs(pos1.y - pos0.y);\n\treturn D * (d1 + d2) + (D2 - 2 * D) * Math.min(d1, d2);\n};\n\nfunction getVisitationCost(terrain: Terrain, from: TerrainCoordinate, neighbor: TerrainCoordinate) {\n\treturn 1;\n}\n\nexport class Path {\n\tprivate readonly terrain: Terrain;\n\tprivate readonly options: PathOptions;\n\tprivate readonly cache: Map<TerrainCoordinate, HeuristicReport>;\n\tprivate readonly heap: BinaryHeap<TerrainCoordinate>;\n\tprivate readonly heuristic: HeuristicScorer;\n\n\tconstructor(graph: Terrain, options: PathOptions) {\n\t\tthis.terrain = graph;\n\t\tthis.options = options;\n\n\t\tthis.cache = new Map<TerrainCoordinate, HeuristicReport>();\n\n\t\tthis.heap = new BinaryHeap<TerrainCoordinate>(node => {\n\t\t\tconst heuristic = this.cache.get(node);\n\t\t\tif (!heuristic) {\n\t\t\t\tthrow new Error('This is weird');\n\t\t\t}\n\t\t\treturn heuristic.f;\n\t\t});\n\n\t\tthis.heuristic = MANHATTAN;\n\t}\n\n\tfind(start: TerrainCoordinate, end: TerrainCoordinate) {\n\t\tlet closestNode = start; // set the start node to be the closest if required\n\t\tlet closestNodeHeuristics: HeuristicReport = {\n\t\t\tcoordinate: closestNode,\n\t\t\th: this.heuristic(start, end),\n\t\t\tg: 0,\n\t\t\tf: 0,\n\n\t\t\tparent: null,\n\n\t\t\t// Unsure what the default value should be\n\t\t\tclosed: true,\n\t\t\tvisited: true\n\t\t};\n\n\t\t// At this stage `start` is also `closestNode`, so lets associate those heuristics\n\t\tthis.cache.set(start, closestNodeHeuristics);\n\n\t\tthis.heap.push(start);\n\n\t\twhile (this.heap.size() > 0) {\n\t\t\t// Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n\t\t\tconst currentNode = this.heap.pop();\n\t\t\tconst currentNodeHeuristics = this.cache.get(currentNode);\n\t\t\tif (!currentNodeHeuristics) {\n\t\t\t\tthrow new Error('Somehow opening a node that has no heuristic data');\n\t\t\t}\n\n\t\t\t// End case -- result has been found, return the traced path.\n\t\t\tif (currentNode.equals(end)) {\n\t\t\t\treturn this.tracePath(currentNodeHeuristics);\n\t\t\t}\n\n\t\t\t// Normal case -- move currentNode from open to closed, process each of its neighbors.\n\t\t\tcurrentNodeHeuristics.closed = true;\n\n\t\t\t// Find all neighbors for the current node.\n\t\t\tconst neighbors = this.terrain.getNeighbors(currentNode);\n\n\t\t\tfor (let i = 0, il = neighbors.length; i < il; ++i) {\n\t\t\t\tconst neighbor = neighbors[i];\n\t\t\t\tlet neighborHeuristics = this.cache.get(neighbor);\n\n\t\t\t\tif (neighborHeuristics?.closed || !neighbor.isLand()) {\n\t\t\t\t\t// Not a valid node to process, skip to next neighbor.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// The g score is the shortest distance from start to current node.\n\t\t\t\t// We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n\t\t\t\tconst gScore =\n\t\t\t\t\tcurrentNodeHeuristics.g +\n\t\t\t\t\tgetVisitationCost(this.terrain, currentNode, neighbor);\n\t\t\t\tconst beenVisited = !!neighborHeuristics;\n\n\t\t\t\tif (!beenVisited || (neighborHeuristics && gScore < neighborHeuristics.g)) {\n\t\t\t\t\tconst hScore = this.heuristic(neighbor, end);\n\t\t\t\t\t// Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n\t\t\t\t\tneighborHeuristics = {\n\t\t\t\t\t\tcoordinate: neighbor,\n\t\t\t\t\t\th: hScore,\n\t\t\t\t\t\tg: gScore,\n\t\t\t\t\t\tf: gScore + hScore,\n\t\t\t\t\t\tparent: currentNodeHeuristics,\n\t\t\t\t\t\tclosed: true,\n\t\t\t\t\t\tvisited: true\n\t\t\t\t\t};\n\t\t\t\t\tthis.cache.set(neighbor, neighborHeuristics as HeuristicReport);\n\n\t\t\t\t\tif (this.options.closest) {\n\t\t\t\t\t\t// If the neighbour is closer than the current closestNode or if it's equally close but has\n\t\t\t\t\t\t// a cheaper path than the current closest node then it becomes the closest node\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tneighborHeuristics.h < closestNodeHeuristics.h ||\n\t\t\t\t\t\t\t(neighborHeuristics.h === closestNodeHeuristics.h &&\n\t\t\t\t\t\t\t\tneighborHeuristics.g < closestNodeHeuristics.g)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tclosestNode = neighbor;\n\t\t\t\t\t\t\tclosestNodeHeuristics = neighborHeuristics;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!beenVisited) {\n\t\t\t\t\t\t// Pushing to heap will put it in proper place based on the 'f' value.\n\t\t\t\t\t\tthis.heap.push(neighbor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Already seen the node, but since it has been rescored we need to reorder it in the heap\n\t\t\t\t\t\tthis.heap.rescoreElement(neighbor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.closest) {\n\t\t\treturn this.tracePath(closestNodeHeuristics);\n\t\t}\n\n\t\t// No result was found - empty array signifies failure to find path.\n\t\tconsole.warn('-- No path --');\n\t\treturn [];\n\t}\n\n\ttracePath(heuristicReport: HeuristicReport) {\n\t\tlet curr = heuristicReport;\n\t\tconst path = [];\n\t\twhile (curr.parent) {\n\t\t\tpath.unshift(curr);\n\t\t\tcurr = curr.parent;\n\t\t}\n\t\treturn path.map(heuristicReport => heuristicReport.coordinate);\n\t}\n}\n","const FIRST_NAMES_M = `\n\tPaul, Paolo, Pablo, Pavel, Pasha, Pau, Paulo, Pol, Pavlo, Paavo, Pali, Pal, Paulin, Pava, Påvel, Paulino, Pawel,\n\tPaavali, Pauel, Pavlos, Pavlusha, Poul, Pusha, Pashenka, Pavlík, Poll, Pól, Pavlousek, Pawelek, Pål, Pavilcek, Pál\n`\n\t.replace(/\\t|\\n/g, '')\n\t.split(',')\n\t.map(name => name.trim());\n\nconst FIRST_NAMES_F = `\n\tMia, Mare, Miriam, Mary, Mara, Molly, Maren, Mariah, Marisol, Maria, Moira, Polly, Marie, Mariana, Marilyn, Malia,\n\tMari, Manon, Marissa, Mariam, Marion, Ria, Mariella, Milou, Mitzi, Marielle, Maribel, Maura, Mamie, Maureen, Mariel,\n\tMarisa, Maryam, Mairi, Malou, Marietta, Maija, Maire, Maritza, Maricela, Marya, Marika, Isamar, My, Mariska, Maryse,\n\tMariela, Maira, Marita, Mariette,\n`\n\t.replace(/\\t|\\n/g, '')\n\t.split(',')\n\t.map(name => name.trim());\n\nexport function getRandomMaleFirstName() {\n\treturn FIRST_NAMES_M[Math.floor(Math.random() * FIRST_NAMES_M.length)];\n}\nexport function getRandomFemaleFirstName() {\n\treturn FIRST_NAMES_F[Math.floor(Math.random() * FIRST_NAMES_F.length)];\n}\n\nexport function getRandomFullName() {}\n","import { DependencyList, useCallback, useEffect } from 'react';\n\ntype EventHandler<EventData extends Array<unknown>> = (...args: EventData) => void;\ntype EventDestroyer = () => void;\n\n/**\n *  Consitutes one named event type\n */\nexport class Event<EventData extends Array<unknown> = []> {\n\tprivate listeners: EventHandler<EventData>[] = [];\n\n\ton(callback: EventHandler<EventData>) {\n\t\tthis.listeners.push(callback);\n\n\t\treturn () => {\n\t\t\tthis.listeners.splice(this.listeners.indexOf(callback));\n\t\t};\n\t}\n\n\temit(...args: EventData) {\n\t\tthis.listeners.forEach(callback => callback(...args));\n\t}\n\n\tclear() {\n\t\tthis.listeners = [];\n\t}\n}\n\n/**\n * A conventience wrapper for `useEffect` specifically for listening to a list of events, and unlistening when the\n * component is unmounted.\n *\n * For example:\n *\n *   useEventListeners(() => [\n *       entity.moveStart.on(coordinate => animatePosition(coordinate)),\n *       entity.moveRest.on(coordinate => console.log('Done'))\n *   ], [entity.moveStart, entity.moveRest]);\n */\nexport const useEventListeners = (callback: () => EventDestroyer[], deps: DependencyList = []) => {\n\tconst cb = useCallback(\n\t\t() => {\n\t\t\tconst eventDestroyers = callback();\n\t\t\treturn () => eventDestroyers.forEach(d => d());\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tdeps\n\t);\n\treturn useEffect(cb, [cb]);\n};\n","import { FunctionComponent } from 'react';\nimport { TerrainCoordinate } from '../classes/TerrainCoordinate';\nimport { Job } from '../jobs/Job';\nconst noop = () => {};\n\nexport class Entity {\n\tpublic readonly id: string;\n\n\t/**\n\t * The React SVG component that consitutes this entity. Is expected to be defined in a class\n\t * that extends `Entity`.\n\t */\n\tpublic readonly Component: FunctionComponent = () => {\n\t\treturn null;\n\t};\n\n\tpublic location: TerrainCoordinate;\n\n\t/**\n\t * The set of behaviour/tasks given to this entity.\n\t */\n\tpublic job?: Job;\n\n\tconstructor(id: string, location: TerrainCoordinate) {\n\t\tthis.id = id;\n\t\tthis.location = location;\n\t}\n\n\tpublic get label(): string {\n\t\tthrow new Error(`${this.constructor.name} ${this.id}`);\n\t}\n\n\tpublic play() {\n\t\treturn this.job?.start() || noop;\n\t}\n\n\tpublic doJob(job: Job) {\n\t\tthis.job = job;\n\n\t\t// @TODO maybe some events\n\t}\n}\n","import { FunctionComponent, useCallback, useState } from 'react';\nimport { Path } from '../classes/Path';\nimport { TerrainCoordinate } from '../classes/TerrainCoordinate';\nimport { getRandomFemaleFirstName, getRandomMaleFirstName } from '../constants/names';\nimport { MovingAnchor } from '../space/Anchor';\nimport { Event, useEventListeners } from '../util/Event';\nimport { Entity } from './Entity';\n\ntype OnEntityClick = (event: React.MouseEvent<SVGElement, MouseEvent>) => void;\n\nexport class PersonEntity extends Entity {\n\t// The event that the person starts walking a path\n\tpublic readonly pathStart = new Event<[]>();\n\n\t// The event that the person finishes a path, according to react-spring's timing\n\tpublic readonly pathEnd = new Event<[]>();\n\n\t// The person started one step\n\tpublic readonly pathStepStart = new Event<[TerrainCoordinate]>();\n\t\n\t// The person started finished one step, according to react-spring's timing\n\tpublic readonly pathStepEnd = new Event<[TerrainCoordinate]>();\n\n\tpublic readonly passport: { firstName: string };\n\n\tconstructor(id: string, location: TerrainCoordinate) {\n\t\tsuper(id, location);\n\n\t\t// Movement handling\n\t\tthis.pathStepEnd.on(loc => {\n\t\t\tthis.location = loc;\n\t\t});\n\n\t\tconst feminine = Math.random() < 0.5;\n\t\tthis.passport = {\n\t\t\tfirstName: feminine ? getRandomFemaleFirstName() : getRandomMaleFirstName()\n\t\t};\n\t}\n\n\t// Calculate a path and emit animations to walk it the whole way. `this.location` is updated in between each step\n\tpublic walkTo(destination: TerrainCoordinate) {\n\t\tif (!this.location.terrain) {\n\t\t\tthrow new Error(`Entity \"${this.id}\" is trying to path in a detached coordinate`);\n\t\t}\n\t\tconst path = new Path(this.location.terrain, { closest: true }).find(\n\t\t\tthis.location,\n\t\t\tdestination\n\t\t);\n\n\t\t// console.log(`${this.location}-->${destination}: ${path.length}`);\n\n\t\tif (!path.length) {\n\t\t\tconsole.warn('Path was zero steps long, finishing early.', this);\n\t\t\tthis.pathEnd.emit();\n\t\t\treturn;\n\t\t}\n\t\tlet unlisten = this.pathStepEnd.on(() => {\n\t\t\tconst nextStep = path.shift();\n\n\t\t\tif (!nextStep) {\n\t\t\t\tthis.pathEnd.emit();\n\t\t\t\tunlisten();\n\t\t\t} else {\n\t\t\t\tthis.doPathStep(nextStep);\n\t\t\t}\n\t\t});\n\n\t\tthis.doPathStep(path.shift() as TerrainCoordinate);\n\t}\n\t/**\n\t * Move entity directly to a coordinate. Does not consider accessibility or closeness.\n\t */\n\tpublic doPathStep(coordinate: TerrainCoordinate) {\n\t\tif (coordinate.hasNaN()) {\n\t\t\tdebugger;\n\t\t}\n\t\tthis.pathStepStart.emit(coordinate);\n\t}\n\n\tpublic get label(): string {\n\t\treturn this.passport.firstName;\n\t}\n\n\tComponent: FunctionComponent = () => {\n\t\treturn <circle cx={0} cy={0} r=\"5\" fill=\"white\" />;\n\t};\n}\n\n/**\n * A component that automatically transitions the entity component as per its move instructions\n */\nexport const PersonEntityComponent: FunctionComponent<{\n\tentity: PersonEntity;\n\tonClick?: OnEntityClick;\n}> = ({ entity, onClick }) => {\n\tconst [{ destination, duration }, animatePosition] = useState({\n\t\tdestination: entity.location,\n\t\tduration: 0\n\t});\n\n\tuseEventListeners(\n\t\t() => [\n\t\t\t// Listen for the entity moveStart order;\n\t\t\tentity.pathStepStart.on(destination =>\n\t\t\t\tanimatePosition({\n\t\t\t\t\tdestination: destination,\n\t\t\t\t\tduration: entity.location.euclideanDistanceTo(destination) * 500\n\t\t\t\t})\n\t\t\t)\n\t\t],\n\t\t[entity.pathStepStart]\n\t);\n\n\tconst onRest = useCallback(() => entity.pathStepEnd.emit(destination), [\n\t\tentity.pathStepEnd,\n\t\tdestination\n\t]);\n\n\treturn (\n\t\t<MovingAnchor moveTo={destination} moveSpeed={duration} onRest={onRest} onClick={onClick}>\n\t\t\t<entity.Component />\n\t\t</MovingAnchor>\n\t);\n};\n","import { PersonEntity } from './PersonEntity';\n\nexport class CivilianEntity extends PersonEntity {\n\tget label(): string {\n\t\treturn `${this.passport.firstName}`;\n\t}\n}\n","import { distanceToCameraComparator } from '../space/PERSPECTIVE';\nimport { generateTerrain as generateHelloWorldTerrain } from '../generators/hello-world';\nimport { TerrainCoordinate } from './TerrainCoordinate';\ntype IslandFilter = (coordinate: TerrainCoordinate) => boolean;\nexport class Terrain {\n\tpublic readonly coordinates: TerrainCoordinate[];\n\tprivate coordinatesInRenderOrder: TerrainCoordinate[] | null = null;\n\tprivate readonly size: number;\n\n\tprivate islands: Map<IslandFilter, TerrainCoordinate[][]> = new Map();\n\n\tconstructor(coordinates: TerrainCoordinate[]) {\n\t\tthis.coordinates = coordinates;\n\t\tthis.coordinates.forEach(coordinate => (coordinate.terrain = this));\n\n\t\tthis.size = Math.sqrt(this.coordinates.length);\n\t}\n\n\tprivate getIndexForXy(x: number, y: number) {\n\t\treturn this.size * y + x;\n\t}\n\n\t/**\n\t * Select all neighbouring points that connect to one another, like an island.\n\t */\n\tpublic selectContiguousNeigbors(\n\t\tstart: TerrainCoordinate,\n\t\tselector: IslandFilter = c => c.isLand()\n\t) {\n\t\tconst island: TerrainCoordinate[] = [];\n\t\tconst seen: TerrainCoordinate[] = [];\n\t\tconst queue: TerrainCoordinate[] = [start];\n\n\t\twhile (queue.length) {\n\t\t\tconst current = queue.shift() as TerrainCoordinate;\n\t\t\tisland.push(current);\n\n\t\t\tconst neighbours = this.getNeighbors(current).filter(n => !seen.includes(n));\n\t\t\tseen.splice(0, 0, current, ...neighbours);\n\t\t\tqueue.splice(0, 0, ...neighbours.filter(selector));\n\t\t}\n\t\treturn island;\n\t}\n\n\tpublic selectClosestNeigbors(start: TerrainCoordinate, maxDistance: number) {\n\t\treturn this.selectContiguousNeigbors(\n\t\t\tstart,\n\t\t\tother => other.isLand() && start.euclideanDistanceTo(other) <= maxDistance\n\t\t);\n\t}\n\n\t/**\n\t * Get all distinct contiguous groups of cells\n\t */\n\tpublic getIslands(selector: (coordinate: TerrainCoordinate) => boolean = c => c.isLand()) {\n\t\tconst fromCache = this.islands.get(selector);\n\t\tif (fromCache) {\n\t\t\treturn fromCache;\n\t\t}\n\n\t\tlet open = this.coordinates.slice();\n\t\tconst islands = [];\n\t\twhile (open.length) {\n\t\t\tconst next = open.shift() as TerrainCoordinate;\n\t\t\tif (!selector(next)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst island = this.selectContiguousNeigbors(next, selector);\n\t\t\topen = open.filter(n => !island.includes(n));\n\t\t\tislands.push(island);\n\t\t}\n\n\t\tthis.islands.set(selector, islands);\n\t\treturn islands;\n\t}\n\n\tpublic getAtXy(x: number, y: number) {\n\t\tif (x < 0 || x > this.size - 1 || y < 0 || y > this.size - 1) {\n\t\t\t// Out of bounds\n\t\t\treturn;\n\t\t}\n\t\treturn this.coordinates[this.getIndexForXy(x, y)];\n\t}\n\n\tpublic getNeighbors(center: TerrainCoordinate) {\n\t\treturn [\n\t\t\t[-1, 0],\n\t\t\t[1, 0],\n\t\t\t[0, -1],\n\t\t\t[0, 1]\n\t\t\t// Diagonal neigbors not included\n\t\t]\n\t\t\t.map(([dx, dy]) => this.getAtXy(center.x + dx, center.y + dy))\n\t\t\t.filter(Boolean) as TerrainCoordinate[];\n\t}\n\n\tpublic getCoordinatesInRenderOrder() {\n\t\tif (!this.coordinatesInRenderOrder) {\n\t\t\tthis.coordinatesInRenderOrder = this.coordinates\n\t\t\t\t.slice()\n\t\t\t\t.sort(distanceToCameraComparator);\n\t\t}\n\t\treturn this.coordinatesInRenderOrder;\n\t}\n\n\tstatic generateRandom(seed: string, size: number) {\n\t\treturn generateHelloWorldTerrain(seed, size);\n\t}\n}\n","import { CivilianEntity } from '../entities/CivilianEntity';\nimport { Terrain } from '../classes/Terrain';\nimport { TerrainCoordinate } from '../classes/TerrainCoordinate';\nimport { OUT_OF_BOUNDS, TerrainGenerator } from '../classes/TerrainGenerator';\n\nimport { GuardEntity } from '../entities/GuardEntity';\nimport { PersonEntity } from '../entities/PersonEntity';\nimport { PatrolJob } from '../jobs/PatrolJob';\nimport { Random } from '../util/Random';\nimport { LoiterJob } from '../jobs/LoiterJob';\n\nfunction repeat<P>(n: number, cb: (i: number) => P): P[] {\n\treturn Array.from(new Array(n)).map((_, i) => cb(i));\n}\n\nconst RATIO_WATER_OF_TOTAL = 0.25;\n\nexport function generateTerrain(seed: string, size: number) {\n\tconst generator = new TerrainGenerator(seed, size);\n\n\tgenerator.generate(1);\n\n\t// For clarity, the terrain must currently always be square\n\t// @TODO fix that some time.\n\tconst width = size,\n\t\theight = size;\n\n\tconst coordinates = Array.from(new Array(width * height)).map<[number, number, number]>(\n\t\t(_, i) => {\n\t\t\tconst x = i % width;\n\t\t\tconst y = Math.floor(i / width);\n\t\t\tconst z = generator.get(x, y);\n\t\t\tif (z === OUT_OF_BOUNDS) {\n\t\t\t\tthrow new Error(`Out of bounds @ ${x}, ${y}`);\n\t\t\t}\n\t\t\treturn [x, y, (2 * (z as number)) / size];\n\t\t}\n\t);\n\n\tconst sortedHeights = coordinates.map(coordinate => coordinate[2]).sort();\n\tconst waterlineOffset = sortedHeights[Math.floor(sortedHeights.length * RATIO_WATER_OF_TOTAL)];\n\treturn new Terrain(\n\t\tcoordinates.map(([x, y, z]) => new TerrainCoordinate(x, y, z - waterlineOffset))\n\t);\n}\n\nfunction generatePatrolJob(seed: string, entity: PersonEntity) {\n\tconst start = entity.location;\n\tconst island = start.terrain?.getIslands().find(island => island.includes(start));\n\tif (!island) {\n\t\t// Expect to never throw this:\n\t\tthrow new Error('Got falsy start from none of the islands');\n\t}\n\n\treturn new PatrolJob(entity, [\n\t\t...repeat(2 + Math.floor(Random.float(entity.id, 'job', 'waypoint_amount') * 4), i =>\n\t\t\tRandom.arrayItem(island, entity.id, 'job', 'waypoint', i)\n\t\t),\n\t\tstart\n\t]);\n}\n\nexport function generateEntities(seed: string, terrain: Terrain) {\n\tconst walkableTiles = terrain.coordinates.filter(c => c.isLand());\n\t// const islands = terrain.getIslands();\n\n\tconst amountOfGuards = 0;\n\tconst amountOfCivilians = 10;\n\treturn [\n\t\t...repeat(amountOfGuards, i => {\n\t\t\tconst id = seed + '-guard-' + i;\n\t\t\tconst start = Random.arrayItem(walkableTiles, id, 'start');\n\t\t\tconst guard = new GuardEntity(id, start);\n\t\t\tconst job = generatePatrolJob(seed, guard);\n\t\t\tguard.doJob(job);\n\t\t\treturn guard;\n\t\t}),\n\t\t...repeat(amountOfCivilians, i => {\n\t\t\tconst id = seed + '-person-' + i;\n\t\t\tconst start = Random.arrayItem(walkableTiles, id, 'start');\n\t\t\tconst worker = new CivilianEntity(id, start);\n\t\t\tworker.doJob(new LoiterJob(worker));\n\t\t\treturn worker;\n\t\t})\n\t];\n}\n","import { InGameDistance } from '../space/PERSPECTIVE';\nexport interface CoordinateLike {\n\tx: InGameDistance;\n\ty: InGameDistance;\n\tz: InGameDistance;\n}\n\nexport type CoordinateArray = [InGameDistance, InGameDistance, InGameDistance];\n\nexport class Coordinate implements CoordinateLike {\n\tx: InGameDistance;\n\ty: InGameDistance;\n\tz: InGameDistance;\n\n\tconstructor(x: InGameDistance, y: InGameDistance, z: InGameDistance) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tequals(coord: CoordinateLike) {\n\t\treturn (\n\t\t\tthis === coord ||\n\t\t\t(coord && this.x === coord.x && this.y === coord.y && this.z === coord.z)\n\t\t);\n\t}\n\n\ttransform(dx: InGameDistance = 0, dy: InGameDistance = 0, dz: InGameDistance = 0) {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.z += dz;\n\n\t\treturn this;\n\t}\n\n\thasNaN() {\n\t\treturn isNaN(this.x) || isNaN(this.y) || isNaN(this.z);\n\t}\n\n\tmanhattanDistanceTo(coord: CoordinateLike) {\n\t\treturn Math.abs(this.x - coord.x) + Math.abs(this.y - coord.y) + Math.abs(this.z - coord.z);\n\t}\n\n\teuclideanDistanceTo(coord: CoordinateLike) {\n\t\tconst xy = Math.sqrt((this.x - coord.x) ** 2 + (this.y - coord.y) ** 2);\n\t\tconst xyz = Math.sqrt(xy ** 2 + (this.z - coord.z) ** 2);\n\t\treturn xyz;\n\t}\n\n\t// For debugging purposes only, may change without notice or tests\n\ttoString() {\n\t\treturn [this.x, this.y, this.z].join(',');\n\t}\n\n\tstatic clone(coord: CoordinateLike) {\n\t\treturn new Coordinate(coord.x, coord.y, coord.z);\n\t}\n}\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { CoordinateArray } from '../classes/Coordinate';\nimport { color } from '../styles';\n\nimport { PERSPECTIVE } from './PERSPECTIVE';\n\nconst BORDER_WIDTH = 1;\nconst BORDER_NODES: CoordinateArray[] = [\n\t[1, 0, 0],\n\t[1, 1, 0],\n\t[0, 1, 0],\n\t[0, 0, 0]\n];\n\nlet spatialCoordinates = BORDER_NODES.map(coordinate =>\n\tPERSPECTIVE.toPixels(...coordinate)\n).map(cc => cc.map(c => c + BORDER_WIDTH));\n\nexport const MonochromeTile: FunctionComponent<\n\tOmit<React.SVGProps<SVGPolygonElement>, 'fill' | 'stroke'> & {\n\t\tzoom?: number;\n\t\tfill?: Color;\n\t\tstroke?: Color;\n\t}\n> = ({\n\tfill = color.terrain,\n\tstroke = fill.darken(0.3).saturate(0.3),\n\tstrokeWidth = BORDER_WIDTH,\n\tzoom = 1,\n\t...rest\n}) => {\n\treturn (\n\t\t<polygon\n\t\t\tpoints={spatialCoordinates.map(c => c.map(c => c * zoom).join(',')).join(' ')}\n\t\t\tstroke={stroke.string()}\n\t\t\tfill={fill.string()}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n","import { FunctionComponent, useState } from 'react';\nimport { Coordinate, CoordinateLike } from './Coordinate';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { MonochromeTile } from '../space/MonochromeTile';\nimport { Terrain } from './Terrain';\nimport { color } from '../styles';\nimport { SvgMouseInteractionProps } from '../types';\n\n/**\n * A special type of coordinate that is equal to another terrain coordinate when the X and Y are equal, disregarding Z.\n */\nexport class TerrainCoordinate extends Coordinate {\n\tterrain?: Terrain;\n\n\tequals(coord: CoordinateLike) {\n\t\treturn this === coord || (coord && this.x === coord.x && this.y === coord.y);\n\t}\n\tstatic clone(coord: CoordinateLike | TerrainCoordinate) {\n\t\tconst coord2 = new TerrainCoordinate(coord.x, coord.y, coord.z);\n\t\tcoord2.terrain = (coord as TerrainCoordinate).terrain;\n\t\treturn coord2;\n\t}\n\n\tisLand() {\n\t\treturn this.z > 0;\n\t}\n\t// For debugging purposes only, may change without notice or tests\n\ttoString() {\n\t\treturn '(' + [this.x, this.y].join(',') + ')';\n\t}\n}\n\n/**\n * A component that automatically transitions the entity component as per its move instructions\n */\nexport const TerrainCoordinateComponent: FunctionComponent<\n\tSvgMouseInteractionProps & {\n\t\tterrainCoordinate: TerrainCoordinate;\n\t}\n> = ({ terrainCoordinate, ...svgMouseInteractionProps }) => {\n\tconst [isHovered, setIsHovered] = useState(false);\n\tconst translated = Coordinate.clone(terrainCoordinate).transform(\n\t\t-0.5,\n\t\t-0.5,\n\t\tterrainCoordinate.z < 0 ? -terrainCoordinate.z - 0.5 : -1\n\t);\n\treturn (\n\t\t<Anchor key={translated.toString()} x={translated.x} y={translated.y} z={translated.z}>\n\t\t\t{terrainCoordinate.z > 0 ? (\n\t\t\t\t<MonochromeBox\n\t\t\t\t\tfill={isHovered ? color.highlightedTerrain : color.terrain}\n\t\t\t\t\tstroke={isHovered ? color.white : undefined}\n\t\t\t\t\tinnerStroke={\n\t\t\t\t\t\tisHovered ? color.highlightedTerrain.mix(color.white, 0.6) : undefined\n\t\t\t\t\t}\n\t\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t\t\t{...svgMouseInteractionProps}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<MonochromeTile\n\t\t\t\t\tfill={(isHovered ? color.highlightedTerrain : color.terrain).opaquer(-0.5)}\n\t\t\t\t\tstroke={isHovered ? color.white : undefined}\n\t\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t\t\t{...svgMouseInteractionProps}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Anchor>\n\t);\n};\n","import seedrandom from 'seedrandom';\n\ntype Seed = Array<string | number | boolean>;\n\nexport class Random {\n\tstatic float(...seed: Seed): number {\n\t\treturn seedrandom(seed.join('/')).double();\n\t}\n\tstatic arrayItem<P>(arr: P[], ...seed: Seed) {\n\t\tconst index = Math.floor(this.float(...seed) * arr.length);\n\t\treturn arr[index];\n\t}\n}\n","/**\n * Adapted from\n *   https://github.com/hunterloftis/playfuljs-demos/blob/gh-pages/terrain/index.html#L118\n */\n\nimport { Random } from '../util/Random';\n\nexport const OUT_OF_BOUNDS = Symbol();\n\nfunction average(values: Array<number | typeof OUT_OF_BOUNDS>) {\n\tvar valid = values.filter((val): val is number => typeof val === 'number');\n\tvar total = valid.reduce<number>((sum, val) => sum + val, 0);\n\treturn total / valid.length;\n}\n\nexport class TerrainGenerator {\n\tprivate size: number;\n\tprivate max: number;\n\tprivate map: Float32Array;\n\tprivate seed;\n\n\tconstructor(seed: string, size: number) {\n\t\tthis.seed = seed;\n\t\tconst detail = Math.ceil(Math.log(size) / Math.log(2));\n\t\tthis.size = Math.pow(2, detail) + 1;\n\t\tthis.max = this.size - 1;\n\t\tthis.map = new Float32Array(this.size * this.size);\n\t}\n\n\tpublic generate(roughness: number) {\n\t\tthis.set(0, 0, this.max);\n\t\tthis.set(this.max, 0, this.max / 2);\n\t\tthis.set(this.max, this.max, 0);\n\t\tthis.set(0, this.max, this.max / 2);\n\n\t\tthis.divide(this.max, roughness);\n\t}\n\n\tpublic get(x: number, y: number) {\n\t\tif (x < 0 || x > this.max || y < 0 || y > this.max) {\n\t\t\treturn OUT_OF_BOUNDS;\n\t\t}\n\t\treturn this.map[x + this.size * y];\n\t}\n\n\tprivate set(x: number, y: number, val: number) {\n\t\tthis.map[x + this.size * y] = val;\n\t}\n\n\tprivate divide(size: number, roughness: number) {\n\t\tvar x,\n\t\t\ty,\n\t\t\thalf = size / 2;\n\t\tvar scale = roughness * size;\n\t\tif (half < 1) return;\n\n\t\tfor (y = half; y < this.max; y += size) {\n\t\t\tfor (x = half; x < this.max; x += size) {\n\t\t\t\tthis.square(\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\thalf,\n\t\t\t\t\tRandom.float(this.seed, size, 'square', x, y) * scale * 2 - scale\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tfor (y = 0; y <= this.max; y += half) {\n\t\t\tfor (x = (y + half) % size; x <= this.max; x += size) {\n\t\t\t\tthis.diamond(\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\thalf,\n\t\t\t\t\tRandom.float(this.seed, size, 'square', x, y) * scale * 2 - scale\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.divide(size / 2, roughness);\n\t}\n\n\tprivate square(x: number, y: number, size: number, offset: number) {\n\t\tvar ave = average([\n\t\t\tthis.get(x - size, y - size), // upper left\n\t\t\tthis.get(x + size, y - size), // upper right\n\t\t\tthis.get(x + size, y + size), // lower right\n\t\t\tthis.get(x - size, y + size) // lower left\n\t\t]);\n\t\tthis.set(x, y, ave + offset);\n\t}\n\n\tprivate diamond(x: number, y: number, size: number, offset: number) {\n\t\tvar ave = average([\n\t\t\tthis.get(x, y - size), // top\n\t\t\tthis.get(x + size, y), // right\n\t\t\tthis.get(x, y + size), // bottom\n\t\t\tthis.get(x - size, y) // left\n\t\t]);\n\t\tthis.set(x, y, ave + offset);\n\t}\n}\n","import Color from 'color';\nimport React, { FunctionComponent } from 'react';\nimport { Coordinate } from '../classes/Coordinate';\nimport { Anchor } from '../space/Anchor';\nimport { MonochromeBox } from '../space/MonochromeBox';\nimport { PersonEntity } from './PersonEntity';\n\nconst zoom = 0.25;\nconst translate = zoom / 2;\nconst offset = new Coordinate(-translate, -translate, -translate / 2);\n\nexport class GuardEntity extends PersonEntity {\n\tpublic get label(): string {\n\t\treturn `Guardsman ${this.passport.firstName}`;\n\t}\n\n\tComponent: FunctionComponent = () => {\n\t\treturn (\n\t\t\t<Anchor {...offset}>\n\t\t\t\t<MonochromeBox\n\t\t\t\t\tsize={zoom}\n\t\t\t\t\tfill={Color('#227d5e')}\n\t\t\t\t\tstroke={Color('#227d5e').mix(Color('#000'), 0.3)}\n\t\t\t\t\tinnerStroke={Color('#227d5e').mix(Color('#fff'), 0.3)}\n\t\t\t\t/>\n\t\t\t</Anchor>\n\t\t);\n\t};\n}\n","import { Entity } from '../entities/Entity';\n\nexport class Job<E = Entity> {\n\tentity: E;\n\tconstructor(entity: E) {\n\t\tthis.entity = entity;\n\t}\n\n\tget label(): string {\n\t\tthrow new Error(`Not implemented for ${this.constructor.name}`);\n\t}\n\n\tstart() {\n\t\tthrow new Error(`Not implemented for ${this.constructor.name}`);\n\t}\n}\n","import { TerrainCoordinate } from '../classes/TerrainCoordinate';\nimport { PersonEntity } from '../entities/PersonEntity';\nimport { Job } from './Job';\n\nexport class PatrolJob extends Job<PersonEntity> {\n\twaypoints: TerrainCoordinate[];\n\twaypointIndex: number;\n\n\tconstructor(entity: PersonEntity, waypoints: TerrainCoordinate[]) {\n\t\tsuper(entity);\n\t\tif (waypoints.length < 2) {\n\t\t\tthrow new Error('A patrol must have at least 2 waypoints');\n\t\t}\n\t\tthis.waypoints = waypoints;\n\t\tthis.waypointIndex = 0;\n\t}\n\n\tget label() {\n\t\treturn `Patrolling between ${this.waypoints.length} waypoints`;\n\t}\n\n\tstart() {\n\t\tconst destroyers = [\n\t\t\tthis.entity.pathEnd.on(() => {\n\t\t\t\t// Guards move from one waypoint to another, pausing for a random amount of time in between\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.waypointIndex += 1;\n\t\t\t\t\tconst next = this.waypoints[this.waypointIndex % this.waypoints.length];\n\t\t\t\t\tthis.entity.walkTo(next);\n\t\t\t\t}, 3000);\n\t\t\t})\n\t\t];\n\n\t\tthis.entity.walkTo(this.waypoints[0]);\n\n\t\treturn () => {\n\t\t\tdestroyers.forEach(d => d());\n\t\t};\n\t}\n}\n","import { PersonEntity } from '../entities/PersonEntity';\nimport { Random } from '../util/Random';\nimport { Job } from './Job';\n\nexport class LoiterJob extends Job<PersonEntity> {\n\t// The minimum and maximum amounts of ms before considering to move again, after having walked\n\tprivate walkMinWait = 2000;\n\tprivate walkMaxWait = 10000;\n\n\t// Every time that the entity might make a move, there's a good chance that they'll change their\n\t//   mind and lazy out instead.\n\tprivate walkChanceOnRoll = 0.3;\n\n\t// If the entity chooses to walk, its no more than this amount of times\n\tprivate walkMaxDistance = 7;\n\n\tget label() {\n\t\treturn `Loitering`;\n\t}\n\n\tstart() {\n\t\tlet steps = 0;\n\t\tconst doTimeout = () =>\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (Math.random() > this.walkChanceOnRoll) {\n\t\t\t\t\tdoTimeout();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsteps++;\n\t\t\t\tconst destinations =\n\t\t\t\t\tthis.entity.location?.terrain?.selectClosestNeigbors(\n\t\t\t\t\t\tthis.entity.location,\n\t\t\t\t\t\tthis.walkMaxDistance\n\t\t\t\t\t) || [];\n\t\t\t\tthis.entity.walkTo(\n\t\t\t\t\tRandom.arrayItem(destinations, this.entity.id, 'roam-destination', steps)\n\t\t\t\t);\n\t\t\t}, this.walkMinWait + Random.float(this.entity.id, 'roam-delay', steps) * (this.walkMaxWait - this.walkMinWait));\n\n\t\tconst destroyers = [this.entity.pathEnd.on(doTimeout)];\n\n\t\tdoTimeout();\n\n\t\treturn () => destroyers.forEach(d => d());\n\t}\n}\n","import { Entity } from '../entities/Entity';\nimport { generateEntities as generateHelloWorldEntities } from '../generators/hello-world';\nimport { Terrain } from './Terrain';\n\nexport class Scene {\n\tpublic readonly terrain: Terrain;\n\n\t// @TODO change to not readonly, and handle spontaneous changes\n\tpublic readonly entities: Entity[];\n\n\tpublic readonly seed;\n\n\tconstructor(seed: string, terrain: Terrain, entities: Entity[]) {\n\t\tthis.seed = seed;\n\t\tthis.terrain = terrain;\n\t\tthis.entities = entities;\n\t}\n\n\tplay() {\n\t\tconst destroyers = this.entities.map(entity => entity.play());\n\t\treturn () => destroyers.forEach(d => d());\n\t}\n\n\tstatic generateRandom(seed: string, size: number) {\n\t\tconst terrain = Terrain.generateRandom(seed, size);\n\t\tconst entities = generateHelloWorldEntities(seed, terrain);\n\t\treturn new Scene(seed, terrain, entities);\n\t}\n}\n","// const ActiveEntityOverlay: FunctionComponent = ({ children }) => null;\n\nimport styled from '@emotion/styled';\nimport React, { FunctionComponent } from 'react';\nimport { Entity } from '../entities/Entity';\n\nconst ActiveEntityOverlayBoundary = styled.div`\n\tbackdrop-filter: blur(2px);\n`;\n\nconst ActiveEntityOverlayBody = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 3px;\n\tpadding: 1em;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\nconst Avatar = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 50%;\n\twidth: 64px;\n\theight: 64px;\n\tjustify-content: center;\n\talign-items: center;\n\tdisplay: flex;\n\tmargin-right: 1em;\n`;\nconst HorizontalLinkList = styled.nav`\n\tdisplay: flex;\n\tflex-direction: row;\n\tfont-size: 60%;\n\ttext-transform: uppercase;\n`;\nconst HorizontalLinkListItem = styled.a`\n\tflex: 0 0 auto;\n\tbackground-color: rgba(255, 255, 255, 0.1);\n\tmargin-right: 3px;\n\n\t// Same as ContextMenuItem\n\tpadding: 0.125em 0.5em;\n\twhite-space: nowrap;\n\ttransition: background-color 0.5s;\n\tcolor: white;\n\t/* background-color: transparent; */\n\t/* background-color: rgba(255, 255, 255, 0.05); */\n\t&:hover {\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\n\t\tcursor: pointer;\n\t}\n`;\nexport const EntityTextBadge: FunctionComponent<{ entity: Entity }> = ({ entity }) => (\n\t<>\n\t\t<p>\n\t\t\t<b>{entity.label}</b>\n\t\t</p>\n\t\t<p>{entity?.job ? entity.job.label : 'Jobless'}</p>\n\t\t<HorizontalLinkList style={{ marginTop: '1em' }}>\n\t\t\t<HorizontalLinkListItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tconsole.group('Selected entity');\n\t\t\t\t\tconsole.log(entity);\n\t\t\t\t\tconsole.groupEnd();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tLOG\n\t\t\t</HorizontalLinkListItem>\n\t\t\t<HorizontalLinkListItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tconsole.warn('Following entity not implemented yet', entity);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tFOLLOW\n\t\t\t</HorizontalLinkListItem>\n\t\t</HorizontalLinkList>\n\t</>\n);\nexport const ActiveEntityOverlay: FunctionComponent<{ entity?: Entity; zoom?: number }> = ({\n\tentity,\n\tzoom = 4\n}) => (\n\t<ActiveEntityOverlayBoundary>\n\t\t<ActiveEntityOverlayBody>\n\t\t\t<Avatar>\n\t\t\t\t{entity && (\n\t\t\t\t\t<svg\n\t\t\t\t\t\twidth=\"1\"\n\t\t\t\t\t\theight=\"1\"\n\t\t\t\t\t\toverflow=\"visible\"\n\t\t\t\t\t\tshapeRendering=\"geometricPrecision\"\n\t\t\t\t\t\tviewBox={[0, 0, 1 / zoom, 1 / zoom].join(' ')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<entity.Component />\n\t\t\t\t\t</svg>\n\t\t\t\t)}\n\t\t\t</Avatar>\n\t\t\t<div>{entity ? <EntityTextBadge entity={entity} /> : null}</div>\n\t\t</ActiveEntityOverlayBody>\n\t</ActiveEntityOverlayBoundary>\n);\n","import styled from '@emotion/styled';\nimport React, {\n\tcreateContext,\n\tFunctionComponent,\n\tReactElement,\n\tuseContext,\n\tuseEffect,\n\tuseState\n} from 'react';\nimport { CoordinateLike } from '../classes/Coordinate';\nimport { ViewportHtmlContainer } from '../space/Viewport';\nimport { Event } from '../util/Event';\n\nexport const ContextMenuContext = createContext<null | ContextMenuManager>(null);\n\n/**\n * Presentational components\n */\n\nconst ContextMenuArrow = styled.div`\n\twidth: 0;\n\theight: 0;\n\tborder-left: 6px solid transparent;\n\tborder-right: 6px solid transparent;\n\tborder-top: 6px solid rgba(255, 255, 255, 0.5);\n\ttransform: translate(calc(-50% + 0px), -6px);\n`;\n\nconst ContextMenuBoundary = styled.div`\n\tposition: absolute;\n\tbottom: 100%;\n\tleft: 50%;\n\tbackdrop-filter: blur(2px);\n\ttransform: translate(-50%, -6px);\n`;\n\nconst ContextMenuBody = styled.div`\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tborder-radius: 3px;\n\toverflow: hidden;\n`;\n\nexport const ContextMenuButton = styled.button`\n\tborder: none;\n\tdisplay: block;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\n\t// Same as HorizontalLinkListItem\n\tpadding: 0.5em 1em;\n\twhite-space: nowrap;\n\ttransition: background-color 0.5s;\n\tcolor: white;\n\tbackground-color: transparent;\n\t&:hover {\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\n\t\tcursor: pointer;\n\t}\n`;\n\nexport const ContextMenuFooter = styled.button`\n\tborder: none;\n\tdisplay: block;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\n\t// Same as HorizontalLinkListItem\n\tpadding: 0.5em 1em;\n\twhite-space: nowrap;\n\ttransition: background-color 0.5s;\n\tcolor: white;\n\tbackground-color: rgba(255, 255, 255, 0.1);\n`;\n\n/**\n * Logic\n */\ntype ContextManagerState = false | { location: CoordinateLike; contents: ReactElement };\nexport class ContextMenuManager {\n\tpublic state: ContextManagerState = false;\n\tpublic change = new Event<[ContextManagerState]>();\n\n\tinvoke(location: CoordinateLike, contents: ReactElement) {\n\t\tthis.state = { location, contents };\n\t\tthis.change.emit(this.state);\n\t}\n\n\tisOpen() {\n\t\treturn !!this.state;\n\t}\n\n\tclose() {\n\t\tthis.state = false;\n\t\tthis.change.emit(this.state);\n\t}\n}\n\nexport const useContextMenuManager = () => {\n\tconst contextMenuManager = useContext(ContextMenuContext);\n\treturn contextMenuManager;\n};\n\nexport const ContextMenuContainer: FunctionComponent<{ zoom?: number }> = ({ zoom = 1 }) => {\n\tconst contextMenuManager = useContextMenuManager();\n\tconst [managerState, setManagerState] = useState(contextMenuManager?.state);\n\tuseEffect(() => {\n\t\tif (!contextMenuManager) {\n\t\t\tthrow new Error('Shit.');\n\t\t}\n\t\treturn contextMenuManager.change.on(setManagerState);\n\t}, [contextMenuManager]);\n\n\tif (!managerState) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<ViewportHtmlContainer location={managerState.location} width={0} height={0} zoom={zoom}>\n\t\t\t<ContextMenuBoundary>\n\t\t\t\t<ContextMenuBody>{managerState.contents}</ContextMenuBody>\n\t\t\t</ContextMenuBoundary>\n\t\t\t<ContextMenuArrow />\n\t\t</ViewportHtmlContainer>\n\t);\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.section`\n\tposition: absolute;\n\tbottom: 2em;\n\tleft: 2em;\n\n\tfont-family: sans-serif;\n\tcolor: white;\n\n\ta {\n\t\tcolor: inherit;\n\t}\n`;\n","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport { Scene } from '../classes/Scene';\nimport { TerrainCoordinateComponent } from '../classes/TerrainCoordinate';\nimport { Entity } from '../entities/Entity';\nimport { PersonEntity, PersonEntityComponent } from '../entities/PersonEntity';\nimport { Viewport } from '../space/Viewport';\nimport { ActiveEntityOverlay } from '../ui/ActiveEntityOverlay';\nimport {\n\tContextMenuButton,\n\tContextMenuContainer,\n\tContextMenuContext,\n\tContextMenuFooter,\n\tContextMenuManager\n} from '../ui/ContextMenu';\nimport { Overlay } from '../ui/Overlay';\n\nconst WORLD_SIZE = 32;\n\nfunction fancyTimeFormat(seconds: number) {\n\t// Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n\treturn `${~~((seconds % 3600) / 60)}′ ${seconds % 60}″`;\n}\nfunction fakeCoordinates(x: number, y: number) {\n\treturn `40° ${fancyTimeFormat(1000 - x)} N 79° ${fancyTimeFormat(700 - y)} W`;\n}\n\nconst Demo: FunctionComponent = () => {\n\tconst scene = useMemo(() => {\n\t\tconst scene = Scene.generateRandom(String(Date.now()), WORLD_SIZE);\n\t\t(window as any).scene = scene;\n\t\treturn scene;\n\t}, []);\n\n\tconst contextManager = useMemo(() => new ContextMenuManager(), []);\n\n\tconst [center, setCenter] = useState(\n\t\tscene.terrain.getAtXy(Math.floor(WORLD_SIZE / 2), Math.floor(WORLD_SIZE / 2))\n\t);\n\n\tconst [activeEntity, setActiveEntity] = useState<Entity | undefined>(undefined);\n\n\tconst terrain = useMemo(\n\t\t() =>\n\t\t\tscene.terrain.getCoordinatesInRenderOrder().map(terrainCoordinate => (\n\t\t\t\t<TerrainCoordinateComponent\n\t\t\t\t\tkey={terrainCoordinate.toString()}\n\t\t\t\t\tterrainCoordinate={terrainCoordinate}\n\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tcontextManager.invoke(\n\t\t\t\t\t\t\tterrainCoordinate,\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ContextMenuButton onClick={() => setCenter(terrainCoordinate)}>\n\t\t\t\t\t\t\t\t\tCenter camera\n\t\t\t\t\t\t\t\t</ContextMenuButton>\n\t\t\t\t\t\t\t\t<ContextMenuFooter>\n\t\t\t\t\t\t\t\t\t{fakeCoordinates(terrainCoordinate.x, terrainCoordinate.y)}\n\t\t\t\t\t\t\t\t</ContextMenuFooter>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t\tonContextMenu={event => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tsetCenter(terrainCoordinate);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[scene.terrain, contextManager]\n\t);\n\n\tconst entities = useMemo(\n\t\t() =>\n\t\t\tscene.entities\n\t\t\t\t.filter((entity): entity is PersonEntity => entity instanceof PersonEntity)\n\t\t\t\t.map(entity => (\n\t\t\t\t\t<PersonEntityComponent\n\t\t\t\t\t\tkey={entity.id}\n\t\t\t\t\t\tentity={entity}\n\t\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tsetActiveEntity(entity);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)),\n\t\t[scene.entities]\n\t);\n\n\t// Make all the things move!\n\tuseEffect(() => scene.play(), [scene]);\n\n\tuseEffect(() => {\n\t\tconst cb = () => {\n\t\t\tcontextManager.close();\n\t\t};\n\n\t\twindow.addEventListener('click', cb);\n\t\treturn () => window.removeEventListener('click', cb);\n\t}, [contextManager]);\n\n\treturn (\n\t\t<ContextMenuContext.Provider value={contextManager}>\n\t\t\t<Viewport center={center} zoom={1} overlay={<ContextMenuContainer zoom={1} />}>\n\t\t\t\t<g id=\"scene-terrain\">{terrain}</g>\n\t\t\t\t<g id=\"scene-entities\">{entities}</g>\n\t\t\t</Viewport>\n\t\t\t<Overlay>\n\t\t\t\t<ActiveEntityOverlay entity={activeEntity} />\n\t\t\t\t<p style={{ fontSize: '0.8em', opacity: '0.5' }}>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://github.com/wvbe/kreuzzeug-im-nagelhosen\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t\t{'    '}\n\t\t\t\t\tSeed: {scene.seed}\n\t\t\t\t</p>\n\t\t\t</Overlay>\n\t\t</ContextMenuContext.Provider>\n\t);\n};\n\nexport default Demo;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport DemoCubes from './demos/demo.cubes';\nimport SceneHelloWorld from './demos/scene.hello-world';\n\nfunction Demos() {\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/tests\">Tests</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Route exact path=\"/tests\" component={DemoCubes} />\n\t\t</>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={SceneHelloWorld} />\n\t\t\t<Route component={Demos} />\n\t\t</Switch>\n\t);\n}\n\nexport default App;\n","import { Global } from '@emotion/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport globalStyleRules from './styles';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Global styles={globalStyleRules} />\n\t\t<HashRouter hashType={'slash'}>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}